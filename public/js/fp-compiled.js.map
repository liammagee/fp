{"version":3,"sources":["fp.js"],"names":[],"mappings":"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","file":"fp-compiled.js","sourcesContent":["require.config({\n    baseUrl: \"../js\",\n    paths: {\n        jquery: \"utils/jquery\"\n    },\n    shim: {\n        jquery: { exports: \"$\" },\n        \"utils/underscore\": { exports: \"_\" },\n        \"utils/jstat.min\": { exports: \"jStat\" },\n        \"utils/jsts\": [ \"utils/javascript.util\" ],\n        \"ux/dat.gui\": { exports: \"dat.gui\" },\n        \"ux/smoothie\": { exports: \"SmoothieChart\" },\n        \"ux/stats.min\": { exports: \"Stats\" },\n        \"three\": { exports: \"THREE\" },\n        \"objects/Mirror\": [ \"three\" ],\n        \"objects/water-material\": { exports: \"THREE.Water\", deps: [ \"three\", \"objects/Mirror\" ] },\n        \"loaders/TerrainLoader\": { deps: [ \"three\" ] },\n        \"controls/TrackballControls\": { deps: [ \"three\" ] },\n        \"controls/OrbitControls\": { deps: [ \"three\" ] },\n        \"controls/PointerLockControls\": { deps: [ \"three\" ] }\n    }\n});\ndefine( [\n    \"jquery\",\n    \"three\",\n    \"utils/underscore\",\n    \"utils/astar\",\n    \"utils/jstat.min\",\n    \"utils/jsts\",\n    \"ux/dat.gui\",\n    \"ux/smoothie\",\n    \"ux/stats.min\",\n    \"loaders/TerrainLoader\",\n    \"objects/Mirror\",\n    \"objects/water-material\",\n    \"controls/THREEx.KeyboardState\",\n    \"controls/TrackballControls\",\n    \"controls/OrbitControls\",\n    \"controls/PointerLockControls\"\n    ], function( $, THREE, _, astar ) {\n    \"use strict\";\n\n    /**\n     * Extension to JQuery for URL param extraction - taken from: http://www.sitepoint.com/url-parameters-jquery/ .\n     */\n    $.urlParam = function( name ){\n        var results = new RegExp( \"[ \\\\?& ]\" + name + \"=( [ ^&# ]* )\" ).exec( window.location.href );\n        if ( results === null ) {\n           return undefined;\n        }\n        else {\n           return results[ 1 ] || 0;\n        }\n    };\n\n    $.sign = function( x ) {\n        return typeof x === \"number\" ? x ? x < 0 ? -1 : 1 : x === x ? 0 : NaN : NaN;\n    };\n\n\n    /**\n     * Overall Fierce Planet object.\n     *\n     * @module fp\n     * @namespace fp\n     */\n    var FiercePlanet = function() {\n\n        var fp = this;\n        this.container = null;\n        this.scene = null;\n        this.appConfig = null;\n        this.camera = null;\n        this.renderer = null;\n        this.clock = new THREE.Clock();\n        this.mouse = { x: 0, y: 0, z: 1 };\n        this.mouseVector = new THREE.Vector3();\n        this.keyboard = new THREEx.KeyboardState();\n        this.stats = null;\n        this.terrain = null;\n        this.controls = null;\n        this.gui = null;\n        this.chart = null;\n        this.ray = new THREE.Raycaster( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 0, 0 ) );\n        this.skyBox = null;\n        this.waterMesh = null;\n        this.water = null;\n        this.agentNetwork = null;\n        this.pathNetwork = null;\n        this.trailNetwork = null;\n        this.cursor = null;\n        this.sim = null;\n        this.lightHemisphere = null;\n        this.lightDirectional = null;\n\n        /**\n         * Represents a network of agents. Also provides factory and utility methods.\n         *\n         * @constructor\n         * @memberof fp\n         * @inner\n         */\n        this.AgentNetwork = function() {\n\n            /**\n             * Represents a specific network within the overall network configuration. Also provides factory and utility methods.\n             *\n             * @constructor\n             * @memberof fp.AgentNetwork\n             * @inner\n             */\n            this.AgentNetworkNetwork = function( color ) {\n                this.links = [ ];\n                this.networkColor = color;\n                this.networkMesh = null;\n\n                this.AgentNetworkNetworkLink = function( agent1, agent2 ) {\n                    this.agent1 = agent1;\n                    this.agent2 = agent2;\n                };\n\n                /**\n                 * Generates a set of vertices for connected agents.\n                 *\n                 * @return {vertices}\n                 */\n                this.generateFriendNetworkVertices = function() {\n                    var vertices = [ ];\n                    for ( var i = 0; i < this.links.length; i++ ) {\n                        var link = this.links[ i ];\n                        var agent1 = link.agent1,\n                            agent2 = link.agent2;\n                        var p1 = fp.terrain.transformPointFromPlaneToSphere( agent1.position.clone(), fp.terrain.wrappedPercent ),\n                            p2 = fp.terrain.transformPointFromPlaneToSphere( agent2.position.clone(), fp.terrain.wrappedPercent );\n                        p1.y += fp.appConfig.agentOptions.size / 8;\n                        p2.y += fp.appConfig.agentOptions.size / 8;\n                        vertices.push( p2 );\n                        vertices.push( p1 );\n                    }\n                    return vertices;\n                };\n\n                /**\n                 * Generates a curved geometry to represent the agent network.\n                 *\n                 * @param  {Array} vertices\n                 * @return {THREE.Geometry}\n                 */\n                this.friendNetworkGeometryCurved = function( vertices ) {\n                    var networkGeometry = new THREE.Geometry();\n                    var len = vertices.length;\n                    var spline = new THREE.Spline( vertices );\n                    var subN = fp.appConfig.displayOptions.networkCurvePoints;\n                    var position, index;\n                    for ( var i = 0; i < len * subN; i++ ) {\n                        index = i / ( len * subN );\n                        position = spline.getPoint( index );\n                        networkGeometry.vertices[ i ] = new THREE.Vector3( position.x, position.y, position.z );\n                    }\n                    return networkGeometry;\n                };\n\n                /**\n                 * Generates a geometry ( curved or straight ) to represent the agent network.\n                 *\n                 * @param  {Array} vertices\n                 * @return {THREE.Geometry}\n                 */\n                this.friendNetworkGeometry = function( vertices ) {\n                    if ( !fp.appConfig.displayOptions.networkCurve ) {\n                        var networkGeometry = new THREE.Geometry();\n                        networkGeometry.vertices = vertices;\n                        return networkGeometry;\n                    }\n                    else {\n                        return this.friendNetworkGeometryCurved( vertices );\n                    }\n                };\n\n                /**\n                 * Returns a material for the network.\n                 *\n                 * @return {THREE.LineBasicMaterial}\n                 */\n                this.friendNetworkMaterial = function() {\n                    return new THREE.LineBasicMaterial( {\n                        color: this.networkColor || fp.appConfig.colorOptions.colorNightNetwork,\n                        linewidth: 1,\n                        opacity: 1.0,\n                        blending: THREE.NormalBlending,\n                        transparent: false\n                    } );\n                };\n\n                /**\n                 * Renders the agent network, creating an array of vertices and material and return a mesh of type THREE.Line.\n                 *\n                 * @return {THREE.Line}\n                 */\n                this.renderFriendNetwork = function() {\n                    if ( !fp.AppState.runSimulation || !fp.appConfig.displayOptions.networkShow ) {\n                        return;\n                    }\n\n                    if ( !_.isUndefined( this.networkMesh ) ) {\n                        fp.scene.remove( this.networkMesh );\n                    }\n                    if ( fp.appConfig.displayOptions.networkCurve ) {\n                        this.networkMesh = new THREE.Line(\n                            this.friendNetworkGeometry( this.generateFriendNetworkVertices() ),\n                            this.friendNetworkMaterial()\n                        );\n                    }\n                    else {\n                        this.networkMesh = new THREE.Line(\n                            this.friendNetworkGeometry( this.generateFriendNetworkVertices() ),\n                            this.friendNetworkMaterial(),\n                            THREE.LineSegments\n                        );\n                    }\n                    fp.scene.add( this.networkMesh );\n                };\n\n                /**\n                 * Establish a link between two agents.\n                 *\n                 * @param  {fp.Agent} agent1\n                 * @param  {fp.Agent} agent2\n                 */\n                this.establishLink = function( agent1, agent2 ) {\n                    // Introduce more variability by squaring the probability\n                    var chance = Math.pow( fp.appConfig.agentOptions.chanceToJoinNetwork, 2 );\n                    var chanceWithHome = Math.pow( fp.appConfig.agentOptions.chanceToJoinNetworkWithHome, 2 );\n                    var chanceWithBothHomes = Math.pow( fp.appConfig.agentOptions.chanceToJoinNetworkWithBothHomes, 2 );\n                    var link1, link2;\n                    if ( Math.random() < chance ) {\n                        // Add the other agent if it is not already contained in\n                        // either agent's existing connections\n                        link1 = new this.AgentNetworkNetworkLink( agent1, agent2 );\n                        link2 = new this.AgentNetworkNetworkLink( agent2, agent1 );\n                        if ( this.links.indexOf( link1 ) === -1 &&\n                             this.links.indexOf( link2 ) === -1 ) {\n                            this.links.push( link1 );\n                        }\n                    }\n                    if ( Math.random() < chanceWithHome && ( agent1.home !== null || agent2.home !== null ) ) {\n                        // Add the other agent if it is not already contained in\n                        // either agent's existing connections\n                        link1 = new this.AgentNetworkNetworkLink( agent1, agent2 );\n                        link2 = new this.AgentNetworkNetworkLink( agent2, agent1 );\n                        if ( this.links.indexOf( link1 ) === -1 &&\n                             this.links.indexOf( link2 ) === -1 ) {\n                            this.links.push( link1 );\n                        }\n                    }\n                    if ( Math.random() < chanceWithBothHomes && agent1.home !== null && agent2.home !== null ) {\n                        // Add the other agent if it is not already contained in\n                        // either agent's existing connections\n                        link1 = new this.AgentNetworkNetworkLink( agent1, agent2 );\n                        link2 = new this.AgentNetworkNetworkLink( agent2, agent1 );\n                        if ( this.links.indexOf( link1 ) === -1 &&\n                             this.links.indexOf( link2 ) === -1 ) {\n                            this.links.push( link1 );\n                        }\n                    }\n                };\n\n                /**\n                 * Tries to enlist an agent in this network.\n                 *\n                 * @param {fp.Agent} agent\n                 */\n                this.enlistAgent = function( agent ) {\n                    var agents = fp.patchNetwork.patches[ fp.getPatchIndex( agent.position.x, agent.position.z ) ];\n                    if ( _.isUndefined( agents ) ) {\n                        return;\n                    }\n                    if ( agents.length <= 1 ) {\n                        return;\n                    }\n                    for ( var i = 0; i < agents.length; i++ ) {\n                        if ( agents[ i ] === agent ) {\n                            continue;\n                        }\n                        var otherAgent = agents[ i ];\n                        this.establishLink( agent, otherAgent );\n                    }\n                };\n\n                /**\n                 * Updates the friend network at runtime, by building and rendering the network.\n                 */\n                this.updateAgentNetworkRendering = function() {\n                    if ( !fp.AppState.runSimulation ) {\n                        return;\n                    }\n\n                    this.renderFriendNetwork();\n                };\n\n            };\n\n            /**\n             * Creates an initial set of agents.\n             */\n            this.createInitialAgentPopulation = function() {\n                for ( var i = 0; i < fp.appConfig.agentOptions.initialPopulation; i++ ) {\n                    this.agents.push( this.createAgent() );\n                }\n                this.buildAgentParticleSystem();\n            };\n\n            /**\n             * Creates a single agent\n             * @return {fp#Agent}\n             */\n            this.createAgent = function() {\n                var position = new THREE.Vector3();\n                var point = this.randomPointForAgent();\n                var x = point.x;\n                var z = point.z;\n                var y = fp.getHeight( x, z ) +\n                        fp.appConfig.agentOptions.terrainOffset +\n                        fp.appConfig.agentOptions.size / 2;\n                position.x = x;\n                position.y = y;\n                position.z = z;\n\n                // Allow for the class to be overridden\n                var agent = new fp.agentNetwork.AgentClass();\n                agent.setPosition( position );\n                agent.setRandomDirection();\n\n                agent.color = \"#\" + ( fp.appConfig.displayOptions.dayShow ?\n                                      fp.appConfig.colorOptions.colorDayAgent.toString( 16 ) :\n                                      fp.appConfig.colorOptions.colorNightAgent.toString( 16 ) );\n                return agent;\n            };\n\n            /**\n             * Finds a random point on the fp.terrain where the agent can be generated.\n             *\n             * @return {coordinate}\n             */\n            this.randomPointForAgent = function() {\n                var extent = fp.appConfig.terrainOptions.gridExtent;\n                var initExtent = ( fp.appConfig.agentOptions.initialExtent / 100 ) * extent * fp.appConfig.terrainOptions.multiplier;\n                var initX = ( fp.appConfig.agentOptions.initialX / 100 ) * extent - ( extent / 2 );\n                var initY = ( fp.appConfig.agentOptions.initialY / 100 ) * extent - ( extent / 2 );\n                var x = Math.floor( ( Math.random() - 0.5 ) * initExtent ) + initX;\n                var z = Math.floor( ( Math.random() - 0.5 ) * initExtent ) + initY;\n                var point = null;\n\n                if ( fp.appConfig.agentOptions.initialCircle ) {\n                    var normX = x - initX, normZ = z - initY;\n                    var radius = Math.sqrt( normX * normX + normZ * normZ );\n                    while ( radius > initExtent / 2 ) {\n                        point = this.randomPointForAgent();\n                        x = point.x;\n                        z = point.z;\n                        normX = x - initX;\n                        normZ = z - initY;\n                        radius = Math.sqrt( normX * normX + normZ * normZ );\n                    }\n                }\n\n                var boundary = ( extent / 2 ) * fp.appConfig.terrainOptions.multiplier;\n                while ( ( x < -boundary || x > boundary ) || ( z < -boundary || z > boundary ) ) {\n                    point = this.randomPointForAgent();\n                    x = point.x;\n                    z = point.z;\n                }\n\n                if ( fp.appConfig.agentOptions.noWater ) {\n                    var y = fp.getHeight( x, z );\n                    while ( y < 0 ) {\n                        point = this.randomPointForAgent();\n                        x = point.x;\n                        z = point.z;\n                        y = fp.getHeight( x, z );\n                    }\n                }\n                return { x: x, z: z };\n            };\n\n            /**\n             * Updates the agent network shader at runtime.\n             */\n            this.updateAgentShader = function() {\n                if ( !_.isNull( this.agentParticleSystemAttributes ) &&\n                    typeof ( this.agentParticleSystemAttributes.color ) !== \"undefined\" &&\n                    this.agentParticleSystemAttributes.color.value.length > 0 ) {\n                    for( var i = 0; i < this.agents.length; i++ ) {\n                        var agent = this.agents[ i ];\n                        if ( fp.appConfig.displayOptions.coloriseAgentsByHealth ) {\n                            var health = agent.health;\n                            var r = 0;\n                            var g = fp.appConfig.displayOptions.dayShow ? 0.0 : 1.0;\n                            var b = fp.appConfig.displayOptions.dayShow ? 1.0 : 0.0;\n                            g *= ( health / 100.0 );\n                            b *= ( health / 100.0 );\n                            r = ( 100 - health ) / 100.0;\n                            var col = new THREE.Color( r, g, b );\n                            this.agentParticleSystemAttributes.alpha.value[ i ] = 0.75;\n                            this.agentParticleSystemAttributes.color.value[ i ] = new THREE.Color( col );\n                        }\n                        else {\n                            this.agentParticleSystemAttributes.alpha.value[ i ] = ( agent.health * 0.0075 ) + 0.025;\n                            this.agentParticleSystemAttributes.color.value[ i ] = new THREE.Color( agent.color );\n                        }\n                    }\n                    this.agentParticleSystemAttributes.color.needsUpdate = true; // important!\n                }\n            };\n\n            /**\n             * Updates all agents belonging to this network.\n             */\n            this.updateAgents = function() {\n                if ( !fp.AppState.runSimulation || _.isUndefined( this.particles ) ) {\n                    return;\n                }\n\n                var agents = this.agents;\n                if ( fp.appConfig.agentOptions.shuffle ) {\n                    agents = _.shuffle( this.agents );\n                }\n\n                for ( var i = 0; i < agents.length; i++ ) {\n                    var agent = agents[ i ];\n\n                    // Depending on the speed of the simulation, determine whether this agent needs to move\n                    var timeToMove = Math.floor( ( i / this.agents.length ) * fp.timescale.framesToYear );\n                    var interval = fp.timescale.frameCounter % fp.timescale.framesToYear;\n                    if ( timeToMove === interval ) {\n                        var underConstruction = agent.build() || agent.buildRoad();\n\n                        if ( underConstruction ) {\n                            continue;\n                        }\n\n                        // No water around or home built? Move on...\n                        agent.evaluateDirection();\n\n                        // Enlist the agent in available networks\n                        if ( fp.appConfig.agentOptions.establishLinks ) {\n                            for (var j = this.networks.length - 1; j >= 0; j--) {\n                                var network = this.networks[ j ];\n                                network.enlistAgent( agent );\n                            }\n                        }\n\n                        // Then add the position to this agent's trail\n                        var ai = fp.getIndex( this.agents[ i ].lastPosition.x, this.agents[ i ].lastPosition.z );\n                        if ( ai > -1 ) {\n                            fp.trailNetwork.trails[ ai ] = ( fp.trailNetwork.trails[ ai ] ) ? fp.trailNetwork.trails[ ai ] + 1 : 1;\n                        }\n\n                        if ( agent.grounded ) {\n                            agent.perturbDirection();\n                        }\n\n                        agent.updateTick();\n                    }\n\n                    // Move the agent\n                    agent.move();\n\n                }\n\n                if ( !_.isNull( this.particles ) ) {\n\n                    for ( var k = 0; k < agents.length; k++ ) {\n                    // for ( var offset = 0, k = 0; k < agents.length; k++ ) {\n\n                        // Must be the original unshuffled collection\n                        var particleAgent = this.agents[ k ];\n                        var posVec = fp.terrain.transformPointFromPlaneToSphere( particleAgent.position, fp.terrain.wrappedPercent );\n                        // this.particles.geometry.attributes.position.array[ offset++ ] = posVec.x; // r072\n                        // this.particles.geometry.attributes.position.array[ offset++ ] = posVec.y; // r072\n                        // this.particles.geometry.attributes.position.array[ offset++ ] = posVec.z; // r072\n                        this.particles.geometry.vertices[ k ] = posVec; // r071\n\n                    }\n\n                    this.particles.geometry.verticesNeedUpdate = true; // r071\n                    // this.particles.geometry.attributes.position.needsUpdate = true; // r072\n\n                }\n            };\n\n            /**\n             * Updates the particle system representing this agent network.\n             */\n            this.updateAgentParticleSystem = function() {\n                // Needs to be updated for r072\n                /*\n                var agentGeometry = new THREE.BufferGeometry();\n                var positions = new THREE.Float32Attribute( this.agents.length * 3, 3 );\n                for (var offset = 0, i = 0; i < this.agents.length - 1; i++ ) {\n                    var agent = this.agents[i];\n                    var posVec = fp.terrain.transformPointFromPlaneToSphere( agent.position, fp.terrain.wrappedPercent );\n                    positions.array[ offset++ ] = posVec.x;\n                    positions.array[ offset++ ] = posVec.y;\n                    positions.array[ offset++ ] = posVec.z;\n                };\n                agentGeometry.addAttribute( 'position', positions );\n                */\n                // r071 and earlier\n                var agentGeometry = new THREE.Geometry();\n                // for (var offset = 0, i = 0; i < this.agents.length - 1; i++ ) {\n                for (var i = 0; i < this.agents.length - 1; i++ ) {\n\n                    var agent = this.agents[i];\n                    var posVec = fp.terrain.transformPointFromPlaneToSphere( agent.position, fp.terrain.wrappedPercent );\n                    agentGeometry.vertices.push( posVec );\n\n                }\n\n                // Shader approach from http://jsfiddle.net/8mrH7/3/\n                this.agentParticleSystemAttributes = {\n                    alpha: { type: \"f\", value: [ ] },\n                    color: { type: \"c\", value: [ ] }\n                };\n\n                for( var j = 0; j < this.agents.length; j++ ) {\n                    this.agentParticleSystemAttributes.alpha.value[ j ] = ( fp.agentNetwork.agents[ j ].health * 0.0075 ) + 0.025;\n                    this.agentParticleSystemAttributes.color.value[ j ] = new THREE.Color( fp.agentNetwork.agents[ j ].color );\n                }\n\n                // point cloud material\n                var agentShaderMaterial = fp.agentNetwork.particles.material;\n                agentShaderMaterial.attributes = this.agentParticleSystemAttributes;\n                fp.scene.remove( fp.agentNetwork.particles );\n                this.particles = new THREE.PointCloud( agentGeometry, agentShaderMaterial );\n                this.particles.dynamic = true;\n                this.particles.sortParticles = true;\n                fp.scene.add( this.particles );\n            };\n\n\n            /**\n             * Creates a set of attributes to represent each agent in the network.\n             */\n            this.buildAgentParticleSystem = function() {\n\n                var agentGeometry = new THREE.Geometry();\n                this.agents.forEach( function( agent ) {\n                    agentGeometry.vertices.push( fp.terrain.transformPointFromPlaneToSphere( agent.position, fp.terrain.wrappedPercent ) );\n                } );\n\n                // Shader approach from http://jsfiddle.net/8mrH7/3/\n                this.agentParticleSystemAttributes = {\n                    alpha: { type: \"f\", value: [] },\n                    color: { type: \"c\", value: [] }\n                };\n\n                var discTexture = THREE.ImageUtils.loadTexture( \"../images/sprites/stickman_180.png\" );\n                if ( !fp.appConfig.agentOptions.useStickman ) {\n                    discTexture = THREE.ImageUtils.loadTexture( \"../images/sprites/disc.png\" );\n                }\n                discTexture.minFilter = THREE.LinearFilter;\n\n                // uniforms\n                var agentParticleSystemUniforms = {\n                    texture: { type: \"t\", value: discTexture },\n                    size: { type: \"f\", value: Math.floor( fp.appConfig.agentOptions.size )}\n                };\n\n                for( var i = 0; i < agentGeometry.vertices.length; i++ ) {\n                    this.agentParticleSystemAttributes.alpha.value[ i ] = ( this.agents[ i ].health * 0.0075 ) + 0.025;\n                    this.agentParticleSystemAttributes.color.value[ i ] = new THREE.Color( this.agents[ i ].color );\n                }\n\n                // point cloud material\n                var agentShaderMaterial = new THREE.ShaderMaterial( {\n                    size: fp.appConfig.agentOptions.size,\n                    uniforms: agentParticleSystemUniforms,\n                    attributes: this.agentParticleSystemAttributes,\n                    vertexShader: fp.ShaderUtils.agentVertexShader(),\n                    fragmentShader: fp.ShaderUtils.agentFragmentShader(),\n                    sizeAttenuation: true,\n                    fog: false,\n                    blending: THREE.NormalBlending,\n                    transparent: true,\n                    alphaTest: 0.5\n                } );\n\n                fp.scene.remove( this.particles );\n                this.particles = new THREE.PointCloud( agentGeometry, agentShaderMaterial );\n                this.particles.dynamic = true;\n                this.particles.sortParticles = true;\n            };\n\n            /**\n             * Wrapper method for updating individual agents, their network and the shader.\n             */\n            this.updateAgentNetwork = function() {\n                this.updateAgents();\n                this.networks.forEach( function( network ) { network.updateAgentNetworkRendering(); } );\n                this.updateAgentShader();\n            };\n\n            this.AgentClass = fp.Agent;\n            this.agents = [ ];\n            this.networks = [ ];\n            this.networks.push( new this.AgentNetworkNetwork() );\n            this.particles = null;\n            this.agentParticleSystemAttributes = null;\n        };\n\n        this.BUILDING_FORMS = {\n            names: [ \"rectangle\", \"octagon\", \"fivesided\", \"triangle\", \"concave\" ],\n            rectangle: function( w, l, h ) {\n                var p1 = new THREE.Vector3( -w / 2, h, -l / 2 );\n                var p2 = new THREE.Vector3( w / 2, h, -l / 2 );\n                var p3 = new THREE.Vector3( w / 2, h, l / 2 );\n                var p4 = new THREE.Vector3( -w / 2, h, l / 2 );\n                return [ p1, p2, p3, p4 ];\n            },\n            octagon: function( w, l, h ) {\n                var p1 = new THREE.Vector3( -w / 2, h, -l / 2 );\n                var p1_5 = new THREE.Vector3( 0, h, -l / 1.5 );\n                var p2 = new THREE.Vector3( w / 2, h, -l / 2 );\n                var p2_5 = new THREE.Vector3( w / 1.5, h, 0 );\n                var p3 = new THREE.Vector3( w / 2, h, l / 2 );\n                var p3_5 = new THREE.Vector3( 0, h, l / 1.5 );\n                var p4 = new THREE.Vector3( -w / 2, h, l / 2 );\n                var p4_5 = new THREE.Vector3( -w / 1.5, h, 0 );\n                return [ p1,p1_5, p2,p2_5, p3,p3_5, p4,p4_5 ];\n            },\n            fivesided: function( w, l, h ) {\n                var p1 = new THREE.Vector3( -w / 2, h, -l / 2 );\n                var p2 = new THREE.Vector3( w / 2, h, -l / 2 );\n                var p3 = new THREE.Vector3( w / 2, h, l / 2 );\n                var p4 = new THREE.Vector3( -w / 2, h, l / 2 );\n                var p5 = new THREE.Vector3( -w, h, 0 );\n                return [ p1, p2, p3, p4, p5 ];\n            },\n            triangle: function( w, l, h ) {\n                var p1 = new THREE.Vector3( -w / 2, h, -l / 2 );\n                var p2 = new THREE.Vector3( w / 2, h, -l / 2 );\n                var p3 = new THREE.Vector3( 0, h, l / 2 );\n                return [ p1, p2, p3 ];\n            },\n            concave: function( w, l, h ) {\n                var p1 = new THREE.Vector3( -w / 2, h, -l / 2 );\n                var p1_1 = new THREE.Vector3( -w / 4, h, -l / 2 );\n                var p1_2 = new THREE.Vector3( -w / 4, h, l / 4 );\n                var p1_3 = new THREE.Vector3( w / 4, h, l / 4 );\n                var p1_4 = new THREE.Vector3( w / 4, h, -l / 2 );\n                var p2 = new THREE.Vector3( w / 2, h, -l / 2 );\n                var p3 = new THREE.Vector3( w / 2, h, l / 2 );\n                var p4 = new THREE.Vector3( -w / 2, h, l / 2 );\n                return [ p1, p1_1, p1_2, p1_3, p1_4, p2, p3, p4 ];\n            }\n        };\n\n        /**\n         * Represents a network of buildings. Also provides factory and utility methods.\n         * @constructor\n         * @memberof fp\n         * @inner\n         */\n        this.BuildingNetwork = function() {\n            this.networkMesh = null;\n            this.networkJstsCache = [ ];\n            this.buildings = [ ];\n            this.buildingHash = {};\n            this.speedOfConstruction = 0.05;\n            this.buildingObject = new THREE.Object3D();\n\n            /**\n             * Evaluation functions to determine proximities for developing buildings.\n             * Currently evaluates for proximity of local roads, water, buildings and building height\n             */\n            this.proximityFunctions = function() {\n                return [\n                    // [ fp.checkProximityOfRoads, fp.appConfig.buildingOptions.roads ],\n                    // [ fp.checkProximityOfWater, fp.appConfig.buildingOptions.water ],\n                    [ fp.checkProximityOfBuildings, fp.appConfig.buildingOptions.otherBuildings ],\n                    [ fp.checkNearestNeighbour, fp.appConfig.buildingOptions.distanceFromOtherBuildingsMin, fp.appConfig.buildingOptions.distanceFromOtherBuildingsMax ],\n                    // [ fp.checkProximiteBuildingHeight, fp.appConfig.buildingOptions.buildingHeight  ]\n                ];\n             };\n\n            /**\n             * Generates a random number of levels, width and length for a building\n             * @return {object} contains levels, width, length properties\n             */\n            this.generateRandomDimensions = function() {\n                return {\n                    levels: fp.appConfig.buildingOptions.minHeight + Math.floor( Math.random() * ( fp.appConfig.buildingOptions.maxHeight - fp.appConfig.buildingOptions.minHeight ) ) ,\n                    width: fp.appConfig.buildingOptions.minWidth + Math.floor( Math.random() * ( fp.appConfig.buildingOptions.maxWidth - fp.appConfig.buildingOptions.minWidth )) ,\n                    length: fp.appConfig.buildingOptions.minLength + Math.floor( Math.random() * ( fp.appConfig.buildingOptions.maxLength - fp.appConfig.buildingOptions.minLength ))\n                };\n            };\n\n            /**\n             * Collision detection, based on the approach described here: http://stemkoski.github.io/Three.js/Collision-Detection.html.\n             * // Simplified 2d alternative for collision detection\n             */\n            this.get2dPoints = function( building ) {\n                var points = [ ];\n                var firstFloor = building.highResMeshContainer.children[ 0 ],\n                    position = building.highResMeshContainer.position,\n                    vertices = firstFloor.geometry.vertices,\n                    ff0 = vertices[ 0 ].clone().applyMatrix4( firstFloor.matrix ).add( building.highResMeshContainer.position ),\n                    ff1 = vertices[ 1 ].clone().applyMatrix4( firstFloor.matrix ).add( building.highResMeshContainer.position ),\n                    ff2 = vertices[ 2 ].clone().applyMatrix4( firstFloor.matrix ).add( building.highResMeshContainer.position ),\n                    ff3 = vertices[ 3 ].clone().applyMatrix4( firstFloor.matrix ).add( building.highResMeshContainer.position ),\n                    wX = ff1.x - ff0.x, wZ = ff1.z - ff0.z, lX = ff3.x - ff0.x, lZ = ff3.z - ff0.z,\n                    wXa = Math.abs( wX ) + 1, wZa = Math.abs( wZ ) + 1, lXa = Math.abs( lX ) + 1, lZa = Math.abs( lZ ) + 1,\n                    wXi = Math.round( wX / wXa ), wZi = Math.round( wZ / wZa ), lXi = Math.round( lX / lXa ), lZi = Math.round( lZ / lZa );\n                var indexPrev = -1, offset = 1;\n                for ( var i = 0; i < wXa; i += offset ) {\n                    for ( var j = 0; j < wZa; j += offset ) {\n                        var wXLocal = ff0.x + i * wXi, wZLocal = ff0.z + j * wZi;\n                        for ( var k = 0; k < lXa; k += offset ) {\n                            for ( var l = 0; l < lZa; l += offset ) {\n                                var lXLocal = wXLocal + k * lXi, lZLocal = wZLocal + l * lZi;\n                                var coordinate = { x: lXLocal, y: lZLocal };\n                                if ( points.indexOf( coordinate ) == -1 ) {\n                                    points.push( coordinate );\n                                }\n                            }\n                        }\n                    }\n                }\n                return points;\n            };\n\n            /**\n             * Get a 2-dimensional array of points representing <em>all</em>\n             * the points covered by the building.\n             * @param  {fp~Building} building\n             * @return {Array} points\n             */\n            this.get2dIndexPoints = function( building ) {\n                return _.map( this.get2dPoints( building ), function( point ) { return fp.getIndex( point.x, point.y ); }  ) ;\n            };\n\n            /**\n             * Get a 2-dimensional array of points representing the bounding box\n             * of the building.\n             * @param  {fp~Building} building\n             * @return {Array} points\n             */\n            this.get2dPointsForBoundingBox = function( building ) {\n                var points = [ ];\n                // var firstFloor = building.highResMeshContainer.children[ 0 ],\n                //     position = building.highResMeshContainer.position,\n                //     vertices = firstFloor.geometry.vertices,\n                //     verticesOnBase = vertices.length;\n                var firstFloor = building.mockMesh,\n                    position = building.highResMeshContainer.position,\n                    vertices = firstFloor.geometry.vertices,\n                    verticesOnBase = vertices.length;\n                for ( var i = 0; i < verticesOnBase / 2; i++ ) {\n                    // Adjust for the vertex's rotation, and add its position\n                    var point  = vertices[ i ].clone().applyMatrix4( firstFloor.matrix );//.add( position );\n                    points.push( { x: point.x, y: point.z } );\n                }\n                return points;\n            };\n\n            /**\n             * Creates a JSTS geometry from the bounding box of the building.\n             * @param  {fp~Building} building\n             * @return {jsts.geom.Polygon}\n             */\n            this.createJstsGeomFromBoundingBox = function( building ) {\n                var points = this.get2dPointsForBoundingBox( building );\n                var coords = _.map( points, function( p ) { return new jsts.geom.Coordinate( p.x, p.y ); } );\n                var lineUnion, j = coords.length - 1;\n                for ( var i = 0; i < coords.length; i++ ) {\n                    var line = new jsts.geom.LineString( [ coords[ i ], coords[ j ] ] );\n                    j = i;\n                    if ( _.isUndefined( lineUnion ) )\n                        lineUnion = line;\n                    else\n                        lineUnion = lineUnion.union( line );\n                }\n                var polygonizer = new jsts.operation.polygonize.Polygonizer();\n                polygonizer.add( lineUnion );\n                var polygon = polygonizer.getPolygons().toArray()[ 0 ];\n                return polygon.buffer( 0 );\n            };\n\n            /**\n             * Checks whether this building collides with any existing buildings.\n             * @param  {fp~Building} building\n             * @return {Boolean}\n             */\n            this.collidesWithOtherBuildings = function( building ) {\n                // Quick check\n                if ( this.buildingHash[ fp.getIndex( building.lod.position.x, building.lod.position.z ) ] )\n                    return true;\n                var buildingGeometry = this.createJstsGeomFromBoundingBox( building );\n                for ( var i = 0; i < this.networkJstsCache.length; i++ ) {\n                    var b = this.networkJstsCache[ i ];\n                    if ( b.intersects( buildingGeometry ) ) {\n                        return true;\n                    }\n                }\n                return false; // Be optimistic\n            };\n\n            /**\n             * Checks whether this building collides with any parts of the road\n             * network.\n             * @param  {fp~Building} building\n             * @return {Boolean}\n             */\n            this.collidesWithRoads = function( building ) {\n                if ( _.isNull( fp.roadNetwork.networkGeometry ) )\n                    return false;\n                var buildingGeometry = this.createJstsGeomFromBoundingBox( building );\n                return fp.roadNetwork.networkGeometry.crosses( buildingGeometry );\n            };\n\n            /**\n             * Updates each building.\n             */\n            this.updateBuildings = function() {\n                if ( !fp.AppState.runSimulation || !fp.appConfig.displayOptions.buildingsShow )\n                    return;\n                for ( var i = 0; i < fp.buildingNetwork.buildings.length; i++ ) {\n                    var building = fp.buildingNetwork.buildings[ i ];\n                    var likelihoodToGrow = Math.random();\n                    if ( likelihoodToGrow > fp.likelihoodOfGrowth() )\n                        building.updateBuilding();\n                }\n            };\n\n            /**\n             * Creates a new building, given a position and dimension\n             * Some of the logic derived from: http://learningthreejs.com/blog/2013/08/02/how-to-do-a-procedural-city-in-100lines/\n             */\n            this.createBuilding = function( position, dimensions ) {\n\n                // Give the building a form\n                var buildingForm = fp.appConfig.buildingOptions.buildingForm;\n                if ( fp.appConfig.buildingOptions.randomForm )\n                    buildingForm = fp.BUILDING_FORMS.names[ Math.floor( Math.random() * fp.BUILDING_FORMS.names.length ) ];\n\n                var rotateY = ( fp.appConfig.buildingOptions.rotateSetAngle / 180 ) * Math.PI;\n                if ( fp.appConfig.buildingOptions.rotateRandomly )\n                    rotateY = Math.random() * Math.PI;\n                var rotation = new THREE.Vector3( 0, rotateY, 0 );\n                var building = new fp.Building( buildingForm, dimensions, position, rotation );\n\n                // Before we add this, try to detect collision\n                if ( fp.appConfig.buildingOptions.detectBuildingCollisions ) {\n                    if ( fp.buildingNetwork.collidesWithOtherBuildings( building ) )\n                        return undefined;\n                }\n\n                if ( fp.appConfig.buildingOptions.detectRoadCollisions ) {\n                    if ( fp.buildingNetwork.collidesWithRoads( building ) )\n                        return undefined;\n                }\n\n                // Handle building rotation\n                var percent = fp.terrain.wrappedPercent;\n                if ( percent > 0 ) {\n                    var cv = _.clone( building.originPosition );\n                    var nv = fp.terrain.transformPointFromPlaneToSphere( cv, 100 );\n                    var v = fp.terrain.sphereOriginAngle( nv.x, nv.y, nv.z ).multiplyScalar( percent / 100 );\n                    v.y = rotateY;\n                    nv = fp.terrain.transformPointFromPlaneToSphere( cv, percent );\n                    building.mesh.rotation.set( -Math.PI / 2 + v.x, -v.z, v.y );\n                    building.mesh.position.set( nv.x, nv.y, nv.z );\n                    building.lod.rotation.set( v.x, v.y, v.z );\n                    building.lod.position.set( nv.x, nv.y, nv.z );\n                    building.highResMeshContainer.rotation.set( v.x, v.y, v.z );\n                    building.highResMeshContainer.position.set( nv.x, nv.y, nv.z );\n                    building.lowResMeshContainer.rotation.set( v.x, v.y, v.z );\n                    building.lowResMeshContainer.position.set( nv.x, nv.y, nv.z );\n                }\n\n                // Add the building to caches\n                fp.buildingNetwork.buildings.push( building );\n                var index = fp.getIndex( position.x, position.z );\n                fp.buildingNetwork.buildingHash[ index ] = building;\n                // Add all ground floor vertices to hash, as crude collision detection\n                // if ( fp.buildingNetwork.networkMesh.children.length === 0 ) {\n                //     fp.buildingNetwork.networkMesh.add( clone );\n                // }\n                // else {\n                //     console.log( fp.buildingNetwork.networkMesh.children[ 0 ].geometry.vertices.length );\n                //     fp.buildingNetwork.networkMesh.children[ 0 ].geometry.merge( building.mesh.geometry, fp.buildingNetwork.networkMesh.children[ 0 ].matrix );\n                //     console.log( fp.buildingNetwork.networkMesh.children[ 0 ].geometry.vertices.length );\n                //     fp.buildingNetwork.networkMesh.children[ 0 ].geometry.verticesNeedUpdate = true;\n                // }\n                if ( fp.appConfig.buildingOptions.detectBuildingCollisions || fp.appConfig.buildingOptions.detectRoadCollisions )\n                    fp.buildingNetwork.networkJstsCache.push( this.createJstsGeomFromBoundingBox( building ) );\n                return building;\n            };\n        };\n\n        /**\n         * Represents a network of roads. Also provides factory and utility methods.\n         * @constructor\n         * @memberof fp\n         * @inner\n         */\n        this.RoadNetwork = function() {\n            this.networkMesh = null;\n            this.planeVertices = [ ];\n            this.networkJstsCache = [ ];\n            this.roads = {};\n            this.indexValues = [ ];\n            this.points = [ ];\n            this.networkGeometry = null;\n            this.intersections = [ ];\n\n            /**\n             * Creates a series of points from a start to end points.\n             * The \"road\" will try to follow the path of least resistance\n             * if the fp.terrain has variable height, effectively \"curving\"\n             * around increases in height.\n             * Taken from webgl_geometry_extrude_splines.html\n             * @param  {THREE.Vector3} p1\n             * @param  {THREE.Vector3} p2\n             * @return {Array} points\n             */\n            this.getRoadTerrainPoints = function( p1, p2 ) {\n                var points = [ ];\n                var xLast = p1.x, yLast = 0, zLast = p1.z, lastChange = 0;\n                var xd = p2.x - xLast, zd = p2.z - zLast;\n                var distance = Math.sqrt( xd * xd + zd * zd ) / fp.appConfig.roadOptions.roadSegments,\n                    remaining = distance;\n                var yOffset = fp.appConfig.terrainOptions.defaultHeight + 20; //fp.appConfig.buildingOptions.levelHeight - 10;\n                p1 = new THREE.Vector3( p1.x, fp.getHeight( p1.x, p1.z ) + yOffset, p1.z );\n                p2 = new THREE.Vector3( p2.x, fp.getHeight( p2.x, p2.z ) + yOffset, p2.z );\n                points.push( p1 );\n                for ( var i = 0; i < distance; i++ ) {\n                    var angle = Math.atan2( zd, xd ),\n                        angleLeft = angle - Math.PI / 2,\n                        angleRight = angle + Math.PI / 2;\n                    var x0 = xLast + xd * ( 1 / ( remaining + 1 )),\n                        z0 = zLast + zd * ( 1 / ( remaining + 1 )),\n                        y0 = fp.getHeight( x0, z0 ) + yOffset;\n                    var x = x0, y = y0, z = z0, k;\n                    for ( var j = 1; j <= fp.appConfig.roadOptions.roadDeviation; j++ ) {\n                        var xL = x0 + Math.cos( angleLeft ) * j,\n                            zL = z0 + Math.sin( angleLeft ) * j,\n                            yL = fp.getHeight( xL, zL ) + yOffset;\n                        if ( yL < y && yL > 0 ) {\n                            x = xL;\n                            y = yL;\n                            z = zL;\n                        }\n                    }\n                    for ( k = 1; k <= fp.appConfig.roadOptions.roadDeviation; k++ ) {\n                        var xR = x0 + Math.cos( angleRight ) * k,\n                            zR = z0 + Math.sin( angleRight ) * k,\n                            yR = fp.getHeight( xR, zR ) + yOffset;\n                        if ( yR < y && yR > 0 ) {\n                            x = xR;\n                            y = yR;\n                            z = zR;\n                        }\n                    }\n                    // Only create a point if there's a deviation from a straight line\n                    if ( x != x0 || y != y0 || z != z0 ) {\n                        x = Math.round( x );\n                        y = Math.round( y );\n                        z = Math.round( z );\n                        var point = new THREE.Vector3( x, y, z );\n                        points.push( point );\n                        if ( y != yLast ) {\n                            var yDiff = y - yLast;\n                            var shift = i - lastChange + 1;\n                            for ( k = lastChange + 1; k < i; k++ ) {\n                                var change = yDiff * ( (k - lastChange ) / shift );\n                                point.y += change;\n                            }\n                            lastChange = i;\n                        }\n                    }\n                    xLast = x;\n                    yLast = y;\n                    zLast = z;\n                    remaining--;\n                    xd = p2.x - xLast;\n                    zd = p2.z - zLast;\n                }\n                points.push( p2 );\n                return points;\n            };\n\n            /**\n             * Creates a JSTS geometry from the points of the road.\n             * @param  {fp~Road} road\n             * @return {jsts.geom.Polygon}\n             */\n            this.createJstsGeomFromRoadPoints = function( points ) {\n                var coords = _.map( points, function( p ) { return new jsts.geom.Coordinate( p.x, p.y ); } );\n                var lineUnion, j = coords.length - 1;\n                for ( var i = 0; i < coords.length; i++ ) {\n                    var line = new jsts.geom.LineString( [ coords[ i ], coords[ j ]] );\n                    j = i;\n                    if ( _.isUndefined( lineUnion ) )\n                        lineUnion = line;\n                    else\n                        lineUnion = lineUnion.union( line );\n                }\n                var polygonizer = new jsts.operation.polygonize.Polygonizer();\n                polygonizer.add( lineUnion );\n                var polygon = polygonizer.getPolygons().toArray()[ 0 ];\n                return polygon.buffer( 0 );\n            };\n\n            /**\n             * Adds a road between two points, with a given width.\n             * @param {THREE.Vector3} p1\n             * @param {THREE.Vector3} p2\n             * @param {Number} roadWidth\n             */\n            this.addRoad = function( p1, p2, roadWidth ) {\n                var points = this.getRoadTerrainPoints( p1, p2 );\n\n                // Use a cut-off of 5 intersecting points to prevent this road being built\n                var jstsCoords = _.map( points, function( p ) { return new jsts.geom.Coordinate( p.x, p.z ); } );\n                var jstsGeom = new jsts.geom.LineString( jstsCoords );\n                var overlap = fp.roadNetwork.countCollisions( jstsGeom );\n                if ( overlap > fp.appConfig.roadOptions.overlapThreshold )\n                    return false;\n\n                // The above code probably should supercede this\n                var thisIndexValues = _.map( points, function( p ) { return fp.getIndex( p.x,p.z ); } );\n                overlap = _.intersection( fp.roadNetwork.indexValues, thisIndexValues ).length;\n                if ( overlap > fp.appConfig.roadOptions.overlapThreshold )\n                    return false;\n\n                var extrudePath = new THREE.SplineCurve3( points );\n                var roadColor = ( fp.appConfig.displayOptions.dayShow ) ? fp.appConfig.colorOptions.colorDayRoad : fp.appConfig.colorOptions.colorNightRoad;\n                // var roadMaterial = new THREE.MeshBasicMaterial( { color: roadColor } );\n                var roadMaterial = new THREE.MeshLambertMaterial( { color: roadColor } );\n                roadMaterial.side = THREE.DoubleSide;\n                var roadGeom = new THREE.TubeGeometry( extrudePath, points.length, roadWidth, fp.appConfig.roadOptions.roadRadiusSegments, false );\n\n                var adjust = fp.appConfig.roadOptions.flattenAdjustment,\n                    lift = fp.appConfig.roadOptions.flattenLift;\n                var vertices = roadGeom.vertices;\n                for ( var i = 0; i <= vertices.length - fp.appConfig.roadOptions.roadRadiusSegments; i += fp.appConfig.roadOptions.roadRadiusSegments ) {\n                    var coil = vertices.slice( i, i + fp.appConfig.roadOptions.roadRadiusSegments );\n                    var mean = jStat.mean( _.map( coil, function( p ) { return p.y; } ) );\n                    for ( var j = 0; j < coil.length; j++ ) {\n                        var y = coil[ j ].y;\n                        var diff = y - mean;\n                        var newDiff = diff * adjust;\n                        vertices[ i+j ].y = lift + mean + newDiff;\n                    }\n                }\n\n                // Cache the ordinary plane vertices\n                fp.roadNetwork.planeVertices.push( vertices );\n\n                // Transform vertices\n                var percent = fp.terrain.wrappedPercent;\n                if ( percent > 0 ) {\n                    var transformedVertices = [];\n                    for ( var k = 0; k < vertices.length; k++ ) {\n                        transformedVertices.push( fp.terrain.transformPointFromPlaneToSphere( vertices[ k ], percent ) );\n                    }\n                    roadGeom.vertices = transformedVertices;\n                }\n\n                // Add the road\n                var roadMesh = new THREE.Mesh( roadGeom, roadMaterial );\n                fp.roadNetwork.networkMesh.add( roadMesh );\n                thisIndexValues.forEach( function( p ) { fp.roadNetwork.roads[ p ] = roadMesh; } );\n                if ( _.isNull( this.networkGeometry ) )\n                    this.networkGeometry = new jsts.geom.LineString( jstsCoords );\n                else {\n                    try {\n                        this.networkGeometry = this.networkGeometry.union( jstsGeom );\n                    }\n                    catch ( e ) { console.log( e ); } // Sometimes get a TopologyError\n                }\n                fp.roadNetwork.indexValues = _.uniq( _.flatten( fp.roadNetwork.indexValues.push( thisIndexValues ) ) );\n                return true;\n            };\n\n            /**\n             * Counts the number of intersections this road has with the\n             * existing network of roads.\n             * @param  {fp~Road} road\n             * @return {Number}\n             */\n            this.countCollisions = function( jstsGeom ) {\n                if ( _.isNull( fp.roadNetwork.networkGeometry ) )\n                    return 0;\n                var intersections = fp.roadNetwork.networkGeometry.intersection( jstsGeom );\n                if ( !_.isUndefined( intersections.geometries ) )\n                    return intersections.geometries.length;\n                else // most likely an instance of jsts.geom.Point\n                    return 1;\n            };\n\n            /**\n             * Returns an array of polygons representing the city \"blocks\",\n             * where a block is an area completely and minimally contained by\n             * roads.\n             * @return {array} polygons\n             */\n            this.cityBlocks = function() {\n                var polygonizer = new jsts.operation.polygonize.Polygonizer();\n                polygonizer.add( this.networkGeometry );\n                return polygonizer.getPolygons().toArray();\n            };\n\n            /**\n             * Implementation of Surveyor's Formula - cf. http://www.mathopenref.com/coordpolygonarea2.html\n             * @param  {jsts.geom.Polygon} polygon\n             * @return {number}\n             */\n            this.getPolygonArea = function( polygon ) {\n                var points = polygon.shell.points;\n                var area = 0;           // Accumulates area in the loop\n                var j = points.length - 1;  // The last vertex is the 'previous' one to the first\n                for ( var i = 0; i < points.length; i++ ) {\n                    area = area + ( points[ j ].x + points[ i ].x ) * ( points[ j ].y - points[ i ].y );\n                    j = i;  //j is previous vertex to i\n                }\n                return area / 2;\n            };\n        };\n\n\n        /**\n         * Represents a square block of the fp.terrain. It has a value that can be used to represent some property of interest.\n         * Using the default assumptions of the PatchNetwork functions, the value should be in the range [ 0, 1 ].\n         * @constructor\n         * @memberof fp\n         * @inner\n         */\n        this.Patch = function( val ) {\n            this.value = val;\n            this.initialValue = val;\n\n            /**\n             * Updates the value of the patch.\n             * @param  {Number} amount the amount to increment the value by.\n             */\n            this.updatePatchValue = function( amount ) {\n                var val = this.value;\n                if ( val + amount < 0.0001 )\n                    val = 0.0001;\n                else if ( val + amount > 1.0 )\n                    val = 1.0;\n                else\n                    val += amount;\n                this.value = val;\n            };\n        };\n\n        /**\n         * Represents a network of patches. Also provides factory and utility methods.\n         * @constructor\n         * @memberof fp\n         * @inner\n         */\n        this.PatchNetwork = function( func ) {\n            this.plane = null;\n            this.patches = {};\n            this.patchValues = [ ];\n            this.patchPlaneArray = [ ];\n            this.patchSphereArray = [ ];\n            this.patchMeanValue = 0;\n            this.patchSize = fp.appConfig.terrainOptions.patchSize;\n            this.initialisePatchFunction = !_.isUndefined( func ) ? func : function() { return Math.random(); };\n\n            /**\n             * Initialises each patch value with a random value.\n             */\n            this.initialisePatches = function() {\n                var dim = Math.ceil( fp.terrain.gridPoints / fp.patchNetwork.patchSize ) - 1;\n                fp.patchNetwork.patchValues = new Array( dim * dim );\n                for ( var i = 0; i < fp.patchNetwork.patchValues.length; i++ ) {\n                    fp.patchNetwork.patchValues[ i ] = new fp.Patch( this.initialisePatchFunction() );\n                }\n            };\n\n            /**\n             * Construct a geometry with closed spaces.\n             */\n            this.cloneGeometry = function() {\n                var clone = fp.terrain.plane.geometry.clone();\n                var vertices = fp.terrain.plane.geometry.attributes.position.array;\n                var dim = Math.ceil( fp.terrain.gridPoints / fp.patchNetwork.patchSize );\n                var patchSize = fp.patchNetwork.patchSize;\n                var size = fp.terrain.gridExtent * fp.appConfig.terrainOptions.multiplier;\n                var newPoints = fp.terrain.gridPoints + dim;\n                var geometry = new THREE.PlaneBufferGeometry( size, size, newPoints - 1, newPoints - 1 );\n                // var geometry = new THREE.PlaneBufferGeometry( size, size, fp.terrain.gridPoints - 1, fp.terrain.gridPoints - 1 );\n                var patchSizeOffset = fp.patchNetwork.patchSize + 1;\n                var newOffset = 0, oldOffset = 0;\n                var counter = 0;\n                for ( var i = 0; i < fp.terrain.gridPoints; i++ ) {\n                    for ( var j = 0; j < fp.terrain.gridPoints; j++ ) {\n                        geometry.attributes.position.array[ newOffset + 0 ] = vertices[ oldOffset + 0 ];\n                        geometry.attributes.position.array[ newOffset + 1 ] = vertices[ oldOffset + 1 ];\n                        geometry.attributes.position.array[ newOffset + 2 ] = vertices[ oldOffset + 2 ];\n                        if ( i % patchSize === 0 ) {\n                            newOffset += newPoints * 3 ;\n                            geometry.attributes.position.array[ newOffset + 0 ] = vertices[ oldOffset + 0 ];\n                            geometry.attributes.position.array[ newOffset + 1 ] = vertices[ oldOffset + 1 ];\n                            geometry.attributes.position.array[ newOffset + 2 ] = vertices[ oldOffset + 2 ];\n                            if ( j % patchSize === 0 ) {\n                                newOffset += 3;\n                                geometry.attributes.position.array[ newOffset + 0 ] = vertices[ oldOffset + 0 ];\n                                geometry.attributes.position.array[ newOffset + 1 ] = vertices[ oldOffset + 1 ];\n                                geometry.attributes.position.array[ newOffset + 2 ] = vertices[ oldOffset + 2 ];\n                                newOffset -= 3;\n                            }\n                            newOffset -= newPoints * 3;\n                        }\n                        if ( j % patchSize === 0 ) {\n                            newOffset += 3;\n                            geometry.attributes.position.array[ newOffset + 0 ] = vertices[ oldOffset + 0 ];\n                            geometry.attributes.position.array[ newOffset + 1 ] = vertices[ oldOffset + 1 ];\n                            geometry.attributes.position.array[ newOffset + 2 ] = vertices[ oldOffset + 2 ];\n                        }\n                        newOffset += 3;\n                        oldOffset += 3;\n                    }\n                    if ( i % patchSize === 0 ) {\n                        newOffset += newPoints * 3;\n                    }\n                }\n                var len = geometry.attributes.position.array.length / 3,\n                    heights = new Float32Array( len ),\n                    trailPoints = new Float32Array( len ),\n                    patchPoints = new Float32Array( len );\n                geometry.addAttribute( \"height\", new THREE.BufferAttribute( heights, 1 ) );\n                geometry.addAttribute( \"trail\", new THREE.BufferAttribute( trailPoints, 1 ) );\n                geometry.addAttribute( \"patch\", new THREE.BufferAttribute( patchPoints, 1 ) );\n                var patchAttributes = {\n                    height: { type: \"f\", value: null },\n                    trail: { type: \"f\", value: null },\n                    patch: { type: \"f\", value: null },\n                };\n                for ( i = 0; i < len; i++ ) {\n                    heights[ i ] = geometry.attributes.position.array[ i * 3 + 2 ];\n                    trailPoints[ i ] = 0;\n                    patchPoints[ i ] = 0;\n                }\n                var richTerrainMaterial = new THREE.ShaderMaterial( {\n                    uniforms: fp.ShaderUtils.lambertUniforms( fp.terrain.nightTerrainUniforms ),\n                    attributes: patchAttributes,\n                    vertexShader:   fp.ShaderUtils.lambertShaderVertex(\n                        fp.ShaderUtils.terrainVertexShaderParams(),\n                        fp.ShaderUtils.terrainVertexShaderMain()\n                    ),\n                    fragmentShader: fp.ShaderUtils.lambertShaderFragment(\n                        fp.ShaderUtils.terrainFragmentShaderParams(),\n                        fp.ShaderUtils.terrainFragmentShaderMain()\n                    ),\n                    lights: true,\n                    fog: false,\n                    transparent: true\n\n                } );\n                // richTerrainMaterial.wireframe = true;\n                this.patchPlaneArray = geometry.attributes.position.clone();\n                this.patchSphereArray = fp.terrain.constructSphere( this.patchPlaneArray );\n                return new THREE.Mesh( geometry, richTerrainMaterial );\n            };\n\n            /**\n             * Builds a plane mesh based on the current terrain geometry, but with its own material.\n             */\n            this.buildPatchMesh = function() {\n                // var patchMaterial = new THREE.MeshBasicMaterial( { vertexColors: THREE.FaceColors } );\n                this.plane = this.cloneGeometry();\n                // Rotate 90 degrees on X axis, to be the \"ground\"\n                this.plane.rotation.set( -Math.PI / 2, 0, 0 );\n                // Lift by 1, to ensure shaders doesn't clash with water\n                this.plane.position.set( 0, fp.appConfig.terrainOptions.defaultHeight, 0 );\n                this.plane.castShadow = true;\n                this.plane.receiveShadow = true;\n                this.updateTerrainPatchAttributes();\n\n                // Toggle patches state\n                this.togglePatchesState();\n                // fp.scene.add( this.plane );\n\n            };\n\n            /**\n             * Default revision of the values of each patch.\n             */\n            this.defaultReviseValues = function() {\n                this.patchMeanValue = 0;\n                var popPatch = fp.patchNetwork.patchValues.length;\n                var popAgent = fp.agentNetwork.agents.length;\n                var r = popAgent / popPatch;\n                var change;\n                for ( var i = 0; i < this.patchValues.length; i++ ) {\n                    var patch = this.patchValues[ i ];\n                    if ( !_.isUndefined( this.patches[ i ] ) ) {\n                        var len = this.patches[ i ].length;\n                        change = -len * ( 1 / ( Math.pow( r, 2 ) ) );\n                        patch.updatePatchValue( change );\n                    }\n                    else { // if ( patch.value < patch.initialValue ) { // Recover\n                        change = Math.pow( r, 2 );\n                        patch.updatePatchValue( Math.pow( r, 3 ) );\n                    }\n                    this.patchMeanValue += patch.value;\n                }\n                this.patchMeanValue /= this.patchValues.length;\n            };\n\n            /**\n             * Update the cached count of patch agents.\n             */\n            this.updatePatchAgents = function() {\n                this.patches = {};\n                for ( var i = 0; i < fp.agentNetwork.agents.length; i++ ) {\n                    var agent =  fp.agentNetwork.agents[ i ];\n                    var index = fp.getPatchIndex( agent.position.x, agent.position.z );\n                    if ( !this.patches[ index ] )\n                        this.patches[ index ] = [ ];\n                    this.patches[ index ].push( agent );\n                }\n            };\n\n            /**\n             * Updates values of all patches in the network.\n             */\n            this.updatePatchValues = function() {\n                if ( fp.appConfig.displayOptions.patchesUpdate && fp.AppState.runSimulation ) {\n                    // Allow for overriding of the patch values\n                    if ( !_.isUndefined( fp.patchNetwork.reviseValues ) ) {\n                        fp.patchNetwork.reviseValues();\n                    }\n                    else {\n                        fp.patchNetwork.defaultReviseValues();\n                    }\n                }\n\n                if ( fp.appConfig.displayOptions.patchesShow ) {\n                    this.updateTerrainPatchAttributes();\n                }\n            };\n\n\n            /**\n             * Updates the terrain's colors based on its patch attributes.\n             */\n            this.updateTerrainPatchAttributes = function() {\n                if ( _.isUndefined( this.patchValues ))\n                    return;\n                var pl = Math.sqrt( this.patchValues.length );\n\n                var counter = 0;\n                var gridPoints = fp.terrain.gridPoints;\n                var patchSize = fp.patchNetwork.patchSize;\n                var dim = Math.ceil( gridPoints / patchSize );\n                var newPoints = gridPoints + dim;\n                var oldVal = 0;\n                for ( var i = 0; i < this.patchValues.length; i++ ) {\n                    var val = this.patchValues[ i ].value;\n                    var patchCol = i % ( dim - 1 );\n                    var patchRow = Math.floor( i / ( dim - 1 ) );\n                    for ( var j = 0; j < patchSize + 3; j++ ) {\n                        for ( var k = 0; k < patchSize + 3 ; k++ ) {\n                            if ( j === 0 && patchRow !== 0 )\n                                continue;\n                            if ( k === 0 && patchCol !== 0 )\n                                continue;\n                            if ( j == this.patchSize + 2 && patchRow < ( dim - 2 ) )\n                                continue;\n                            if ( k == this.patchSize + 2 && patchCol < ( dim - 2 ) )\n                                continue;\n                            var colOffset = patchCol * ( patchSize + 1 ) + k;\n                            var rowOffset = ( ( patchRow * ( patchSize + 1 ) ) + j ) * newPoints;\n                            var cell = rowOffset + colOffset;\n                            // var rows = ( ( this.patchSize + 1 ) * Math.floor( i / pl ) ) * newPoints + j * newPoints;\n                            // var cols = ( i % pl ) * ( this.patchSize + 1 ) + k;\n                            // var cell = rows + cols;\n                            counter++;\n                            if ( oldVal != val ) {\n                                oldVal = val;\n                            }\n                            this.plane.geometry.attributes.patch.array[ cell ] = val;\n                        }\n                    }\n                }\n                this.plane.geometry.attributes.patch.needsUpdate = true;\n            };\n\n\n            this.togglePatchesState = function() {\n                if ( fp.appConfig.displayOptions.patchesShow  ) {\n                    if ( this.plane === null )\n                        this.buildPatchMesh();\n                    else\n                        fp.scene.add( this.plane );\n                }\n                else\n                    fp.scene.remove( this.plane );\n            };\n        };\n\n        /**\n         * Represents a network of trails. Also provides factory and utility methods.\n         * @constructor\n         * @memberof fp\n         * @inner\n         */\n        this.TrailNetwork = function() {\n            this.trails = {};\n            this.trailMeshes = null;\n            this.globalTrailLine = null;\n\n            /**\n             * Builds the initial trail network.\n             */\n            this.buildTrailNetwork = function( clone ) {\n                var len = fp.appConfig.displayOptions.trailLength;\n                var geom = new THREE.Geometry();\n                if ( clone ) {\n                    geom = fp.trailNetwork.globalTrailLine.geometry.clone();\n                }\n                for ( var i = 0; i < fp.agentNetwork.agents.length; i++ ) {\n                    var vertices = new Array( len );\n                    for ( var j = 0; j < len ; j++ ) {\n                        var index = i * len  + j;\n                        if ( !clone || index > geom.vertices.length ) {\n                            geom.vertices.push( fp.agentNetwork.agents[ i ].lastPosition );\n                        }\n                    }\n                    var ai = fp.getIndex(\n                        fp.agentNetwork.agents[ i ].lastPosition.x / fp.appConfig.terrainOptions.multiplier,\n                        fp.agentNetwork.agents[ i ].lastPosition.z / fp.appConfig.terrainOptions.multiplier\n                    );\n                    if ( ai > -1 )\n                        fp.trailNetwork.trails[ ai ] = 1;\n                }\n                var trailMaterial = new THREE.LineBasicMaterial( {\n                    color: fp.appConfig.colorOptions.colorNightTrail,\n                    linewidth: 1.0,\n                    opacity: 0.1,\n                    blending: THREE.AdditiveBlending,\n                    transparent: true\n                } );\n                fp.trailNetwork.globalTrailLine = new THREE.Line( geom, trailMaterial, THREE.LineSegments );\n                if ( fp.appConfig.displayOptions.trailsShowAsLines ) {\n                    fp.scene.add( fp.trailNetwork.globalTrailLine );\n                }\n            };\n\n            /**\n             * Updates the trail network.\n             */\n            this.updateTrails = function() {\n                if ( !fp.AppState.runSimulation )\n                    return;\n\n                if ( fp.appConfig.displayOptions.trailsShow ) {\n                    if ( fp.appConfig.displayOptions.trailsShowAsLines ) {\n                        for ( var i = 0; i < fp.agentNetwork.agents.length; i++ ) {\n                            var agent =  fp.agentNetwork.agents[ i ];\n                            // Creates a cycle of trail 'pieces'\n                            var len = fp.appConfig.displayOptions.trailLength;\n                            var offset = agent.ticks * 2 % len;\n                            if ( offset === 0 ) {\n                                for ( var j = 0; j < len; j++ ) {\n                                    fp.trailNetwork.globalTrailLine.geometry.vertices[ i * len + j ] = agent.lastPosition;\n                                }\n                            }\n                            fp.trailNetwork.globalTrailLine.geometry.vertices[ i * len + offset ] = agent.lastPosition;\n                            fp.trailNetwork.globalTrailLine.geometry.vertices[ i * len + offset + 1 ] = agent.position;\n                        }\n                        fp.trailNetwork.globalTrailLine.geometry.verticesNeedUpdate = true;\n                    }\n                    else {\n                        var weightMax = _.chain( fp.trailNetwork.trails ).values().max().value();\n                        for ( var k in fp.trailNetwork.trails ) {\n                            var weight = fp.trailNetwork.trails[ k ];\n                            var weightNormed = weight / weightMax;\n                            var weightAdjusted = Math.pow( weightNormed, 0.2 );\n                            fp.terrain.plane.geometry.attributes.trail.array[ k ] = weightAdjusted;\n                        }\n                    }\n                }\n                else if ( fp.appConfig.displayOptions.trailsUpdate ) {\n                    for ( var l in fp.trailNetwork.trails )  {\n                        fp.terrain.plane.geometry.attributes.trail.array[ l ] = 0.0;\n                    }\n                    fp.terrain.plane.geometry.attributes.trail.needsUpdate = true;\n                }\n            };\n        };\n\n        /**\n         * Represents a cursor operating on the world.\n         * @constructor\n         * @memberof fp\n         * @inner\n         */\n        this.Cursor = function() {\n            this.cell = null;\n\n            /**\n             * Creates a cell cursor\n             * @param  {Number} x\n             * @param  {Number} y\n             */\n            this.createCell = function( x, y ) {\n                var halfGrid = fp.terrain.gridExtent / 2;\n                var cellSize = fp.terrain.gridExtent / ( fp.terrain.gridPoints - 1 );\n                var cellPixels = ( fp.terrain.gridSize  * cellSize );\n                var cellX = Math.floor( (x + halfGrid ) / cellPixels );\n                var cellY = Math.floor( (y + halfGrid ) / cellPixels );\n                var ccX = ( cellX * cellPixels ) - halfGrid;\n                var ccY = ( cellY * cellPixels ) - halfGrid;\n                var ccZ = fp.getHeight( ccX, ccY );\n                var material = new THREE.LineBasicMaterial( {\n                    color: 0xff0000,\n                    linewidth: 2\n                } );\n\n                var i, geometry = new THREE.Geometry();\n                for ( i = 0; i < fp.terrain.gridSize; i++ ) {\n                    geometry.vertices.push( new THREE.Vector3( ccX, ccY, ccZ ) );\n                    ccX += Math.round( cellSize );\n                    ccZ = fp.getHeight( ccX, ccY ) + 1;\n                }\n                for ( i = 0; i < fp.terrain.gridSize; i++ ) {\n                    geometry.vertices.push( new THREE.Vector3( ccX, ccY, ccZ ) );\n                    ccY += Math.round( cellSize );\n                    ccZ = fp.getHeight( ccX, ccY ) + 1;\n                }\n                for ( i = 0; i < fp.terrain.gridSize; i++ ) {\n                    geometry.vertices.push( new THREE.Vector3( ccX, ccY, ccZ ) );\n                    ccX -= Math.round( cellSize );\n                    ccZ = fp.getHeight( ccX, ccY ) + 1;\n                }\n                for ( i = 0; i < fp.terrain.gridSize; i++ ) {\n                    geometry.vertices.push( new THREE.Vector3( ccX, ccY, ccZ ) );\n                    ccY -= Math.round( cellSize );\n                    ccZ = fp.getHeight( ccX, ccY ) + 1;\n                }\n                geometry.vertices.push( new THREE.Vector3( ccX, ccY, ccZ ) + appConfig.agentOptions.size );\n                if ( this.cell )\n                    fp.scene.remove( this.cell );\n                this.cell = new THREE.Line( geometry, material );\n                fp.scene.add( this.cell );\n            };\n\n            /**\n             * Creates a filled-in cell cursor.\n             * @param  {Number} x\n             * @param  {Number} y\n             */\n            this.createCellFill = function( x, y ) {\n                var halfGrid = fp.terrain.gridExtent / 2;\n                var cellSize = fp.terrain.gridExtent / ( fp.terrain.gridPoints - 1 );\n                var cellPixels = fp.terrain.gridSize  * cellSize;\n                var cellX = Math.floor( (x + halfGrid ) / cellPixels );\n                var cellY = Math.floor( (y + halfGrid ) / cellPixels );\n                var ccX = ( cellX * cellPixels ) - halfGrid + cellPixels / 2;\n                var ccY = ( cellY * cellPixels ) - halfGrid + cellPixels / 2;\n                var ccZ = 0;\n\n                var arrayDim = fp.terrain.gridPoints;\n                var arraySize = fp.terrain.gridExtent / arrayDim;\n                var arrayX = Math.floor( (x / fp.appConfig.terrainOptions.multiplier + halfGrid ) / arraySize );\n                var arrayY = Math.floor( (halfGrid + y / fp.appConfig.terrainOptions.multiplier ) / arraySize );\n                var vertices = fp.terrain.plane.geometry.attributes.position.array;\n                var newVertices = [ ];\n                var cellFill, cellMaterial;\n                if ( _.isUndefined( this.cell )) {\n                    cellFill = new THREE.PlaneGeometry( cellPixels, cellPixels, fp.terrain.gridSize, fp.terrain.gridSize );\n                    fp.scene.remove( this.cell );\n                    cellMaterial = new THREE.MeshPhongMaterial( { color: 0xff0000,  wireframe: false } );\n                    cellMaterial.side = THREE.DoubleSide;\n                    this.cell = new THREE.Mesh( cellFill, cellMaterial );\n                    this.cell.rotation.set( -Math.PI / 2, 0, 0 );\n                    this.cell.geometry.dynamic = true;\n                    fp.scene.add( this.cell );\n                }\n                var halfCell = Math.round( fp.terrain.gridSize / 2 );\n                for ( var i = arrayY, counter = 0; i < arrayY + fp.terrain.gridSize + 1; i++ ) {\n                    for ( var j = arrayX; j < arrayX + fp.terrain.gridSize + 1; j++, counter++ ) {\n                        var index = 3 * ( arrayDim * ( i - halfCell ) + ( j - halfCell ));\n                        this.cell.geometry.vertices[ counter ] = new THREE.Vector3(\n                            vertices[ index ], vertices[ index + 1 ], vertices[ index + 2 ] + fp.appConfig.agentOptions.terrainOffset\n                        );\n                    }\n                }\n                this.cell.geometry.verticesNeedUpdate = true;\n            };\n        };\n\n\n        /**\n         * Represents a network of paths. Also provides factory and utility methods.\n         * @constructor\n         * @memberof fp\n         * @inner\n         */\n        this.PathNetwork = function() {\n            this.networkMesh = null;\n            this.stepsPerNode = fp.terrain.ratioExtentToPoint;\n            this.graphAStar = null;\n            this.nodes = [ ];\n            this.opts = null;\n\n            this.setupAStarGraph = function() {\n                this.opts = {\n                    // wallFrequency: $selectWallFrequency.val(),\n                    // fp.terrain.gridSize: $selectGridSize.val(),\n                    // debug: $checkDebug.is( \"checked\" ),\n                    diagonal: true,\n                    closest: true\n                };\n                for ( var i = 0; i < fp.terrain.gridPoints; i++ ) {\n                    var nodeRow = [ ];\n                    for ( var j = 0; j < fp.terrain.gridPoints; j++ ) {\n                        var weight = 1 - fp.terrain.getHeightForIndex( i * fp.terrain.gridPoints + j ) / fp.terrain.maxTerrainHeight;\n                        weight = ( weight == 1 ? 0 : weight );\n                        nodeRow.push( weight );\n                    }\n                    this.nodes.push( nodeRow );\n                }\n                this.graphAStar = new astar.Graph( this.nodes );\n                this.graphAStar.diagonal = true;\n            };\n\n            this.nodeAt = function( position ) {\n                var index = fp.getIndex( position.x, position.z );\n                var x = index % fp.terrain.gridPoints, y = Math.floor( index / fp.terrain.gridPoints );\n                try {\n                    return this.graphAStar.grid[ x ][ y ];\n                }\n                catch ( err ) {\n                    return undefined;\n                }\n            };\n\n\n            /**\n             * Find path to the home of another agent in this network\n             * @param  {fp.Agent} agent [ description ]\n             * @return {Array}       Of nodes\n             */\n            this.findPathHome = function( agent ) {\n\n                if ( !agent.home )\n                    return [ ];\n                var start = this.nodeAt( agent.position );\n                var end = this.nodeAt( agent.home.lod.position );\n                if ( _.isUndefined( start ) || _.isUndefined( end ) )\n                    return [ ];\n                var path = astar.astar.search( this.graphAStar, start, end, { closest: this.opts.closest } );\n                return path;\n            };\n\n\n            /**\n             * Find path to an agent's home\n             * @param  {fp.Agent} agent [ description ]\n             * @return {Array}       Of nodes\n             */\n            this.findPathToOtherAgentsHome = function( agent ) {\n                var otherAgentHome = null;\n                var networks = _.shuffle( fp.agentNetwork.networks );\n                for ( var i = 0; i < networks.length; i++ ) {\n                    var network = fp.agentNetwork.networks[ i ];\n                    var links = _.shuffle( network.links );\n                    for ( var j = 0; j < links.length; j++ ) {\n                        var link = links[ j ];\n                        if ( link.agent1 == agent )\n                            otherAgentHome = link.agent2.home;\n                        else if ( link.agent2 ==  agent )\n                            otherAgentHome = link.agent1.home;\n                    }\n                }\n\n                if ( !otherAgentHome )\n                    return [ ];\n                var start = this.nodeAt( agent.position );\n                var end = this.nodeAt( otherAgentHome.lod.position );\n                if ( _.isUndefined( start ) || _.isUndefined( end ) )\n                    return [ ];\n                var path = astar.astar.search( this.graphAStar, start, end, { closest: this.opts.closest } );\n                return path;\n            };\n\n\n            /**\n             * Draws a path between this agent and its home\n             * @param  {Agent} agent\n             * @return {Array}       of nodes describing the path\n             */\n            this.drawPathHome = function( agent ) {\n                var path = agent.pathComputed;\n                if ( _.isUndefined( path ) || path.length < 2 ) // Need 2 points for a line\n                    return undefined;\n                var pathGeom = new THREE.Geometry();\n                var multiplier = fp.terrain.ratioExtentToPoint;\n                var wrapPercent = fp.terrain.wrappedPercent;\n                path.forEach( function( point ) {\n                    var x = ( point.x * multiplier - fp.terrain.halfExtent ) * fp.appConfig.terrainOptions.multiplier,\n                        z = ( point.y * multiplier - fp.terrain.halfExtent ) * fp.appConfig.terrainOptions.multiplier,\n                        y = fp.getHeight( x, z ) + fp.appConfig.agentOptions.terrainOffset,\n                        point3d = new THREE.Vector3( x, y, z );\n\n                    /*\n                    // Transform vertices\n                    var percent = fp.terrain.wrappedPercent;\n                    if ( percent > 0 ) {\n                        var transformedVertices = [ ];\n                        for ( var i = 0; i < vertices.length; i++ ) {\n                            transformedVertices.push( fp.terrain.transformPointFromPlaneToSphere( vertices[ i ], percent ) );\n                        }\n                        roadGeom.vertices = transformedVertices;\n                    }\n                    */\n\n                    var transformedPoint3d = fp.terrain.transformPointFromPlaneToSphere( point3d, wrapPercent );\n                    pathGeom.vertices.push( transformedPoint3d );\n                } );\n\n                var pathColor = ( fp.appConfig.displayOptions.dayShow ) ? fp.appConfig.colorOptions.colorDayPath : fp.appConfig.colorOptions.colorNightPath;\n                var pathMaterial = new THREE.LineBasicMaterial( { color: pathColor, linewidth: 1.0 } );\n                var pathLine = new THREE.Line( pathGeom, pathMaterial );\n                this.networkMesh.add( pathLine );\n                return pathLine;\n            };\n\n            /**\n             * Update the visualisation of all agent paths.\n             */\n            this.updatePath = function() {\n                if ( !fp.AppState.runSimulation )\n                    return;\n\n                var children = fp.pathNetwork.networkMesh.children;\n                for ( var i = children.length - 1; i >= 0; i-- ) {\n                    fp.pathNetwork.networkMesh.remove( children[ i ] );\n                }\n                var agentsWithPaths = _.chain( fp.agentNetwork.agents ).\n                    map( function( agent ) { if ( !_.isUndefined( agent.pathComputed ) && agent.pathComputed.length > 1 ) return agent; } ).\n                        compact().\n                        value();\n                _.each( agentsWithPaths, function( agent ) {\n                    fp.pathNetwork.drawPathHome( agent );\n                } );\n            };\n        };\n\n        this.TERRAIN_MAPS = [ \"../assets/syd2.bin\", \"../assets/mel2.bin\" ];\n\n        /**\n         * Represents the fp.terrain of the world.\n         * @constructor\n         * @memberof fp\n         * @inner\n         */\n        this.Terrain = function() {\n            this.plane = null;\n            this.richTerrainMaterial = null;\n            this.simpleTerrainMaterial = null;\n            this.dayTerrainUniforms = null;\n            this.nightTerrainUniforms = null;\n            this.terrainMapIndex = fp.appConfig.terrainOptions.mapIndex;\n            this.terrainMapFile = fp.appConfig.terrainOptions.mapFile;\n            this.gridExtent = fp.appConfig.terrainOptions.gridExtent;\n            this.halfExtent = this.gridExtent / 2;\n            this.gridPoints = fp.appConfig.terrainOptions.gridPoints;\n            this.ratioExtentToPoint = this.gridExtent / this.gridPoints;\n            this.maxTerrainHeight = fp.appConfig.terrainOptions.maxTerrainHeight;\n            this.gridSize = 4;\n            /**\n             * Used to cache the plane geometry array.\n             */\n            this.planeArray = null;\n            /**\n             * Used to cache the sphere geometry array.\n             */\n            this.sphereArray = null;\n            /**\n             * Specifies the percentage to which the plane is wrapped.\n             */\n            this.wrappedPercent = 0;\n            /**\n             * Specifies whether the plane is being wrapped, unwrapped or neither.\n             */\n            this.wrappingState = 0;\n\n            /**\n             * Create uniforms\n             */\n            this.createUniforms = function() {\n\n                //var map = new THREE.ImageUtils.loadTexture( \"../assets/Sydney-local.png\" );\n\n                var uniforms = {\n                    // Lambert settings\n                    emissive: { type: \"c\", value: new THREE.Color( 0.0, 0.0, 0.0 ) },\n                    diffuse: { type: \"c\", value: new THREE.Color( 1.0, 1.0, 1.0 ) },\n                    opacity: { type: \"f\", value: fp.appConfig.colorOptions.colorTerrainOpacity },\n                    // Phong settings\n                    specular: { type: \"c\", value: new THREE.Color( 0x3a3a3a ) },\n                    shininess: { type: \"f\", value: 0.0 },\n\n                    //map: map,\n                    //bumpMap: map,\n                    //normalMap: map,\n                    //emissiveMap: map,\n                    //lightMap: map,\n                    //aoMap: map,\n                    //specularMap: map,\n                    //alphaMap: map,\n\n                    groundLevelColor: { type: \"c\", value: new THREE.Color( fp.appConfig.colorOptions.colorDayTerrainGroundLevel ) },\n                    lowland1Color: { type: \"c\", value: new THREE.Color( fp.appConfig.colorOptions.colorDayTerrainLowland1 ) },\n                    lowland2Color: { type: \"c\", value: new THREE.Color( fp.appConfig.colorOptions.colorDayTerrainLowland2 ) },\n                    midland1Color: { type: \"c\", value: new THREE.Color( fp.appConfig.colorOptions.colorDayTerrainMidland1 ) },\n                    midland2Color: { type: \"c\", value: new THREE.Color( fp.appConfig.colorOptions.colorDayTerrainMidland2 ) },\n                    highlandColor: { type: \"c\", value: new THREE.Color( fp.appConfig.colorOptions.colorDayTerrainHighland ) },\n\n                    stop1: { type: \"f\", value: fp.appConfig.colorOptions.colorTerrainStop1 },\n                    stop2: { type: \"f\", value: fp.appConfig.colorOptions.colorTerrainStop2 },\n                    stop3: { type: \"f\", value: fp.appConfig.colorOptions.colorTerrainStop3 },\n                    stop4: { type: \"f\", value: fp.appConfig.colorOptions.colorTerrainStop4 },\n                    stop5: { type: \"f\", value: fp.appConfig.colorOptions.colorTerrainStop5 },\n\n                    size: { type: \"f\", value: Math.floor( fp.appConfig.agentOptions.size / 2 )},\n                    maxHeight: { type: \"f\", value: fp.terrain.maxTerrainHeight * fp.appConfig.terrainOptions.multiplier },\n\n                    shadowMix: { type: \"f\", value: fp.appConfig.terrainOptions.shaderShadowMix },\n\n                };\n\n                if ( fp.appConfig.displayOptions.dayShow ) {\n                    uniforms.groundLevelColor = { type: \"c\", value: new THREE.Color( fp.appConfig.colorOptions.colorDayTerrainGroundLevel ) };\n                    uniforms.lowland1Color = { type: \"c\", value: new THREE.Color( fp.appConfig.colorOptions.colorDayTerrainLowland1 ) };\n                    uniforms.lowland2Color = { type: \"c\", value: new THREE.Color( fp.appConfig.colorOptions.colorDayTerrainLowland2 ) };\n                    uniforms.midland1Color = { type: \"c\", value: new THREE.Color( fp.appConfig.colorOptions.colorDayTerrainMidland1 ) };\n                    uniforms.midland2Color = { type: \"c\", value: new THREE.Color( fp.appConfig.colorOptions.colorDayTerrainMidland2 ) };\n                    uniforms.highlandColor = { type: \"c\", value: new THREE.Color( fp.appConfig.colorOptions.colorDayTerrainHighland ) };\n                }\n                else {\n                    uniforms.groundLevelColor = { type: \"c\", value: new THREE.Color( fp.appConfig.colorOptions.colorNightTerrainGroundLevel ) };\n                    uniforms.lowland1Color = { type: \"c\", value: new THREE.Color( fp.appConfig.colorOptions.colorNightTerrainLowland1 ) };\n                    uniforms.lowland2Color = { type: \"c\", value: new THREE.Color( fp.appConfig.colorOptions.colorNightTerrainLowland2 ) };\n                    uniforms.midland1Color = { type: \"c\", value: new THREE.Color( fp.appConfig.colorOptions.colorNightTerrainMidland1 ) };\n                    uniforms.midland2Color = { type: \"c\", value: new THREE.Color( fp.appConfig.colorOptions.colorNightTerrainMidland2 ) };\n                    uniforms.highlandColor = { type: \"c\", value: new THREE.Color( fp.appConfig.colorOptions.colorNightTerrainHighland ) };\n                   \n                }\n\n                return uniforms;\n\n            };\n\n            /**\n             * Initialises the terrain.\n             */\n            this.initTerrain = function( data ) {\n                fp.scene.remove( fp.terrain.plane );\n                var size = fp.terrain.gridExtent * fp.appConfig.terrainOptions.multiplier;\n                var geometry = new THREE.PlaneBufferGeometry( size, size, fp.terrain.gridPoints - 1, fp.terrain.gridPoints - 1 );\n\n                // Use logic from math.stackexchange.com\n                var vertices = geometry.attributes.position.array;\n                var i, j, l = vertices.length,\n                    n = Math.sqrt( l ),\n                    k = l + 1;\n\n                if ( fp.appConfig.terrainOptions.loadHeights ) {\n\n                    for ( i = 0, j = 0; i < l; i++, j += 3 ) {\n\n                        geometry.attributes.position.array[ j + 2 ] =\n                            data[ i ] / 65535 *\n                            fp.terrain.maxTerrainHeight *\n                            fp.appConfig.terrainOptions.multiplier;\n\n                    }\n\n                }\n                else {\n\n                    for ( i = 0, j = 0; i < l; i++, j += 3 ) {\n\n                        geometry.attributes.position.array[ j + 2 ] = 0;\n\n                    }\n\n                }\n\n                //var map = new THREE.ImageUtils.loadTexture( \"../assets/Sydney-local.png\" );\n                fp.terrain.simpleTerrainMaterial = new THREE.MeshPhongMaterial( { \n\n                    color: new THREE.Color( 0xffffff ),  // diffuse\n                    emissive: new THREE.Color( 0x111111 ),  \n                    specular: new THREE.Color( 0x111111 ),  \n\n                    //map: map,\n                    //bumpMap: map,\n                    //normalMap: map,\n                    //emissiveMap: map,\n                    //lightMap: map,\n                    //aoMap: map,\n                    //specularMap: map,\n                    //alphaMap: map,\n\n                    //metal: true,\n\n                    wireframe: fp.appConfig.displayOptions.wireframeShow \n\n                } );\n\n                fp.terrain.simpleTerrainMaterial.side = THREE.DoubleSide;\n\n                // Create shader material\n                var len = geometry.attributes.position.array.length / 3,\n                    heights = new Float32Array( len ),\n                    trailPoints = new Float32Array( len ),\n                    patchPoints = new Float32Array( len );\n                for ( i = 0; i < len; i++ ) {\n                    heights[ i ] = vertices[ i * 3 + 2 ];\n                    trailPoints[ i ] = 0.0;\n                    patchPoints[ i ] = 0.0;\n                }\n                var terrainAttributes = {\n                    height: { type: \"f\", value: null },\n                    trail: { type: \"f\", value: null },\n                    patch: { type: \"f\", value: null },\n                };\n                geometry.addAttribute( \"height\", new THREE.BufferAttribute( heights, 1 ) );\n                geometry.addAttribute( \"trail\", new THREE.BufferAttribute( trailPoints, 1 ) );\n                geometry.addAttribute( \"patch\", new THREE.BufferAttribute( patchPoints, 1 ) );\n\n                var uniforms = this.createUniforms();\n                fp.terrain.richTerrainMaterial = new THREE.ShaderMaterial( {\n                    uniforms: fp.ShaderUtils.phongUniforms( uniforms ),\n                    attributes: terrainAttributes,\n                    vertexShader:   fp.ShaderUtils.phongShaderVertex(\n                        fp.ShaderUtils.terrainVertexShaderParams(),\n                        fp.ShaderUtils.terrainVertexShaderMain()\n                    ),\n                    fragmentShader: fp.ShaderUtils.phongShaderFragment(\n                        fp.ShaderUtils.terrainFragmentShaderParams(),\n                        fp.ShaderUtils.terrainFragmentShaderMain()\n                    ),\n                    lights: true,\n                    fog: true,\n                    // transparent: true,\n                    alphaTest: 0.5\n                } );\n\n                // Only use the shader material if we have variable heights\n                if ( fp.appConfig.terrainOptions.shaderUse ) {\n                    // Necessary? Maybe for Phong\n                    // geometry.computeFaceNormals();\n                    geometry.computeVertexNormals();\n                    fp.terrain.plane = new THREE.Mesh( geometry, fp.terrain.richTerrainMaterial );\n                }\n                else {\n                    fp.terrain.plane = new THREE.Mesh( geometry, fp.terrain.simpleTerrainMaterial );\n                }\n                // Cache the array\n                fp.terrain.planeArray = fp.terrain.plane.geometry.attributes.position.clone();\n                fp.terrain.plane.castShadow = true;\n                fp.terrain.plane.receiveShadow = true;\n                // Rotate 90 degrees on X axis, to be the \"ground\"\n                fp.terrain.plane.rotation.set( -Math.PI / 2, 0, 0 );\n                // Lift by 1, to ensure shaders doesn't clash with water\n                fp.terrain.plane.position.set( 0, fp.appConfig.terrainOptions.defaultHeight, 0 );\n                fp.toggleTerrainPlane();\n\n                if ( fp.appConfig.displayOptions.patchesShow )\n                    fp.patchNetwork.buildPatchMesh();\n                // fp.terrain.createTerrainColors();\n                fp.toggleDayNight();\n                fp.pathNetwork.setupAStarGraph();\n\n                // Construct the sphere, and switch it on\n                if ( fp.appConfig.terrainOptions.renderAsSphere ) {\n                    fp.terrain.sphereArray = fp.terrain.constructSphere( fp.terrain.planeArray );\n                }\n            };\n\n            /**\n             * Gets the terrain height for a given co-ordinate index.\n             * @memberof fp.Terrain\n             * @param {Number} index The co-ordinate index\n             * @return {Number} The corresponding y value\n             */\n            this.getHeightForIndex = function( index ) {\n                var x = index % fp.terrain.gridPoints ;\n                var y = fp.terrain.gridPoints - Math.floor( index / fp.terrain.gridPoints );\n                var reversedIndex = y * fp.terrain.gridPoints + x;\n                if ( index >= 0 && !_.isUndefined( fp.terrain.planeArray.array[ index * 3 + 2 ] ) )\n                    return fp.terrain.planeArray.array[ index * 3 + 2 ];\n                return null;\n            };\n\n            /**\n             * Gets the terrain coordinates for a given co-ordinate index.\n             * @memberof fp.Terrain\n             * @param {Number} index The co-ordinate index\n             * @return {Number} The corresponding y value\n             */\n            this.getCoordinatesForIndex = function( index ) {\n                var x = index % fp.terrain.gridPoints;\n                var y = fp.terrain.gridPoints - Math.floor( index / fp.terrain.gridPoints ) - 1;\n                var reversedIndex = y * fp.terrain.gridPoints + x;\n                if ( reversedIndex >= 0 && !_.isUndefined( fp.terrain.planeArray.array[ reversedIndex * 3 + 0 ] ) ) {\n                    var xCoord = fp.terrain.planeArray.array[ reversedIndex * 3 + 0 ];\n                    var zCoord = fp.terrain.planeArray.array[ reversedIndex * 3 + 1 ];\n                    return [ xCoord, zCoord ];\n                }\n                return null;\n            };\n\n            /**\n             * Flattens out the terrain.\n             */\n            this.flattenTerrain = function() {\n                if ( !fp.appConfig.displayOptions.cursorShow )\n                    return;\n\n                var vertices = this.plane.geometry.attributes.position.array;\n                var i, point, meanHeight = 0;\n                for ( i = 0; i < fp.cursor.cell.geometry.vertices.length; i++ ) {\n                    point = fp.cursor.cell.geometry.vertices[ i ];\n                    meanHeight += fp.getHeight( point.x, - point.y );\n                }\n                meanHeight /= fp.cursor.cell.geometry.vertices.length;\n                for ( i = 0; i < fp.cursor.cell.geometry.vertices.length; i++ ) {\n                    point = fp.cursor.cell.geometry.vertices[ i ];\n                    var index = fp.getIndex( point.x, - point.y );\n                    this.plane.geometry.attributes.position.array[ 3 * index + 2 ] = meanHeight;\n                }\n                this.plane.geometry.attributes.position.needsUpdate = true;\n                this.plane.geometry.verticesNeedUpdate = true;\n            };\n\n            /**\n             * Creates a basic set of colors for the terrain.\n             */\n            this.createTerrainColors = function () {\n                for ( var y = 0; y < 99; y++ ) {\n                    for ( var x = 0; x < 99; x++ ) {\n                        var r = Math.random();\n                        var color = new THREE.Color( r, r, r );\n                        var arrayX = x * fp.terrain.gridSize * 2;\n                        var arrayY = y * fp.terrain.gridSize * 2;\n                        for ( var i = arrayY; i < arrayY + ( fp.terrain.gridSize * 2 ); i += 2 ) {\n                            for ( var j = arrayX; j < arrayX + ( fp.terrain.gridSize * 2 ); j++ ) {\n                                var index = ( ( fp.terrain.gridPoints - 1 ) * i ) + j;\n                                if ( fp.terrain.plane.geometry.attributes.uv.array[ index ] ) {\n                                    fp.terrain.plane.geometry.attributes.uv.array[ index ] = color;\n                                    fp.terrain.plane.geometry.attributes.uv.array[ index + 1 ] = color;\n                                    fp.terrain.plane.geometry.attributes.uv.array[ index + 1 ] = color;\n                                }\n                            }\n                        }\n\n                    }\n                }\n                return fp.terrain.plane.geometry.color;\n            };\n\n            /**\n             * Retrieves the origin of the terrain sphere\n             */\n            this.sphereOrigin = function() {\n                var size = fp.terrain.gridExtent * fp.appConfig.terrainOptions.multiplier;\n                var he = size / 2;\n                var diameter = ( he / Math.PI ) * 2, radius = diameter / 2;\n                var origin = new THREE.Vector3( 0, - radius, 0 );\n                return origin;\n            };\n\n            /**\n             * Retrieves the angle to the origin of the terrain sphere.\n             * @param {Number} x\n             * @param {Number} y\n             * @param {Number} z\n             * @return {THREE.Vector3} A rotation vector in the order: pitch ( x ), yaw ( y ), roll ( z )\n             */\n            this.sphereOriginAngle = function( x, y, z ) {\n                // Retrieve standard variables about the sphere\n                var size = fp.terrain.gridExtent * fp.appConfig.terrainOptions.multiplier;\n                var he = size / 2;\n                var diameter = ( he / Math.PI ) * 2, radius = diameter / 2;\n                var origin = fp.terrain.sphereOrigin();\n                // Obtain the difference between the coordinate and the sphere's origin.\n                var diff = new THREE.Vector3( x, y, z ).sub( origin );\n                // Get differences and signs of values.\n                var dx = diff.x % radius, sx = $.sign( diff.x ), rx = Math.floor( Math.abs( diff.x ) / radius );\n                var dz = diff.z % radius, sz = $.sign( diff.z ), rz = Math.floor( Math.abs( diff.z ) / radius );\n                // Calculate the X and Z angle\n                var angleX = Math.asin( dx / radius );\n                var angleZ = Math.asin( dz / radius );\n                // Reflect the X angle if we have on the other side of the sphere.\n                if ( y < - radius ) {\n                    angleX = ( sx * Math.PI ) - angleX;\n                }\n                // Rotation is in the order: pitch, yaw, roll\n                var rotation = new THREE.Vector3( angleZ, 0, - angleX );\n                return rotation;\n            };\n\n            /**\n             * Transforms a single point from a plane to a sphere geometry.\n             * @param {Number} x\n             * @param {Number} y\n             * @param {Number} z\n             * @return {THREE.Vector3} The sphere position to transform the plane position to.\n             */\n            this.transformSpherePoint = function( x, y, z ) {\n                // Retrieve standard variables about the sphere\n                var size = fp.terrain.gridExtent * fp.appConfig.terrainOptions.multiplier;\n                var he = size / 2;\n                var diameter = ( he / Math.PI ) * 2, radius = diameter / 2;\n                var origin = this.sphereOrigin();\n                // Obtain the signs and absolute values for x and z values\n                var sx = $.sign( x ), sz = $.sign( z );\n                var ax = Math.abs( x ), az = Math.abs( z );\n                // Which is the highest absolute value?\n                var mxz = ( ax > az ? ax : az );\n                // Obtain the angle between the absolute values\n                var angle = Math.atan2( ax, az );\n                var ry = ( ( 1 + Math.sin( Math.PI * ( ( mxz / he ) - 0.5 ) ) ) / 2 ) * - diameter;\n                var nry = -ry;\n                var my = ( radius > nry ? radius - nry : nry - radius );\n                var py = Math.cos( Math.asin( my / radius ) );\n                var dx = sx * py;\n                var dz = sz * py;\n                var rx = dx * Math.sin( angle ) * radius;\n                var rz = dz * Math.cos( angle ) * radius;\n                // Adjust for existing terrain heights\n                var v1 = new THREE.Vector3( rx, rz, ry );\n                var v2 = new THREE.Vector3();\n                v2.subVectors( origin, v2 ).normalize().multiplyScalar( y );\n                return v1.add( v2 );\n            };\n\n            /**\n             * Wraps planar point to sphere - calls transformSpherePoint,\n             * but handles unpacking and applying the transformation to a certain percentage.\n             * @param {THREE.Vector3} point    the point to transform\n             * @param {Number} percent\n             * @return {THREE.Vector3} The sphere position to transform the plane position to.\n             */\n            this.transformPointFromPlaneToSphere = function( point, percent ) {\n                if ( percent <= 0 || percent > 100 )\n                    return point; // Optimisation when no transform is needed.\n                var x = point.x, y = point.y, z = point.z;\n                var nv = new THREE.Vector3( x, y, z );\n                var v2 = fp.terrain.transformSpherePoint( x, y, z );\n                var dv = new THREE.Vector3( v2.x, v2.z, v2.y );\n                dv.sub( nv ).multiplyScalar( percent / 100 );\n                nv.add( dv );\n                return nv;\n            };\n\n\n            /**\n             * Wraps a plane into a sphere\n             */\n            this.constructSphere = function( planeArray ) {\n                var sphereArray = planeArray.clone();//\n                var l = sphereArray.array.length;\n                for ( var j = 0; j < l; j += 3 ) {\n                    var x = planeArray.array[ j + 0 ];\n                    var z = planeArray.array[ j + 1 ];\n                    var y = planeArray.array[ j + 2 ];\n                    var v = this.transformSpherePoint( x, y, z );\n                    sphereArray.array[ j + 0 ] = v.x;\n                    sphereArray.array[ j + 1 ] = v.y;\n                    sphereArray.array[ j + 2 ] = v.z;\n                }\n                return sphereArray;\n            };\n\n            /**\n             * Wraps the plane into a sphere, to a specified percent ( 0 unwraps back to a plane ).\n             */\n            this.wrapTerrainIntoSphere = function( percent ) {\n                this.wrappedPercent = percent;\n                var i, j, k;\n                var pv, sv, nv, cv;\n                var transformedVertices, vertices;\n                if ( !_.isUndefined( percent ) && percent <= 100 && percent >= 0 ) {\n                    var l = fp.terrain.sphereArray.array.length;\n                    for ( i = 0; i < l; i++ ) {\n                        pv = fp.terrain.planeArray.array[ i ];\n                        sv = fp.terrain.sphereArray.array[ i ];\n                        nv = pv + ( sv - pv ) * ( percent / 100 );\n                        fp.terrain.plane.geometry.attributes.position.array[ i ] = nv;\n                    }\n                    fp.terrain.plane.geometry.attributes.position.needsUpdate = true;\n                    if ( !_.isNull( fp.patchNetwork.plane ) ) {\n                        l = fp.patchNetwork.patchSphereArray.array.length;\n                        for ( j = 0; j < l; j++ ) {\n                            pv = fp.patchNetwork.patchPlaneArray.array[ j ];\n                            sv = fp.patchNetwork.patchSphereArray.array[ j ];\n                            nv = pv + ( sv - pv ) * ( percent / 100 );\n                            fp.patchNetwork.plane.geometry.attributes.position.array[ j ] = nv;\n                        }\n                        fp.patchNetwork.plane.geometry.attributes.position.needsUpdate = true;\n                    }\n                    fp.buildingNetwork.buildings.forEach( function( building ) {\n                        building.lod.matrixAutoUpdate = false;\n                        cv = _.clone( building.originPosition );\n                        // var cv = _.clone( building.mesh );\n                        nv = fp.terrain.transformPointFromPlaneToSphere( cv, 100 );\n                        var v = fp.terrain.sphereOriginAngle( nv.x, nv.y, nv.z ).multiplyScalar( percent / 100 );\n                        nv = fp.terrain.transformPointFromPlaneToSphere( cv, percent );\n                        building.mesh.rotation.set( -Math.PI / 2 + v.x, -v.z, v.y );\n                        building.mesh.position.set( nv.x, nv.y, nv.z );\n                        building.lod.rotation.set( -Math.PI / 2 + v.x, -v.z, v.y );\n                        building.lod.position.set( nv.x, nv.y, nv.z );\n                        building.highResMeshContainer.rotation.set( -Math.PI / 2 + v.x, -v.z, v.y );\n                        building.highResMeshContainer.position.set( nv.x, nv.y, nv.z );\n                        building.lowResMeshContainer.rotation.set( -Math.PI / 2 + v.x, -v.z, v.y );\n                        building.lowResMeshContainer.position.set( nv.x, nv.y, nv.z );\n                    } );\n                    // Alter roards\n                    for ( k = 0; k < fp.roadNetwork.planeVertices.length; k++ ) {\n                        transformedVertices = [ ];\n                        vertices = fp.roadNetwork.planeVertices[ k ];\n                        for ( var m = 0; m < vertices.length; m++ ) {\n                            transformedVertices.push( fp.terrain.transformPointFromPlaneToSphere( vertices[ m ], percent ) );\n                        }\n                        fp.roadNetwork.networkMesh.children[ k ].geometry.vertices = transformedVertices;\n                        fp.roadNetwork.networkMesh.children[ k ].geometry.verticesNeedUpdate = true;\n                    }\n                    // Alter paths\n                    for (var n = 0; n < fp.pathNetwork.networkMesh.children.length; n++ ) {\n                        transformedVertices = [ ];\n                        vertices = fp.pathNetwork.networkMesh.children[ n ];\n                        for ( var o = 0; o < vertoces.length; o++ ) {\n                            transformedVertoces.push( fp.terrain.transformPointFromPlaneToSphere( vertices[ o ], percent ) );\n                        }\n                        fp.pathNetwork.networkMesh.children[ n ].geometry.vertices = transformedVertices;\n                        fp.pathNetwork.networkMesh.children[ n ].geometry.verticesNeedUpdate = true;\n                    }\n                    for ( var p = 0; p < fp.agentNetwork.agents.length; p++ ) {\n                        var agent = fp.agentNetwork.agents[ p ];\n                        nv = fp.terrain.transformPointFromPlaneToSphere( agent.position, percent );\n                        fp.agentNetwork.particles.geometry.vertices[ p ] = nv;\n                    }\n                    if ( !_.isNull( fp.agentNetwork.particles ) )\n                        fp.agentNetwork.particles.geometry.verticesNeedUpdate = true;\n                    for ( var r = 0; r < fp.agentNetwork.networks.length; r++ ) {\n                        transformedVertices = [ ];\n                        var network = fp.agentNetwork.networks[ r ];\n                        if ( !_.isNull( network.networkMesh ) ) {\n                            vertices = network.networkMesh.geometry.vertices;\n                            for ( var s = 0; s < vertices.length; s++ ) {\n                                transformedVertices.push( fp.terrain.transformPointFromPlaneToSphere( vertices[ s ], percent ) );\n                            }\n                            network.networkMesh.geometry.vertices = transformedVertices;\n                            network.networkMesh.geometry.verticesNeedUpdate = true;\n                        }\n                    }\n                }\n            };\n\n            /**\n             * Updates terrain.\n             */\n            this.updateTerrain = function() {\n                if ( this.wrappingState === 1 ) {\n                    fp.appConfig.displayOptions.waterShow = false;\n                    if ( fp.terrain.wrappedPercent < 100 ) {\n                        fp.terrain.wrapTerrainIntoSphere( fp.terrain.wrappedPercent );\n                        fp.terrain.wrappedPercent += this.wrappingState;\n                    }\n                    else {\n                        this.wrappingState = 0;\n                    }\n                }\n                else if ( this.wrappingState === -1 ) {\n                    if ( fp.terrain.wrappedPercent > 0 ) {\n                        fp.terrain.wrapTerrainIntoSphere( fp.terrain.wrappedPercent );\n                        fp.terrain.wrappedPercent += this.wrappingState;\n                    }\n                    else {\n                        fp.appConfig.displayOptions.waterShow = fp.appConfig.displayOptions.waterShow;\n                        this.wrappingState = 0;\n                    }\n                }\n                fp.toggleWaterState();\n            };\n        };\n\n        /**\n         * Represents the time scale used by the world.\n         * @constructor\n         * @memberof fp\n         * @inner\n         */\n       this.Timescale = function() {     // Time variables\n            this.initialYear = 1800;\n            this.endYear = 2200;\n            this.terminate = false;\n            this.currentYear = this.initialYear;\n            this.MAX_FRAMES_TO_YEAR = 480;\n            this.MIN_FRAMES_TO_YEAR = 1;\n            this.TOP_SPEED = 60 / this.MIN_FRAMES_TO_YEAR;\n            this.MIN_FRAMES_TO_YEAR = null;\n            this.framesToYear = 32;\n            this.frameCounter = 0;\n        };\n\n        /**\n         * Represents a mobile and alive agent\n         * @constructor\n         * @memberof fp\n         * @inner\n         */\n        this.Agent = function() {\n\n            /**\n             * @memberof Agent\n             */\n            this.updateTick = function() {\n                this.ticks++;\n                this.age++;\n            };\n\n            /**\n             * @memberof Agent\n             */\n            this.setDirection = function( dir ) {\n                this.direction = dir;\n            };\n\n            /**\n             * @memberof Agent\n             */\n            this.setPosition = function( v ) {\n                this.lastPosition = this.position = v;\n            };\n\n            /**\n             * @memberof Agent\n             */\n            this.findBuilding = function() {\n                var xl = this.lastPosition.x, zl = this.lastPosition.z;\n                return fp.buildingNetwork.buildingHash[ fp.getIndex( xl, zl ) ];\n            };\n\n            /**\n             * @memberof Agent\n             */\n            this.goingUp = function( building ) {\n                return ( building == this.home ) ?\n                    ( Math.random() < fp.appConfig.agentOptions.visitHomeBuilding ) :\n                     ( Math.random() < fp.appConfig.agentOptions.visitOtherBuilding );\n            };\n            /**\n             * @memberof Agent\n             */\n            this.updateGroundedState = function( building ) {\n                var xl = this.lastPosition.x, yl = this.lastPosition.y, zl = this.lastPosition.z,\n                    xd = this.direction.x, yd = this.direction.y, zd = this.direction.z;\n\n                if ( !this.grounded ) {\n                    var base = fp.getHeight( xl, zl ) + fp.appConfig.agentOptions.terrainOffset;\n                    if ( yl <= base && yd < 0 )\n                        this.grounded = true;\n                }\n                else if ( !_.isUndefined( building ) && this.goingUp( building ) ) { // grounded == true\n                    this.grounded = false;\n                }\n            };\n\n            /**\n             * Determines the next step for a computed direction.\n             * @memberof Agent\n             */\n            this.nextComputedDirection = function() {\n                if ( !this.pathComputed )\n                    return undefined;\n                if ( this.pathPosition + 1 >= this.pathComputed.length ) {\n                    this.pathPosition = 0;\n                    this.pathComputed = undefined;\n                    return this.randomDirection();\n                }\n                // If we have prearranged a path, ensure the current direction points towards that\n                var multiplier = fp.terrain.ratioExtentToPoint;\n                var nextNode = this.pathComputed[ this.pathPosition + 1 ],\n                    x = ( nextNode.x * multiplier - fp.terrain.halfExtent ) * fp.appConfig.terrainOptions.multiplier,\n                    z = ( nextNode.y * multiplier - fp.terrain.halfExtent ) * fp.appConfig.terrainOptions.multiplier;\n\n                // Time to move position?\n                if ( ( this.position.x + this.direction.x - x ) * $.sign( this.direction.x ) > 0  ||\n                     ( this.position.z + this.direction.z - z ) * $.sign( this.direction.z ) > 0 ) {\n                    this.pathPosition++;\n                    if ( this.pathPosition + 1 < this.pathComputed.length ) {\n                        nextNode = this.pathComputed[ this.pathPosition + 1 ];\n                        x = ( nextNode.x * multiplier - fp.terrain.halfExtent ) * fp.appConfig.terrainOptions.multiplier;\n                        z = ( nextNode.y * multiplier - fp.terrain.halfExtent ) * fp.appConfig.terrainOptions.multiplier;\n                    }\n                }\n                var xd = x - this.position.x,\n                    zd = z - this.position.z,\n                    xDir = xd / ( Math.abs( xd ) + Math.abs( zd ) ),\n                    zDir = zd / ( Math.abs( xd ) + Math.abs( zd ) ),\n                    dir = new THREE.Vector3( xDir, 0, zDir );\n                return dir;\n            };\n\n\n            /**\n             * Generates candicate directions from an existing direction.\n             * @memberof Agent\n             */\n            this.candidateDirections = function() {\n                // Check if we are in a building, and offer possibility of going up\n                var xl = this.lastPosition.x,\n                    yl = this.lastPosition.y,\n                    zl = this.lastPosition.z,\n                    xd = this.direction.x,\n                    yd = this.direction.y,\n                    zd = this.direction.z,\n                    isAlreadyOnRoad = fp.roadNetwork.indexValues.indexOf( fp.getIndex( xl, zl ) ) > -1;\n\n                var directionCount = 10,\n                    directions = new Array( directionCount );\n\n                // Work out if we have a precomputed path\n                var dir = this.nextComputedDirection();\n                if ( !_.isUndefined( dir ) )\n                    return [ [ dir, 1.0 ] ];\n\n                // Update whether we are in  a building, and should be going up or do wn\n                var building = this.findBuilding();\n                this.updateGroundedState( building );\n\n                // Weight variables\n                var weight = 1.0, weightForRoadIsSet = false;\n\n                // Pre-calculate speed and current angle\n                var newSpeed = Math.random() * this.speed / 2,\n                    angle = Math.atan2( zd, xd ),\n                    hyp = Math.sqrt( xd * xd + zd * zd ),\n                    divisor = ( directionCount - 2 ) / 2;\n\n                for ( var i = 0; i < directionCount; i++ ) {\n                    if ( ( i < 8 && ! this.grounded ) || ( i >= 8 && this.grounded ) )\n                        continue; // Move horizontally if grounded, vertically if not\n\n                    if ( i < 8 && this.grounded ) { // Horizonal directions\n                        var newAngle = angle + ( i * Math.PI / divisor );\n                        xd = Math.cos( newAngle ) * hyp;\n                        yd = 0;\n                        zd = Math.sin( newAngle ) * hyp;\n                    }\n                    else if ( !this.grounded && i >= 8 ) { // Vertical directions\n                        xd = 0;\n                        yd = ( i == 8 ) ? newSpeed : -newSpeed;\n                        zd = 0;\n                    }\n\n                    // Calculate new position\n                    var xn = xl + xd, yn = yl + yd, zn = zl + zd,\n                        isRoad = ( fp.roadNetwork.indexValues.indexOf( fp.getIndex( xn, zn )) > -1 );\n\n                    // If we've had a horizontal shift, for now neutralise the vertical to the fp.terrain height\n                    if ( yd === 0 ) {\n                        yn = fp.getHeight( xn, zn );\n                        // Smooth the transition between heights\n                        yd = ( ( fp.appConfig.agentOptions.terrainOffset + yn ) - yl ) / fp.terrain.ratioExtentToPoint;\n                    }\n                    if ( yn === null )\n                        continue; // Off the grid - don't return this option\n\n                    // Work out weights\n\n                    if ( i === 0 ) { // Current direction most preferred\n                        weight = 0.999;\n                        if ( isRoad )\n                            weightForRoadIsSet = true;\n                    }\n                    else {\n                        if ( !weightForRoadIsSet && isRoad ) {\n                            if ( !isAlreadyOnRoad )\n                                weight = 0.999;\n                            else\n                                weight = 0.5;\n                            weightForRoadIsSet = true;\n                        }\n                        else\n                            weight = 0.001;\n                    }\n\n                    // If moving upward, decrease the preference\n                    if ( yn > yl && this.grounded && fp.appConfig.agentOptions.noUphill )\n                        weight *= yl / yn;\n\n                    // If currect direction is moving to water, set the preference low\n                    if ( i === 0 && yn <= 0 && fp.appConfig.agentOptions.noWater )\n                        weight = 0.0;\n\n                    // If inside a building, adjust weights\n                    if ( !this.grounded && !_.isUndefined( building ) ) {\n                        var buildingHeight = building.levels * fp.appConfig.buildingOptions.levelHeight + building.lod.position.y;\n                        if ( i == 8 ) {\n                            if ( yl >= buildingHeight || this.direction.y < 0 )\n                                weight = 0.0;\n                            else\n                                weight = 1.0;\n                        }\n                        else if ( i == 9 ) {\n                            if ( yl >= buildingHeight || this.direction.y < 0 )\n                                weight = 1.0;\n                            else if ( this.direction.y > 0 && Math.random() > 0.99 )\n                                weight = 1.0;\n                            else\n                                weight = 0.0;\n                        }\n                    }\n\n                    // Set the direction\n                    directions[ i ] = [ new THREE.Vector3( xd, yd, zd ), weight ];\n                }\n\n                // Compact directions and sort by weight descending\n                directions = _.chain( directions ).compact().sort( function( a,b ) { return ( a[ 1 ] > b[ 1 ] ) ? 1 : ( a[ 1 ] < b [ 1 ]? -1 : 0 ); } ).value();\n\n                // If no directions are found, reverse current direction\n                if ( directions.length === 0 ) {\n                    var x = -this.direction.x;\n                    var z = -this.direction.z;\n                    var direction = new THREE.Vector3( x, fp.getHeight( x, z ), z );\n                    directions.push( [ direction, 1.0 ] );\n                }\n\n                return directions;\n            };\n\n            /**\n             * Generates directions and weights, given an agent's existing direction.\n             */\n            this.generateDirectionVectorsAndWeights = function( seed ) {\n                var xl = this.lastPosition.x,\n                    yl = this.lastPosition.y,\n                    zl = this.lastPosition.z,\n                    xd = this.direction.x,\n                    yd = this.direction.y,\n                    zd = this.direction.z,\n                    isAlreadyOnRoad = fp.roadNetwork.indexValues.indexOf( fp.getIndex( xl, zl ) ) > -1;\n\n                // Logic for handling pre-determined paths\n                if ( _.isUndefined( this.pathComputed ) || this.pathComputed.length < 2 ) {\n                    if ( Math.random() < fp.appConfig.agentOptions.chanceToFindPathToHome )  {\n                        this.pathComputed = fp.pathNetwork.findPathHome( this );\n                        this.pathPosition = 0;\n                    }\n                    else if ( Math.random() < fp.appConfig.agentOptions.chanceToFindPathToOtherAgentHome ) {\n                        this.pathComputed = fp.pathNetwork.findPathToOtherAgentsHome( this );\n                        this.pathPosition = 0;\n                    }\n                }\n\n                // Work out if we have a precomputed path\n                var dir = this.nextComputedDirection();\n                if ( !_.isUndefined( dir ) )\n                    return [ [ dir, 1.0 ] ];\n\n                var directionCount = 8,\n                     directions = new Array( directionCount  );\n\n                // Weight variables\n                var weight = 1.0, weightForRoadIsSet = false;\n\n                // Pre-calculate speed and current angle\n                var angle = Math.atan2( zd, xd ),\n                    hyp = Math.sqrt( xd * xd + zd * zd ),\n                    divisor = directionCount / 2;\n\n                for ( var i = 0; i < directionCount; i++ ) {\n                    // Slight rounding errors using above calculation\n                    var newAngle = angle + ( i * Math.PI / divisor );\n                    // directionAtSpeed = directionAtSpeed.multiplyScalar( patchSize );\n                    xd = Math.cos( newAngle ) * hyp;\n                    yd = 0;\n                    zd = Math.sin( newAngle ) * hyp;\n\n                    // Calculate new position\n                    var xn = xl + xd, yn = yl + yd, zn = zl + zd,\n                        isRoad = ( fp.roadNetwork.indexValues.indexOf( fp.getIndex( xn, zn )) > -1 );\n\n                    // Work out weights - should be\n                    switch( i ) {\n                        case 0:\n                            weight = Math.pow( seed, 1 );\n                            break;\n                        case 1:\n                        case 7:\n                            weight = Math.pow( seed, 3 );\n                            break;\n                        case 2:\n                        case 4:\n                        case 6:\n                            weight = Math.pow( seed, 4 );\n                            break;\n                        case 3:\n                        case 5:\n                            weight = Math.pow( seed, 5 );\n                            break;\n                    }\n\n                    yn = fp.getHeight( xn, zn );\n\n                    // If the new y position is zero, set the weight to zero\n                    if ( yn === null )\n                        continue;\n\n                    // If the new y position is zero, set the weight to zero\n                    if ( yn <= fp.appConfig.terrainOptions.defaultHeight )\n                        weight = 0;\n\n                    // Set to the height of the terrain\n                    yn += fp.appConfig.terrainOptions.defaultHeight;\n                    // Offset relative to the terrain\n                    yn += fp.appConfig.agentOptions.terrainOffset;\n                    // Add half the agent's own size\n                    yn += fp.appConfig.agentOptions.size / 2;\n\n                    // Smooth the transition between heights\n                    yd = ( yn - yl ) / fp.terrain.ratioExtentToPoint;\n\n                    // Set the direction\n                    directions[ i ] = [ new THREE.Vector3( xd, yd, zd ), weight ];\n                }\n                directions = _.chain( directions ).\n                                compact().\n                                shuffle().\n                                sort( function( a, b ) { return ( a[ 1 ] > b[ 1 ] ) ? 1 : ( a[ 1 ] < b [ 1 ]? -1 : 0 ); } ).\n                                value();\n\n                return directions;\n            };\n\n            /**\n             * @memberof Agent\n             */\n            this.bestCandidate = function() {\n                var directions = this.generateDirectionVectorsAndWeights( 0.1 );\n\n                // A direction is pulled from a weighted list of possibilities\n                var total = _.chain( directions ).\n                    map( function( d ) { return d[ 1 ]; } ).\n                    reduce( function( memo, num ) { return memo + num; }, 0 ).\n                    value();\n                var weightsNormed = _.chain( directions ).\n                    map( function( d ) { return d[ 1 ] / total; } ).\n                    sort().\n                    reverse().\n                    value();\n                var r = Math.random();\n                var index = 0, runningTotal = 0, len = directions.length - 1;\n                // Note the interval array is initialisaed with an addition zero\n                for ( var i = 0; i < weightsNormed.length; i++ ) {\n                    var a = weightsNormed[ i ];\n                    runningTotal += a;\n                    if ( r < runningTotal && i < directions.length ) {\n                        return directions[ len - i ][ 0 ];\n                    }\n                }\n                return this.randomDirection();\n            };\n\n            /**\n             * @memberof Agent\n             */\n            this.move = function() {\n                var directionAtSpeed = this.direction.clone().multiplyScalar( 16 / fp.timescale.framesToYear );\n                // Multiply relative to patch size\n                var factor = fp.appConfig.terrainOptions.multiplier;\n                if ( fp.appConfig.agentOptions.movementRelativeToPatch ) {\n                    factor *= fp.appConfig.terrainOptions.patchSize *\n                                ( fp.appConfig.agentOptions.movementInPatch / 100 );\n                }\n                directionAtSpeed.x *= factor;\n                directionAtSpeed.z *= factor;\n                var newPosition = this.position.clone().add( directionAtSpeed );\n                var bound = fp.appConfig.terrainOptions.multiplier * fp.terrain.gridExtent / 2;\n                // Simple check to ensure we're within terrain bounds\n                if ( newPosition.x < -bound || newPosition.x >= bound || newPosition.z < -bound || newPosition.z >= bound ) {\n                    this.setDirection( this.randomDirection() );\n                }\n                else {\n                    this.position = newPosition;\n                }\n            };\n\n            /**\n             * @memberof Agent\n             */\n            this.evaluateDirection = function() {\n                this.lastPosition = this.position;\n                this.setDirection( this.bestCandidate() );\n            };\n\n            /**\n             * Returns array of compass directions\n             */\n            this.compassDirections = function() {\n                var direction = 0, directions = [ ];\n                for ( var i = 0; i < 8; i++ ) {\n                    var x = Math.cos( direction ) / 2;\n                    var z = Math.sin( direction ) / 2;\n                    directions.push( [ x, z ] );\n                    direction += Math.PI / 4;\n                }\n                return directions;\n            };\n\n            /**\n             * Genenerates a random vector.\n             * @memberof Agent\n             */\n            this.randomDirection = function() {\n                if ( fp.appConfig.agentOptions.movementStrictlyIntercardinal ) {\n                    return new THREE.Vector3( this.speed * ( Math.random() - 0.5 ), 0, this.speed * ( Math.random() - 0.5 ) );\n                }\n                else {\n                    var directions = this.compassDirections();\n                    var index = Math.floor( Math.random() * 8 );\n                    var pos = directions[ index ];\n                    var vec = new THREE.Vector3( this.speed * pos[ 0 ], 0, this.speed * pos[ 1 ] );\n                    return vec;\n                }\n            };\n\n            /**\n             * @memberof Agent\n             */\n            this.nearestNeighbour = function( ignoreHeight ) {\n                var agents = fp.agentNetwork.agents;\n                var x = this.position.x, y = this.position.y, z = this.position.z;\n                var nearest = null, leastLen = 0;\n                for ( var i = 0; i < agents.length; i++ ) {\n                    var agent = agents[ i ];\n                    if ( agent == this )\n                        continue;\n                    var ox = agent.position.x, oy = agent.position.y, oz = agent.position.z;\n                    var len = Math.sqrt( Math.pow( ox - x, 2 ) + Math.pow( oz - z, 2 ) );\n                    if ( ! ignoreHeight ) {\n                        len = Math.sqrt( Math.pow( len, 2 ) + Math.pow( oy - y, 2 ) );\n                    }\n                    if ( leastLen === 0 || len < leastLen ) {\n                        nearest = agent;\n                        leastLen = len;\n                    }\n                }\n                return nearest;\n            };\n\n            /**\n             * @memberof Agent\n             */\n            this.setRandomDirection = function() {\n                this.setDirection( this.randomDirection() );\n            };\n\n            /**\n             * Slightly changes to the direction of the agent.\n             */\n            this.perturbDirection = function() {\n                this.direction.x += this.perturbBy * ( Math.random() - 0.5 );\n                this.direction.z += this.perturbBy * ( Math.random() - 0.5 );\n            };\n\n            /**\n             * Calculate likelihood of building a home\n             */\n            this.calculateLikelihoodOfHome = function( index ) {\n                // Simple test of local roads, water, buildings and building height\n                var proximityTests = fp.buildingNetwork.proximityFunctions();\n                for ( var i = proximityTests.length - 1; i >= 0; i-- ) {\n                    var proximityTest = proximityTests[ i ];\n                    var func = _.first( proximityTest );\n                    var values = _.rest( proximityTest );\n                    var response = func.apply( fp, _.union( [ index ], values ) );\n                    if ( response )\n                        return true;\n                }\n                return false;\n            };\n\n            /**\n             * Builds a building on the agent's current position.\n             * @return {Boolean} Whether the building construction was successful.\n             */\n            this.build = function() {\n                if ( !fp.appConfig.buildingOptions.create )\n                    return false;\n\n                if ( this.home !== null )\n                    return false;\n\n                if ( this.position === null )\n                    return false;\n\n                var index = fp.getIndex( this.position.x, this.position.z );\n                if ( _.isUndefined( index ) )\n                    return false;\n\n                // Don't build in an existing position\n                if ( !_.isUndefined( fp.buildingNetwork.buildingHash[ index ] ) )\n                    return false;\n\n                var dimensions = fp.buildingNetwork.generateRandomDimensions();\n\n                if ( fp.buildingNetwork.buildings.length === 0 ) { // If there are no buildings, build an initial \"seed\"\n                    this.home = fp.buildingNetwork.createBuilding( this.position, dimensions );\n                    return ( !_.isUndefined( this.home ) );\n                }\n                else if ( fp.buildingNetwork.networkMesh.children.length >= fp.appConfig.buildingOptions.maxNumber )\n                    return false;\n\n                if ( !_.isNull( fp.stats ) && fp.statss <= 10 )\n                    return false;\n\n                var shouldBuildHome = this.calculateLikelihoodOfHome( index );\n                if ( shouldBuildHome ) {\n                    this.home = fp.buildingNetwork.createBuilding( this.position, dimensions );\n                    return ( !_.isUndefined( this.home ) );\n                }\n\n                return false;\n            };\n\n            /**\n             * Builds a road on the agent's current position.\n             * @return {Boolean} Whether the road construction was successful.\n             */\n            this.buildRoad = function() {\n                if ( !fp.appConfig.roadOptions.create )\n                    return false;\n\n                var xOrig = this.position.x,\n                    zOrig = this.position.z,\n                    index = fp.getIndex( xOrig, zOrig ),\n                    xInit = fp.appConfig.agentOptions.initialX,\n                    zInit = fp.appConfig.agentOptions.initialY,\n                    xd = ( xOrig - xInit ),\n                    zd = ( zOrig - zInit ),\n                    distanceFromInitialPoint = Math.sqrt( xd * xd + zd * zd ),\n                    buildingIndex = _.map( fp.buildingNetwork.buildings, function( building ) { return fp.getIndex( building.lod.position.x, building.lod.position.z ); } );\n\n                if ( fp.roadNetwork.networkMesh.children.length >= fp.appConfig.roadOptions.maxNumber )\n                    return false;\n\n                if ( !_.isNull( fp.stats ) && fp.statss <= 10 )\n                    return false;\n\n                if ( fp.appConfig.displayOptions.buildingsShow ) {\n                    if ( fp.buildingNetwork.buildings.length === 0 ) {\n                        return false;\n                    }\n                    else if ( fp.buildingNetwork.buildings.length == 1 ) {\n                        if ( buildingIndex.indexOf( index ) == -1 )\n                            return false;\n                    }\n                }\n                if ( fp.roadNetwork.indexValues.length === 0 ) {\n                    if ( distanceFromInitialPoint > fp.appConfig.roadOptions.initialRadius )\n                        return false;\n                }\n                else {\n                    if ( fp.roadNetwork.indexValues.indexOf( index ) == -1 )\n                        return false;\n                    if ( buildingIndex.indexOf( index ) == -1 ) {\n                        var r = Math.random();\n                        var chance = 1 / ( Math.log( distanceFromInitialPoint + 1 ) * fp.appConfig.roadOptions.probability );\n                        if ( chance < r )\n                            return false;\n                    }\n                }\n\n                // Pick a random direction to create a road\n                var xr = Math.random() * 2 - 0.5,\n                    zr = Math.random() * 2 - 0.5,\n                    lenMinimum = fp.appConfig.roadOptions.lenMinimum,\n                    lenMaximum = fp.appConfig.roadOptions.lenMaximum,\n                    lenFactor = Math.random();\n                var existingRoad = fp.roadNetwork.roads[ index ];\n                if ( existingRoad ) {\n                    var ps = _.first( existingRoad.geometry.vertices ),\n                        pe = _.last( existingRoad.geometry.vertices ),\n                        xChange = ps.x - pe.x,\n                        zChange = ps.z - pe.z,\n                        angle = Math.atan2( zChange, xChange ),\n                        turn = Math.round( Math.random() ),\n                        angle90 = angle + Math.PI / 2 + Math.PI * turn;\n                    xr = Math.cos( angle90 );\n                    zr = Math.sin( angle90 );\n                }\n                var totalLen = lenMinimum +\n                                ( lenMaximum - lenMinimum ) *\n                                ( 1 - jStat.exponential.cdf( lenFactor, fp.appConfig.roadOptions.lenDistributionFactor ) ),\n                    xExtent = xr * totalLen,\n                    zExtent = zr * totalLen,\n                    xEnd = this.position.x + xExtent,\n                    zEnd = this.position.z + zExtent,\n                    yEnd = fp.getHeight( xEnd, zEnd ),\n                    endPoint = new THREE.Vector3( xEnd, yEnd, zEnd ),\n                    xe = xOrig - xEnd,\n                    ze = zOrig - zEnd,\n                    distanceFromEnd = Math.sqrt( xe * xe + ze * ze ),\n                    width = Math.ceil( ( ( ( 1 / Math.log( distanceFromInitialPoint + 10 ) ) ) * Math.log( distanceFromEnd ) ) * fp.appConfig.roadOptions.roadWidth );\n                return fp.roadNetwork.addRoad( this.position, endPoint, width );\n            };\n            this.vertex = null;\n            this.position = null;\n            this.direction = null;\n            this.speed = fp.appConfig.agentOptions.initialSpeed;\n            this.perturbBy = fp.appConfig.agentOptions.initialPerturbBy;\n            this.lastPosition = null;\n            this.grounded = true;\n            this.alpha =  0.5 + ( Math.random() / 2 );\n            this.color = \"#ff0000\"; // Red. Alternative for this model is blue: \"#0000ff\"\n            this.ticks = 0;\n            this.age = 0;\n\n            this.home = null;\n            this.health = 100;\n            this.gender = Math.random() < 0.5 ? \"f\": \"m\";\n            this.children = [ ];\n            this.friends = [ ];\n            this.pathComputed = undefined;\n            this.pathPosition = 0;\n        };\n\n\n        /**\n         * Represents a building with a position, dimesions, and one or more floors.\n         * @constructor\n         * @memberof fp\n         * @inner\n         */\n        this.Building = function( form, dimensions, position, rotation ) {\n\n            /**\n             * Sets the dimensions of the building.\n             * @param  {object} dimensions object containing levels, width and length properties.\n             */\n            this.initDimensions = function( dimensions ) {\n                this.lod = new THREE.LOD();\n                this.yOffset = 0;\n                this.levels = 0;\n                this.localMaxLevels = dimensions.levels;\n                this.localWidth = dimensions.width;\n                this.localLength = dimensions.length;\n\n                // Set up materials\n                var fc, lc, wc;\n                if ( fp.appConfig.displayOptions.dayShow ) {\n                    fc = fp.buildColorVector( fp.appConfig.colorOptions.colorDayBuildingFill );\n                    lc = fp.buildColorVector( fp.appConfig.colorOptions.colorDayBuildingLine );\n                    wc = fp.buildColorVector( fp.appConfig.colorOptions.colorDayBuildingWindow );\n                }\n                else {\n                    fc = fp.buildColorVector( fp.appConfig.colorOptions.colorNightBuildingFill );\n                    lc = fp.buildColorVector( fp.appConfig.colorOptions.colorNightBuildingLine );\n                    wc = fp.buildColorVector( fp.appConfig.colorOptions.colorNightBuildingWindow );\n                }\n\n                this.lineMaterial = new THREE.LineBasicMaterial( {\n                    color: lc,\n                    linewidth: fp.appConfig.buildingOptions.linewidth\n                } );\n                this.windowMaterial = new THREE.MeshBasicMaterial( { color: wc } );\n                this.windowMaterial.side = THREE.DoubleSide;\n                this.buildingMaterial = new THREE.MeshBasicMaterial( { color: fc } );\n                this.buildingMaterial.side = THREE.DoubleSide;\n                this.buildingMaterial.opacity = 1;\n\n                this.geometry = new THREE.Geometry();\n                // Pre-fill with enough vertices\n                for ( var i = 0; i < ( fp.appConfig.maxLevels * 16 + 8 ); i++ )\n                    this.geometry.vertices.push( new THREE.Vector3( 0,0,0 ));\n                this.geometry.verticesNeedUpdate = true;\n                this.geometry.computeVertexNormals();\n\n                // Set up containers\n                this.mesh = new THREE.Object3D();\n                this.highResMeshContainer = new THREE.Object3D();\n                this.lowResMeshContainer = new THREE.Object3D();\n\n                if ( ! fp.appConfig.buildingOptions.useShader ) {\n                    this.mesh = new THREE.Line( this.geometry, this.lineMaterial, THREE.LineSegments );\n                    this.highResMeshContainer.add( this.mesh );\n\n                    this.windowsOutlineContainer = new THREE.Object3D();\n                    if ( fp.appConfig.buildingOptions.windowsLine )\n                        this.highResMeshContainer.add( this.windowsOutlineContainer );\n\n                    this.windowsFillContainer = new THREE.Object3D();\n                    if ( fp.appConfig.buildingOptions.windowsFill )\n                        this.highResMeshContainer.add( this.windowsFillContainer );\n                }\n\n                if ( fp.appConfig.buildingOptions.useLevelOfDetail ) {\n                    this.lod.addLevel( this.highResMeshContainer, fp.appConfig.buildingOptions.highResDistance );\n                    this.lod.addLevel( this.lowResMeshContainer, fp.appConfig.buildingOptions.lowResDistance );\n                    this.lowResGeometry = new THREE.BoxGeometry( fp.appConfig.buildingOptions.width, ( this.levels + 1 ) * fp.appConfig.buildingOptions.levelHeight, fp.appConfig.buildingOptions.length );\n                    this.lowResGeometry.applyMatrix( new THREE.Matrix4().makeTranslation( 0, ( this.levels + 1 ) * fp.appConfig.buildingOptions.levelHeight / 2, 0 ) );\n                    this.lowResMesh = new THREE.Mesh( this.lowResGeometry, this.buildingMaterial );\n                    this.lowResMeshContainer.add( this.lowResMesh );\n                }\n                else\n                    this.lod.addLevel( this.highResMeshContainer, 1 );\n\n                this.lod.updateMatrix();\n                this.lod.matrixAutoUpdate = false;\n            };\n\n            /**\n             * Adds a new floor to the current building\n             */\n            this.addFloor = function () {\n                var base = this.levels * fp.appConfig.buildingOptions.levelHeight;\n                var points = fp.BUILDING_FORMS[ this.buildingForm ]( this.localWidth, this.localLength, base );\n                if ( !fp.appConfig.buildingOptions.useShader ) {\n                    if ( fp.appConfig.buildingOptions.showLines ) {\n                        this.geometry.dynamic = true;\n                        this.generateSkeleton( points );\n                        this.geometry.verticesNeedUpdate = true;\n                    }\n                    if ( fp.appConfig.buildingOptions.showFill )\n                        this.generateExtrudedShape( points );\n                    if ( fp.appConfig.buildingOptions.showWindows )\n                        this.generateWindows( points );\n                }\n                else {\n                    this.shadedShape( points );\n                }\n\n                this.levels++;\n                // Update a low res model once the rest is complete\n                this.updateSimpleBuilding();\n\n                // Do tapering and staggering here\n                if ( fp.appConfig.buildingOptions.stagger ) {\n                    if ( fp.appConfig.buildingOptions.taper ) {\n                        var percentage = this.levels / this.localMaxLevels;\n                        var sq = Math.pow( percentage, fp.appConfig.buildingOptions.taperExponent );\n                        var hurdle = jStat.exponential.cdf( sq, fp.appConfig.buildingOptions.taperDistribution );\n                        if ( Math.random() < hurdle ) {\n                            this.localWidth -= fp.appConfig.buildingOptions.staggerAmount;\n                            this.localLength -= fp.appConfig.buildingOptions.staggerAmount;\n                        }\n                    }\n                    else {\n                        this.localWidth -= fp.appConfig.buildingOptions.staggerAmount;\n                        this.localLength -= fp.appConfig.buildingOptions.staggerAmount;\n                    }\n                }\n            };\n\n            /**\n             * Removes the top floor from the current building\n             */\n            this.removeFloor = function() {\n                var topFloor = this.highResMeshContainer.children[ this.highResMeshContainer.children.length - 1 ];\n                this.highResMeshContainer.remove( topFloor );\n                this.levels--;\n                // Update a low res model once the rest is complete\n                this.updateSimpleBuilding();\n            };\n\n            this.generateSkeleton = function ( points ) {\n                var i, base = points[ 0 ].y;\n                var height = base + fp.appConfig.buildingOptions.levelHeight;\n                var offset = fp.getOffset( this.levels, points.length );\n\n                if ( this.levels === 0 ) {\n                    this.geometry.vertices[ offset ] = points[ 0 ];\n                    for ( i = 1; i < points.length; i++ ) {\n                        this.geometry.vertices[ offset + i * 2 - 1 ] = points[ i ];\n                        this.geometry.vertices[ offset + i * 2 ] = points[ i ];\n                    }\n                    this.geometry.vertices[ offset + points.length * 2 - 1 ] = points[ 0 ];\n                    offset += points.length * 2;\n                }\n\n                for ( i = 0; i < points.length; i++ ) {\n                    this.geometry.vertices[ offset + i * 2 ] = points[ i ];\n                    this.geometry.vertices[ offset + i * 2 + 1 ] = new THREE.Vector3( points[ i ].x, height, points[ i ].z );\n                }\n                offset += points.length * 2;\n\n                this.geometry.vertices[ offset ] = new THREE.Vector3( points[ 0 ].x, height, points[ 0 ].z );\n                for ( i = 1; i < points.length; i++ ) {\n                    this.geometry.vertices[ offset + i * 2 - 1 ] = new THREE.Vector3( points[ i ].x, height, points[ i ].z );\n                    this.geometry.vertices[ offset + i * 2 ] = new THREE.Vector3( points[ i ].x, height, points[ i ].z );\n                }\n                this.geometry.vertices[ offset + points.length * 2 - 1 ] = new THREE.Vector3( points[ 0 ].x, height, points[ 0 ].z );\n            };\n\n            this.generateExtrudedShape = function ( points ) {\n                var base = points[ 0 ].y;\n                var height = base + fp.appConfig.buildingOptions.levelHeight;\n                var offset = fp.getOffset( this.levels, points.length );\n\n                // EXTRUDED SHAPE FOR NON-BOX SHAPED BUILDINGS\n                var shape = new THREE.Shape();\n                shape.moveTo( points[ 0 ].x, points[ 0 ].z );\n                for ( var i = 1; i < points.length; i++ ) {\n                    shape.lineTo( points[ i ].x, points[ i ].z );\n                }\n                shape.lineTo( points[ 0 ].x, points[ 0 ].z );\n                var extrudeSettings = { amount: fp.appConfig.buildingOptions.levelHeight * 1.0, bevelEnabled: false };\n                var shapeGeometry = new THREE.ExtrudeGeometry( shape, extrudeSettings );\n                shapeGeometry.faceVertexUvs[ 0 ][ 0 ][ 0 ].set( 0, 0 );\n                shapeGeometry.faceVertexUvs[ 0 ][ 0 ][ 1 ].set( 0, 0 );\n                shapeGeometry.faceVertexUvs[ 0 ][ 0 ][ 2 ].set( 0, 0 );\n                shapeGeometry.faceVertexUvs[ 0 ][ 1 ][ 0 ].set( 0, 0 );\n                shapeGeometry.faceVertexUvs[ 0 ][ 1 ][ 1 ].set( 0, 0 );\n                shapeGeometry.faceVertexUvs[ 0 ][ 1 ][ 2 ].set( 0, 0 );\n                shapeGeometry.faceVertexUvs[ 0 ][ 2 ][ 0 ].set( 0, 0 );\n                shapeGeometry.faceVertexUvs[ 0 ][ 2 ][ 1 ].set( 0, 0 );\n                shapeGeometry.faceVertexUvs[ 0 ][ 2 ][ 2 ].set( 0, 0 );\n                shapeGeometry.faceVertexUvs[ 0 ][ 3 ][ 0 ].set( 0, 0 );\n                shapeGeometry.faceVertexUvs[ 0 ][ 3 ][ 1 ].set( 0, 0 );\n                shapeGeometry.faceVertexUvs[ 0 ][ 3 ][ 2 ].set( 0, 0 );\n                shapeGeometry.computeBoundingBox();\n                if ( shapeGeometry.boundingBox ) {\n                    var fc = ( fp.appConfig.displayOptions.dayShow ) ? fp.appConfig.colorOptions.colorDayBuildingFill : fp.appConfig.colorOptions.colorNightBuildingFill;\n                    var buildingMaterial = new THREE.MeshBasicMaterial( {color: fc } );\n                    var box = new THREE.Mesh( shapeGeometry, buildingMaterial );\n                    box.rotation.set( Math.PI / 2, 0, 0 );\n                    box.position.set( 0, height, 0 );\n                    box.geometry.verticesNeedUpdate = true;\n                    this.highResMeshContainer.add( box );\n                }\n            };\n\n            this.generateWindows = function ( points ) {\n                var base = points[ 0 ].y + fp.appConfig.agentOptions.terrainOffset;\n                var offset = fp.getOffset( this.levels, points.length );\n\n                // General calculable variables\n                var windowHeight = ( (fp.appConfig.buildingOptions.windowsEndY - fp.appConfig.buildingOptions.windowsStartY ) / 100 ) * fp.appConfig.buildingOptions.levelHeight;\n                var winActualWidth = ( fp.appConfig.buildingOptions.windowPercent / 100 ) * fp.appConfig.buildingOptions.windowWidth;\n\n                // Create the window shape template\n                var shape = new THREE.Shape();\n                shape.moveTo( 0, 0 );\n                shape.lineTo( winActualWidth, 0 );\n                shape.lineTo( winActualWidth, windowHeight );\n                shape.lineTo( 0, windowHeight );\n                shape.lineTo( 0, 0 );\n                var extrudeSettings = { amount: 1.0, bevelEnabled: false };\n                var shapeGeometry = new THREE.ExtrudeGeometry( shape, extrudeSettings );\n                // var shapeGeometry = new THREE.ShapeGeometry( shape );\n                var box = new THREE.Mesh( shapeGeometry, this.windowMaterial );\n\n                var outlineGeometry = new THREE.ShapeGeometry( shape );\n                var windowPoints = shape.createPointsGeometry();\n                var windowOutline = new THREE.Line( windowPoints, this.lineMaterial );\n\n                for ( var i = 0; i < points.length; i++ ) {\n                    var previousPoint;\n                    if ( i === 0 )\n                        previousPoint = points[ points.length - 1 ];\n                    else\n                        previousPoint = points[ i - 1 ];\n                    var currentPoint = points[ i ];\n                    var xDiff = currentPoint.x - previousPoint.x;\n                    var zDiff = currentPoint.z - previousPoint.z;\n                    var lineLength = Math.sqrt( xDiff * xDiff + zDiff * zDiff );\n                    var windowCount = Math.floor( lineLength / fp.appConfig.buildingOptions.windowWidth );\n                    var winOffset = ( fp.appConfig.buildingOptions.windowWidth - winActualWidth ) / 2;\n                    var windowStart = base + ( fp.appConfig.buildingOptions.levelHeight * ( fp.appConfig.buildingOptions.windowsStartY / 100 ));\n                    var windowEnd = base + ( fp.appConfig.buildingOptions.levelHeight * ( fp.appConfig.buildingOptions.windowsEndY / 100 ));\n                    var winW = winActualWidth * ( xDiff / lineLength );\n                    var winL = winActualWidth * ( zDiff / lineLength );\n                    var winOffsetW = winOffset * ( xDiff / lineLength );\n                    var winOffsetL = winOffset * ( zDiff / lineLength );\n                    var angle = Math.atan2( xDiff, zDiff ) + Math.PI / 2;\n                    for ( var j = 0 ; j < windowCount; j++ ) {\n                        var winX = previousPoint.x + ( j * xDiff / windowCount ) + winOffsetW;\n                        var winZ = previousPoint.z + ( j * zDiff / windowCount ) + winOffsetL;\n\n                        if ( fp.appConfig.buildingOptions.windowsFill ) {\n                            var boxCopy = box.clone();\n                            boxCopy.position.set( winX + winW, windowStart, winZ + winL );\n                            boxCopy.rotation.set( 0, angle, 0 );\n                            this.windowsFillContainer.add( boxCopy );\n                        }\n\n                        if ( fp.appConfig.buildingOptions.windowsLine ) {\n                            var windowOutlineCopy = windowOutline.clone();\n                            windowOutlineCopy.position.set( winX + winW, windowStart, winZ + winL );\n                            windowOutlineCopy.rotation.set( 0, angle, 0 );\n                            this.windowsOutlineContainer.add( windowOutlineCopy );\n                        }\n                    }\n                }\n            };\n\n\n            this.shadedShapeMock = function() {\n                // var base = this.levels * fp.appConfig.buildingOptions.levelHeight + fp.appConfig.terrainOptions.defaultHeight;\n                var points = fp.BUILDING_FORMS[ this.buildingForm ]( this.localWidth, this.localLength, base );\n                var base = points[ 0 ].y;\n                var height = base;// + this.lod.position.y;\n                var offset = fp.getOffset( this.levels, points.length );\n                var shape = new THREE.Shape();\n                shape.moveTo( points[ 0 ].x, points[ 0 ].z );\n                for ( var i = 1; i < points.length; i++ )\n                    shape.lineTo( points[ i ].x, points[ i ].z );\n                shape.lineTo( points[ 0 ].x, points[ 0 ].z );\n                var extrudeSettings = { amount: fp.appConfig.buildingOptions.levelHeight * 1.0, bevelEnabled: false };\n                var shapeGeometry = new THREE.ExtrudeGeometry( shape, extrudeSettings );\n                shapeGeometry.computeBoundingBox();\n                var mesh;\n\n                if ( shapeGeometry.boundingBox ) {\n                    var dumbMaterial = new THREE.MeshBasicMaterial( { color: \"#ff0000\" } );\n                    dumbMaterial.visible = false;\n\n                    mesh = new THREE.Mesh( shapeGeometry, dumbMaterial );\n                    mesh.rotation.set( -Math.PI / 2, 0, 0 );\n                    height = fp.getHeight( this.highResMeshContainer.position.x, this.highResMeshContainer.position.z );\n                    mesh.position.set( this.highResMeshContainer.position.x, height, this.highResMeshContainer.position.z );\n                    mesh.updateMatrix();\n                    return mesh;\n                }\n                return null;\n            };\n\n            this.shadedShapeGeometry = function( points ) {\n                var shape = new THREE.Shape();\n                shape.moveTo( points[ 0 ].x, points[ 0 ].z );\n                for ( var i = 1; i < points.length; i++ )\n                    shape.lineTo( points[ i ].x, points[ i ].z );\n                shape.lineTo( points[ 0 ].x, points[ 0 ].z );\n                return shape;\n            };\n\n            this.shadedShape = function( points ) {\n                var base = points[ 0 ].y;\n                var height = base;// + this.lod.position.y;\n                var offset = fp.getOffset( this.levels, points.length );\n                var shape = this.shadedShapeGeometry( points );\n                var extrudeSettings = { amount: fp.appConfig.buildingOptions.levelHeight * 1.0, bevelEnabled: false };\n                var shapeGeometry = new THREE.ExtrudeGeometry( shape, extrudeSettings );\n                shapeGeometry.computeBoundingBox();\n\n                if ( shapeGeometry.boundingBox ) {\n                    // if ( this.highResMeshContainer.children.length === 0 ) {\n                    // if ( this.levels < 1000 ) {\n                    if ( this.levels === 0 ) {\n                        var fc, lc, wc;\n                        if ( fp.appConfig.displayOptions.dayShow ) {\n                            fc = fp.buildColorVector( fp.appConfig.colorOptions.colorDayBuildingFill );\n                            lc = fp.buildColorVector( fp.appConfig.colorOptions.colorDayBuildingLine );\n                            wc = fp.buildColorVector( fp.appConfig.colorOptions.colorDayBuildingWindow );\n                        }\n                        else {\n                            fc = fp.buildColorVector( fp.appConfig.colorOptions.colorNightBuildingFill );\n                            lc = fp.buildColorVector( fp.appConfig.colorOptions.colorNightBuildingLine );\n                            wc = fp.buildColorVector( fp.appConfig.colorOptions.colorNightBuildingWindow );\n                        }\n                        // Gets around a problem with rendering a single building with lines or windows\n                        var showLines = ( fp.buildingNetwork.buildings.length > 1 && fp.appConfig.buildingOptions.showLines );\n                        var showWindows = fp.appConfig.buildingOptions.showWindows;\n                        this.uniforms = {\n\n                            // Lambert settings\n                            emissive: { type: \"c\", value: new THREE.Color( 0.0, 0.0, 0.0 ) },\n                            diffuse: { type: \"c\", value: new THREE.Color( 1.0, 1.0, 1.0 ) },\n                            opacity: { type: \"f\", value: fp.appConfig.colorOptions.colorTerrainOpacity },\n                            // Phong settings\n                            specular: { type: \"c\", value: new THREE.Color( 0xbaba3a ) },\n                            shininess: { type: \"f\", value: 50 },\n\n                            time: { type: \"f\", value: 1.0 },\n                            location: { type: \"v2\", value: new THREE.Vector2( this.lod.position.x, this.lod.position.z ) },\n                            resolution: { type: \"v2\", value: new THREE.Vector2() },\n                            dimensions: { type: \"v3\", value: new THREE.Vector3( shapeGeometry.boundingBox.max.x - shapeGeometry.boundingBox.min.x, fp.appConfig.buildingOptions.levelHeight, shapeGeometry.boundingBox.max.y - shapeGeometry.boundingBox.min.y ) },\n                            bottomWindow: { type: \"f\", value: this.bottomWindow },\n                            topWindow: { type: \"f\", value: this.topWindow },\n                            windowWidth: { type: \"f\", value: this.windowWidth },\n                            windowPercent: { type: \"f\", value: this.windowPercent },\n                            floorLevel: { type: \"f\", value: this.levels },\n                            lineColor: { type: \"v3\", value: lc },\n                            lineWidth: { type: \"f\", value: fp.appConfig.buildingOptions.linewidth },\n                            fillColor: { type: \"v3\", value: fc },\n                            windowColor: { type: \"v3\", value: wc },\n                            showLines: { type: \"i\", value: showLines ? 1 : 0 },\n                            showFill: { type: \"i\", value: fp.appConfig.buildingOptions.showFill ? 1 : 0 },\n                            showWindows: { type: \"i\", value: showWindows ? 1 : 0 },\n                            fillRooves: { type: \"i\", value: fp.appConfig.buildingOptions.fillRooves ? 1 : 0 }\n\n                        };\n\n                        var attributes = { mixin: { type: \"f\", value: [ ] } };\n                        for ( var i = 0; i < shapeGeometry.vertices.length; i++ ) {\n                            attributes.mixin.value[ i ] = Math.random() * 10;\n                        }\n\n                        var shaderMaterial = new THREE.ShaderMaterial( {\n                            uniforms: fp.ShaderUtils.lambertUniforms( this.uniforms ),\n                            attributes: attributes,\n                            vertexShader: fp.ShaderUtils.lambertShaderVertex(\n                                fp.ShaderUtils.buildingVertexShaderParams(),\n                                fp.ShaderUtils.buildingVertexShaderMain()\n                            ),\n                            fragmentShader: fp.ShaderUtils.lambertShaderFragment(\n                                fp.ShaderUtils.buildingFragmentShaderParams(),\n                                fp.ShaderUtils.buildingFragmentShaderMain()\n                            ),\n                            lights: true,\n                            fog: true,\n                            // transparent: true,\n                            alphaTest: 0.5\n                        } );\n\n                        shaderMaterial.side = THREE.DoubleSide;\n                        shaderMaterial.wireframe = fp.appConfig.displayOptions.wireframeShow;\n\n                        // this.mesh = new THREE.Mesh( shapeGeometry, dumbMaterial );\n                        // shapeGeometry.computeVertexNormals();\n                        this.mesh = new THREE.Mesh( shapeGeometry, shaderMaterial );\n                        this.mesh.castShadow = true;\n                        this.mesh.receiveShadow = true;\n                        this.mesh.children.forEach( function( b ) {\n                            b.castShadow = true;\n                            b.receiveShadow = true;\n                        } );\n                        this.mesh.rotation.set( -Math.PI / 2, 0, 0 );\n                        height = fp.getHeight( this.highResMeshContainer.position.x, this.highResMeshContainer.position.z );\n                        this.mesh.position.set( this.highResMeshContainer.position.x, height, this.highResMeshContainer.position.z );\n                        this.mesh.updateMatrix();\n                        // fp.buildingNetwork.networkMesh.add( this.highResMeshContainer );\n                        fp.buildingNetwork.networkMesh.add( this.mesh );\n                        // this.highResMeshContainer.add( this.mesh.clone() );\n                        /*\n                        if ( fp.buildingNetwork.networkMesh.children.length === 0 ) {\n                            this.mesh.rotation.set( -Math.PI / 2, 0, 0 );\n                            this.mesh.position.set( this.highResMeshContainer.position.x, height, this.highResMeshContainer.position.z );\n                            this.mesh.updateMatrix();\n                            fp.buildingNetwork.networkMesh.add( this.mesh );\n                        }\n                        else {\n                            // this.mesh.rotation.set( -Math.PI / 2, 0, 0 );\n                            this.mesh.position.set( this.highResMeshContainer.position.x, this.highResMeshContainer.position.z, height );\n                            this.mesh.updateMatrix();\n                            fp.buildingNetwork.networkMesh.children[ 0 ].geometry.mergeMesh( this.mesh );\n                            fp.buildingNetwork.networkMesh.children[ len ].geometry.verticesNeedUpdate = true;\n                        }\n                        */\n                    }\n                    else {\n                        var dumbMaterial = new THREE.MeshBasicMaterial( { color: \"#ff0000\" } );\n                        var floorMesh = new THREE.Mesh( shapeGeometry, dumbMaterial );\n                        floorMesh.position.set( 0, 0, height );\n                        floorMesh.updateMatrix();\n                        var newGeom = this.mesh.geometry.clone();\n                        newGeom.mergeMesh( floorMesh );\n                        newGeom.verticesNeedUpdate = true;\n                        var newMesh = new THREE.Mesh( newGeom, this.mesh.material );\n                        newMesh.castShadow = true;\n                        newMesh.receiveShadow = true;\n                        newMesh.children.forEach( function( b ) {\n                            b.castShadow = true;\n                            b.receiveShadow = true;\n                        } );\n                        newMesh.rotation.set( -Math.PI / 2, 0, 0 );\n                        var newHeight = fp.getHeight( this.highResMeshContainer.position.x, this.highResMeshContainer.position.z );\n                        newMesh.position.set( this.highResMeshContainer.position.x, newHeight, this.highResMeshContainer.position.z );\n                        newMesh.updateMatrix();\n                        newMesh.geometry.verticesNeedUpdate = true;\n                        fp.buildingNetwork.networkMesh.remove( this.mesh );\n                        this.mesh = newMesh;\n                        fp.buildingNetwork.networkMesh.add( this.mesh );\n                    }\n                }\n            };\n\n\n            this.canAddFloor = function() {\n                return ( !this.destroying && this.levels < this.localMaxLevels && this.localWidth > 0 && this.localLength > 0 );\n            };\n\n            /**\n             * Updates the building's state.\n             */\n            this.updateBuilding = function() {\n                if ( this.canAddFloor() ) {\n                    this.counter++;\n                    if ( this.counter % fp.appConfig.buildingOptions.riseRate === 0 || this.levels === 0 ) {\n                        this.addFloor();\n                    }\n\n                    if ( fp.appConfig.buildingOptions.falling ) {\n                        var y = - ( this.levelHeight /  ( 2 * fp.appConfig.buildingOptions.riseRate ));\n                        this.yOffset += y;\n                        this.highResMeshContainer.translateY( y );\n                        this.lowResMeshContainer.translateY( y );\n                    }\n                }\n                // NOT WORKING YET\n                else if ( !this.destroying && fp.appConfig.buildingOptions.destroyOnComplete ) {\n                    this.destroying = true;\n                }\n                else if ( this.destroying && this.levels > 0 ) {\n                    this.counter++;\n                    if ( this.counter % fp.appConfig.buildingOptions.riseRate === 0 ) {\n                        this.removeFloor();\n                    }\n                }\n                else if ( this.destroying && this.levels === 0 && fp.appConfig.buildingOptions.loopCreateDestroy ) {\n                    this.destroying = false;\n                }\n\n                if ( fp.appConfig.buildingOptions.turning ) {\n                    this.highResMeshContainer.rotation.x += 0.001;\n                    this.highResMeshContainer.rotation.y += 0.01;\n                    this.lowResMeshContainer.rotation.x += 0.001;\n                    this.lowResMeshContainer.rotation.y += 0.01;\n                    this.lowResMesh.rotation.x += 0.001;\n                    this.lowResMesh.rotation.y += 0.01;\n                }\n                this.updateBuildingShader();\n            };\n\n            /**\n             * Updates the building's shader.\n             */\n            this.updateBuildingShader = function() {\n                if ( _.isUndefined( this.mesh ) || _.isNull( this.mesh ) )\n                    return;\n                var verticesPerLevel = this.mesh.geometry.vertices.length / this.levels;\n                var shaderMaterial = this.mesh.material;\n                for ( var i = 0; i < this.levels; i++ ) {\n                    var r = Math.random() * 10;\n                    var chance = fp.appConfig.buildingOptions.windowsFlickerRate;\n                    if ( Math.random() < chance ) {\n                        var v = i * verticesPerLevel;\n                        for ( var j = v; j < v + verticesPerLevel; j++ ) {\n                            shaderMaterial.attributes.mixin.value[ j ] = r;\n                        }\n                    }\n                }\n                shaderMaterial.attributes.mixin.needsUpdate = true; // important!\n            };\n\n            this.updateSimpleBuilding = function () {\n                if ( this.levels > 1 ) {\n                    if ( !this.destroying )\n                        this.lowResMesh.scale.set( 1, this.lowResMesh.scale.y * this.levels / ( this.levels - 1 ), 1 );\n                    else\n                        this.lowResMesh.scale.set( 1, this.lowResMesh.scale.y * ( this.levels - 1 ) / ( this.levels ), 1 );\n                }\n                else if ( this.destroying )\n                    this.lowResMesh.scale.set( 1, 1, 1 );\n            };\n\n            this.translatePosition = function( x, y, z ) {\n                this.lod.position.set( x, y, z );\n                this.highResMeshContainer.position.set( x, y, z );\n                this.lowResMeshContainer.position.set( x, y, z );\n            };\n\n            this.windowsOutline = function( value ) {\n                if ( value )\n                    this.highResMeshContainer.add( this.windowsOutlineContainer );\n                else\n                    this.highResMeshContainer.remove( this.windowsOutlineContainer );\n            };\n\n            this.windowsFill = function( value ) {\n                if ( value )\n                    this.highResMeshContainer.add( this.windowsFillContainer );\n                else\n                    this.highResMeshContainer.remove( this.windowsFillContainer );\n            };\n\n            /**\n             * Initialises the building.\n             */\n            this.init = function( form, dimensions, position, rotation ) {\n                this.originPosition = position;\n                // Use Poisson distribution with lambda of 1 to contour building heights instead\n                var w = 1 - jStat.exponential.cdf( Math.random() * 9, 1 );\n                var d = 1 - jStat.exponential.cdf( Math.random() * 9, 1 );\n                // var h =  Math.floor( jStat.exponential.pdf( Math.random(), 50 ))\n                var h = Math.floor( jStat.exponential.sample( fp.appConfig.buildingOptions.heightA ) * fp.appConfig.buildingOptions.heightB );\n                this.maxWidth = Math.floor( w * 9 ) + fp.appConfig.buildingOptions.heightB;\n                this.maxDepth = Math.floor( d * 9 ) + 1;\n                this.maxHeight = h + 1;\n\n                this.bottomWindow = 1.0 - ( fp.appConfig.buildingOptions.windowsEndY / 100.0 );\n                this.topWindow = 1.0 - ( fp.appConfig.buildingOptions.windowsStartY/ 100.0 );\n                this.windowWidth = fp.appConfig.buildingOptions.windowWidth;\n                this.windowPercent = fp.appConfig.buildingOptions.windowPercent / 100.0;\n                if ( fp.appConfig.buildingOptions.windowsRandomise ) {\n                    // Randomise based on a normal distribution\n                    var bottomWindowTmp = jStat.normal.inv( Math.random(), this.bottomWindow, 0.1 );\n                    var topWindowTmp = jStat.normal.inv( Math.random(), this.topWindow, 0.1 );\n                    var windowWidthTmp = jStat.normal.inv( Math.random(), this.windowWidth, 0.1 );\n                    var windowPercentTmp = jStat.normal.inv( Math.random(), this.windowPercent, 0.1 );\n                    // Coerce value between a min and max\n                    var coerceValue = function( num, min, max ) {\n                        if ( num < min )\n                            return min;\n                        if ( num > max )\n                            return max;\n                        return num;\n                    };\n                    this.bottomWindow = coerceValue( bottomWindowTmp, 0, 100 );\n                    this.topWindow = coerceValue( topWindowTmp, 0, 100 );\n                    this.windowWidth = coerceValue( windowWidthTmp, 0, 100 );\n                    this.windowPercent = coerceValue( windowPercentTmp, 0, 100 );\n                }\n\n                if ( !_.isUndefined( form ) )\n                    this.buildingForm = form;\n                if ( !_.isUndefined( dimensions ) )\n                    this.initDimensions( dimensions );\n                if ( !_.isUndefined( position ) ) {\n                    var posY = fp.getHeight( position.x, position.z ) + fp.appConfig.buildingOptions.levelHeight;\n                    this.originPosition = new THREE.Vector3( position.x, posY, position.z );\n                    this.lod.position.set( position.x, posY, position.z );\n                    this.highResMeshContainer.position.set( position.x, posY, position.z );\n                    this.lowResMeshContainer.position.set( position.x, posY, position.z );\n                }\n                if ( !_.isUndefined( rotation ) ) {\n                    this.mesh.rotation.set( rotation.x, rotation.y, rotation.z );\n                    this.lod.rotation.set( rotation.x, rotation.y, rotation.z );\n                    this.highResMeshContainer.rotation.set( rotation.x, rotation.y, rotation.z );\n                    this.lowResMeshContainer.rotation.set( rotation.x, rotation.y, rotation.z );\n                }\n                // Add an initial floor so the building is visible.\n                this.mockMesh = this.shadedShapeMock();\n                // this.addFloor();\n            };\n\n            this.mockMesh = null;\n            this.mesh = null;\n            this.lineMaterial = null;\n            this.buildingMaterial = null;\n            this.windowMaterial = null;\n            this.lod = null;\n            this.mesh = null;\n            this.geometry = null;\n            this.windowGeometry = null;\n            this.windowMesh = null;\n            this.windowsFillContainer = null;\n            this.windowsOutlineContainer = null;\n            this.lowResGeomtery = null;\n            this.lowResMesh = null;\n            this.highResMeshContainer = null;\n            this.lowResMeshContainer = null;\n            this.levels = 0;\n            this.counter = 0;\n            this.localMaxLevels = null;\n            this.localWidth = null;\n            this.localLength = null;\n            this.yOffset = 0;\n            this.uniforms = null;\n            this.buildingForm = null;\n            this.destroying = false;\n            this.originPosition = null;\n\n            this.init( form, dimensions, position, rotation );\n        };\n\n        /**\n         * Represents a road or path between two points.\n         * @constructor\n         * @memberof fp\n         * @inner\n         */\n        this.Road = function() {\n            this.mesh = null;\n            this.position = null;\n            this.setupRoad = function( _x, _y, _z ) {\n                this.x = _x || 0;\n                this.y = _y || 0;\n                this.z = _z || 0;\n            };\n            this.shadedShape = function ( points ) {};\n            this.update = function() { };\n        };\n\n        /**\n         * Represents relevant state about the application.\n         * @constructor\n         * @memberof fp\n         * @inner\n         */\n        this.AppState = {\n            runSimulation: false,\n            stepSimulation: false\n        };\n\n        /**\n         * Represents configuration data about the application.\n         * @constructor\n         * @namespace AppConfig\n         * @memberof fp\n         * @inner\n         */\n        this.AppConfig = function() {\n            /**\n             * World options.\n             * @namespace fp~AppConfig~worldOptions\n             */\n            this.worldOptions = {\n                /**\n                 * Maximum depth to search for land.\n                 * @memberOf fp~AppConfig~worldOptions\n                 * @inner\n                 */\n                maxLandSearchDepth: 2,\n\n                /**\n                 * Number of index points to use in search ( depends on building size )\n                 * @memberOf fp~AppConfig~worldOptions\n                 * @inner\n                 */\n                searchIncrement: 2\n            };\n            /**\n             * Agent options.\n             * @namespace fp~AppConfig~agentOptions\n             */\n            this.agentOptions = {\n                /**\n                 * Initial population of agents.\n                 * @type {Number}\n                 * @memberOf fp~AppConfig~agentOptions\n                 * @inner\n                 */\n                initialPopulation: 100,\n                /**\n                 * The <em>initial</em> extent, or diameter, around the point of origin, where agents can be\n                spawned, expressed as a percentage ( 0-100 ).\n                 * @type {Number}\n                 * @memberOf fp~AppConfig~agentOptions\n                 * @inner\n                 */\n                initialExtent: 10,\n                /**\n                 * The <em>maximum</em> extent, or diameter, around the point of origin, where agents can be\n                spawed, expressed as a percentage ( 0-100 ).\n                 * @type {Number}\n                 * @memberOf fp~AppConfig~agentOptions\n                 * @inner\n                 */\n                maxExtent: 100,\n                // initialX: -500, initialY: -1500, // Melbourne\n                /**\n                 * The <em>x</em> co-ordinate of the point of origin, expressed as a percentage ( 0-100 ) of distance from the actual grid center.\n                 * @type {Number}\n                 * @memberOf fp~AppConfig~agentOptions\n                 * @inner\n                 */\n                initialX: 50,\n                /**\n                 * The <em>y</em> co-ordinate of the point of origin, expressed as a percentage ( 0-100 ) of distance from the actual grid center.\n                 * @type {Number}\n                 * @memberOf fp~AppConfig~agentOptions\n                 * @inner\n                 */\n                initialY: 50,\n                randomAge: true,\n                chanceToJoinNetwork: 0.05,\n                chanceToJoinNetworkWithHome: 0.05,\n                chanceToJoinNetworkWithBothHomes: 0.05,\n                chanceToFindPathToHome: 0.00,\n                chanceToFindPathToOtherAgentHome: 0.00,\n                initialCircle: true,\n                noWater: true,\n                noUphill: false, // Eventually remove for more fine-grained weight control\n                useStickman: true,\n                visitHomeBuilding: 0.02,\n                visitOtherBuilding: 0.002,\n                establishLinks: false,\n                size: 40,\n                terrainOffset: 20,\n                shuffle: false,\n                initialSpeed: 2,\n                initialPerturbBy: 0.05,\n                movementRelativeToPatch: false,\n                movementInPatch: 1,\n                movementStrictlyIntercardinal: false\n            };\n            this.buildingOptions = {\n                create: true,\n\n                maxNumber: 250, // Maximum number of buildings - for performance reasons\n\n                // Carry over from generation\n                heightA: 2,\n                heightB: 10,\n\n                // Influences\n                roads: 0.0,\n                water: 0.4,\n                otherBuildings: 0.9,\n                distanceFromOtherBuildingsMin: 800,\n                distanceFromOtherBuildingsMax: 1000,\n                buildingHeight: 0.1,\n\n                // Building form\n                buildingForm: \"rectangle\",\n                spread: 10,\n                randomForm: false,\n                rotateRandomly: false,\n                rotateSetAngle: 0,\n\n                destroyOnComplete: false,\n                loopCreateDestroy: false,\n\n                // Visualisation\n                turning: false,\n                falling: false,\n                riseRate: 10,\n\n                // Dimensions\n                minHeight: 10,\n                maxHeight: 70,\n                minWidth: 40,\n                maxWidth: 200,\n                minLength: 40,\n                maxLength: 200,\n                maxLevels: 0,\n                width: 0,\n                length: 0,\n                levelHeight: 40,\n\n                // View parameters\n                useShader: true,\n                useLevelOfDetail: true,\n                highResDistance: 1000,\n                lowResDistance: 7500,\n                opacity: 1.0,\n\n                // Fill parameters\n                showFill: true,\n                fillRooves: false,\n\n                // Stroke parameters\n                showLines: true,\n                linewidth: 1.0,\n\n                // Window parameters\n                showWindows: true,\n                windowsRandomise: false,\n                windowsFlickerRate: 0.05,\n                windowWidth: 15,\n                windowPercent: 60,\n                windowsStartY: 40,\n                windowsEndY: 80,\n                windowsLine: true,\n                windowsFill: false,\n\n                // Stagger\n                stagger: true,\n                staggerAmount: 40,\n\n                // Taper\n                taper: true,\n                taperExponent: 2,\n                taperDistribution: 1,\n\n                // Collision detection\n                detectBuildingCollisions: true,\n                detectRoadCollisions: true\n            };\n            this.roadOptions = {\n                create: true,\n                maxNumber: 200,  // Maximum number of roads - for performance reasons\n                roadWidth: 20,\n                roadDeviation: 20,\n                roadRadiusSegments: 10,\n                roadSegments: 10,\n                initialRadius: 100,\n                probability: 1,\n                lenMinimum: 100,\n                lenMaximum: 2000,\n                lenDistributionFactor: 3,\n                overlapThreshold: 3,\n                flattenAdjustment: 0.025,\n                flattenLift: 20\n            };\n            this.displayOptions = {\n                agentsShow: true,\n                buildingsShow: true,\n                roadsShow: true,\n                waterShow: true,\n                networkShow: false,\n                networkCurve: true,\n                networkCurvePoints: 20,\n                patchesShow: false,\n                patchesUpdate: true,\n                trailsShow: false,\n                trailsShowAsLines: false,\n                trailsUpdate: false,\n                trailLength: 10000,\n                cursorShow: false,\n                cursorShowCell: true,\n                statsShow: true,\n                hudShow: true,\n                wireframeShow: false,\n                dayShow: false,\n                skyboxShow: true,\n                chartShow: true,\n                guiShow: true,\n                guiShowControls: true,\n                guiShowAgentFolder: true,\n                guiShowBuildingsFolder: true,\n                guiShowRoadsFolder: true,\n                guiShowTerrainFolder: true,\n                guiShowDisplayFolder: true,\n                guiShowColorFolder: true,\n                pathsShow: true,\n                terrainShow: true,\n                lightHemisphereShow: false,\n                lightDirectionalShow: true,\n                coloriseAgentsByHealth: false,\n                firstPersonView: false,\n                cameraOverride: false,\n                cameraX: 0,\n                cameraY: 200,\n                cameraZ: 800,\n                maximiseView: true,\n            };\n            this.terrainOptions = {\n                renderAsSphere: true,\n                loadHeights: true,\n                gridExtent: 8000,\n                gridPoints: 400,\n                maxTerrainHeight: 400,\n                shaderUse: true,\n                shaderShadowMix: 0.5,\n                multiplier: 1,\n                mapIndex: 0,\n                mapFile: \"\",\n                patchSize: 4,\n                defaultHeight: 10\n            };\n            this.colorOptions = {\n                colorDayBackground: 0x000000,\n                colorDayRoad: 0x474747,\n                colorDayAgent: 0x4747b3,\n                colorDayNetwork: 0x474747,\n                colorDayTrail: 0x474747,\n                colorDayPath: 0x474747,\n                colorDayBuildingFill: 0xb1abab,\n                colorDayBuildingLine: 0x222222,\n                colorDayBuildingWindow: 0x222222,\n\n                colorNightBackground: 0x636363,\n                colorNightRoad: 0x474747,\n                colorNightAgent: 0x47b347,\n                colorNightNetwork: 0x47b347,\n                colorNightTrail: 0x47b347,\n                colorNightNetworPath: 0x47b347,\n                colorNightPath: 0x47b347,\n                colorNightBuildingFill: 0x838383,\n                colorNightBuildingLine: 0x838383,\n                colorNightBuildingWindow: 0xffff8f,\n\n                colorGraphPopulation: 0x4747b3,\n                colorGraphHealth: 0xb34747,\n                colorGraphPatchValues: 0x47b347,\n\n                colorLightHemisphereSky: 0xbfbfbf,\n                colorLightHemisphereGround: 0xbfbfbf,\n                colorLightHemisphereIntensity: 1.0,\n                colorLightDirectional: 0xffffff,\n                colorLightDirectionalIntensity: 0.5,\n\n                colorDayTerrainGroundLevel: 0x969696,\n                colorDayTerrainLowland1: 0x2d5828,\n                colorDayTerrainLowland2: 0x6d915b,\n                colorDayTerrainMidland1: 0x89450e,\n                colorDayTerrainMidland2: 0x89450e,\n                colorDayTerrainHighland: 0x8c8c8c,\n                // colorDayTerrainLowland1: 0x4d7848,\n                // colorDayTerrainLowland2: 0x8db17b,\n                // colorDayTerrainMidland1: 0xa9752e,\n                // colorDayTerrainHighland: 0xacacac,\n                colorNightTerrainGroundLevel: 0x000000,\n                colorNightTerrainLowland1: 0x000000,\n                colorNightTerrainLowland2: 0x181818,\n                colorNightTerrainMidland1: 0x282828,\n                colorNightTerrainMidland2: 0x3a3a3a,\n                colorNightTerrainHighland: 0x4c4c4c,\n\n                colorTerrainStop1: 0.2,\n                colorTerrainStop2: 0.4,\n                colorTerrainStop3: 0.6,\n                colorTerrainStop4: 0.8,\n                colorTerrainStop5: 1.0,\n\n                colorTerrainOpacity: 1.0,\n            };\n            this.buildingOptions.maxHeight = ( this.buildingOptions.minHeight > this.buildingOptions.maxHeight ) ? this.buildingOptions.minHeight : this.buildingOptions.maxHeight;\n            this.buildingOptions.maxWidth = ( this.buildingOptions.minWidth > this.buildingOptions.maxWidth ) ? this.buildingOptions.minWidth : this.buildingOptions.maxWidth;\n            this.buildingOptions.maxLength = ( this.buildingOptions.minLength > this.buildingOptions.maxLength ) ? this.buildingOptions.minLength : this.buildingOptions.maxLength;\n            this.buildingOptions.maxLevels = this.buildingOptions.minHeight + Math.floor( Math.random() * this.buildingOptions.maxHeight - this.buildingOptions.minHeight );\n            this.buildingOptions.width = this.buildingOptions.minWidth + Math.floor( Math.random() * this.buildingOptions.maxWidth - this.buildingOptions.minWidth );\n            this.buildingOptions.length = this.buildingOptions.minLength + Math.floor( Math.random() * this.buildingOptions.maxLength - this.buildingOptions.minLength );\n            this.sunOptions  = {\n                turbidity: 10,\n                reileigh: 2,\n                mieCoefficient: 0.005,\n                mieDirectionalG: 0.8,\n                luminance: 1,\n                inclination: 0.49, // elevation / inclination\n                azimuth: 0.25, // Facing front,\n                sun: !true\n            };\n\n            /**\n             * Resets the state of the fp object.\n             */\n            this.Reset = function() {\n                // First coerce grid points to some multiple of patchSize, + 1\n                fp.scene.remove(  fp.agentNetwork.particles  );\n                fp.agentNetwork.agents = [ ];\n                fp.agentNetwork.agentParticleSystemAttributes = null;\n                fp.buildingNetwork.networkJstsCache = [ ];\n                fp.buildingNetwork.buildings = [ ];\n                fp.buildingNetwork.buildingHash = {};\n                fp.roadNetwork.indexValues = [ ];\n                fp.roadNetwork.roads = {};\n\n                fp.timescale.currentYear = fp.timescale.initialYear;\n                fp.updateYear();\n                fp.timescale.frameCounter = 0;\n                if ( fp.trailNetwork.trailMeshes )\n                    fp.trailNetwork.trailMeshes.forEach( function( trail ) { scene.remove( trail ); } );\n\n                var len = fp.terrain.plane.geometry.attributes.position.array.length / 3,\n                    trailPoints = new Float32Array( len ),\n                    patchPoints = new Float32Array( len );\n                for ( var i = 0; i < len; i++ ) {\n                    trailPoints[ i ] = 0;\n                    patchPoints[ i ] = 0;\n                }\n                fp.terrain.plane.geometry.addAttribute( \"trail\", new THREE.BufferAttribute( trailPoints, 1 ) );\n                fp.terrain.plane.geometry.addAttribute( \"patch\", new THREE.BufferAttribute( patchPoints, 1 ) );\n                fp.terrain.plane.geometry.attributes.trail.needsUpdate = true;\n                fp.terrain.plane.geometry.attributes.patch.needsUpdate = true;\n\n                fp.trailNetwork.trails = {};\n                fp.agentNetwork.networks.forEach( function( network ) {\n                    network.links = [ ];\n                    fp.scene.remove( network.networkMesh );\n                } );\n                fp.scene.remove( fp.buildingNetwork.networkMesh );\n                fp.scene.remove( fp.roadNetwork.networkMesh );\n                fp.scene.remove( fp.pathNetwork.networkMesh );\n                fp.scene.remove( fp.trailNetwork.globalTrailLine );\n                fp.patchNetwork.initialisePatches();\n            };\n\n            /**\n             * Sets up the simulation.\n             */\n            this.Setup = function() {\n                fp.appConfig.Reset();\n                fp.agentNetwork.createInitialAgentPopulation();\n                if ( fp.appConfig.displayOptions.agentsShow )\n                    fp.scene.add( fp.agentNetwork.particles );\n\n                fp.buildingNetwork.networkMesh = new THREE.Object3D();\n                fp.buildingNetwork.networkMesh.castShadow = true;\n                fp.buildingNetwork.networkMesh.receiveShadow = true;\n\n                if ( fp.appConfig.displayOptions.buildingsShow )\n                    fp.scene.add( fp.buildingNetwork.networkMesh );\n\n                fp.roadNetwork.networkMesh = new THREE.Object3D();\n                fp.roadNetwork.planeVertices = [ ];\n                if ( fp.appConfig.displayOptions.roadsShow )\n                    fp.scene.add( fp.roadNetwork.networkMesh );\n\n                fp.pathNetwork.networkMesh = new THREE.Object3D();\n                if ( fp.appConfig.displayOptions.pathsShow )\n                    fp.scene.add( fp.pathNetwork.networkMesh );\n\n                fp.trailNetwork.buildTrailNetwork( false );\n                /*\n                fp.trailNetwork.globalTrailGeometry = new THREE.Geometry();\n                for ( var i = 0; i < fp.appConfig.agentOptions.initialPopulation; i++ ) {\n                    var vertices = new Array( fp.appConfig.displayOptions.trailLength );\n                    for ( var j = 0; j < fp.appConfig.displayOptions.trailLength ; j++ ) {\n                        fp.trailNetwork.globalTrailGeometry.vertices.push( fp.agentNetwork.agents[ i ].lastPosition );\n                    }\n                    var ai = fp.getIndex( fp.agentNetwork.agents[ i ].lastPosition.x / fp.appConfig.terrainOptions.multiplier, fp.agentNetwork.agents[ i ].lastPosition.z / fp.appConfig.terrainOptions.multiplier );\n                    if ( ai > -1 )\n                        fp.trailNetwork.trails[ ai ] = 1;\n                }\n                var trailMaterial = new THREE.LineBasicMaterial( {\n                    color: fp.appConfig.colorOptions.colorNightTrail,\n                var trailMaterial = new THREE.LineBasicMPath( {\n                    color: fp.appConfig.colorOptions.colorNightTrail,\n                    linewidth: 0.1,\n                    opacity: 0.1,\n                    blending: THREE.NormalBlending,\n                    transparent: true\n                } );\n                fp.trailNetwork.globalTrailLine = new THREE.Line( fp.trailNetwork.globalTrailGeometry, trailMaterial, THREE.LineSegments );\n                if ( fp.appConfig.displayOptions.trailsShowAsLines ) {\n                    fp.scene.add( fp.trailNetwork.globalTrailLine );\n                }\n                */\n\n                fp.sim.setup.call( fp.sim ); // Get around binding problem - see: http://alistapart.com/article/getoutbindingsituations\n            };\n\n            this.Run = function() {\n                fp.AppState.runSimulation = !fp.AppState.runSimulation;\n                fp.AppState.stepSimulation = false;\n                if ( !_.isUndefined( fp.chart ) ) {\n                    if ( fp.AppState.runSimulation )\n                        fp.chart.start();\n                    else\n                        fp.chart.stop();\n                }\n            };\n\n            this.Step = function() {\n                fp.AppState.runSimulation = fp.AppState.stepSimulation = true;\n            };\n\n            /**\n             * Increase the frame rate relative to the timescale interval.\n             */\n            this.SpeedUp = function() {\n                if ( fp.timescale.framesToYear > fp.timescale.MIN_FRAMES_TO_YEAR )\n                    fp.timescale.framesToYear = Math.ceil( fp.timescale.framesToYear / 2 );\n                console.log( \"Speed: \" + fp.timescale.framesToYear );\n            };\n\n            /**\n             * Decrease the frame rate relative to the timescale interval.\n             */\n            this.SlowDown = function() {\n                if ( fp.timescale.framesToYear < fp.timescale.MAX_FRAMES_TO_YEAR )\n                    fp.timescale.framesToYear *= 2;\n                console.log( \"Speed: \" + fp.timescale.framesToYear );\n            };\n\n            this.Snapshot = function() {\n                var mimetype = mimetype  || \"image/png\";\n                var url = fp.renderer.domElement.toDataURL( mimetype );\n                window.open( url, \"name-\" + Math.random() );\n            };\n            this.FullScreen = function() {\n                if ( document.documentElement.requestFullscreen ) {\n                    document.documentElement.requestFullscreen();\n                } else if ( document.documentElement.mozRequestFullScreen ) {\n                    document.documentElement.mozRequestFullScreen();\n                } else if ( document.documentElement.webkitRequestFullscreen ) {\n                    document.documentElement.webkitRequestFullscreen();\n                } else if ( document.documentElement.msRequestFullscreen ) {\n                    document.documentElement.msRequestFullscreen();\n                }\n            };\n            this.SwitchTerrain = function() {\n                fp.appConfig.Reset();\n                fp.terrain.terrainMapIndex =\n                    ( fp.terrain.terrainMapIndex == fp.TERRAIN_MAPS.length - 1 ) ?\n                      0 :\n                      fp.terrain.terrainMapIndex + 1;\n                fp.loadTerrain();\n            };\n            this.WrapTerrain = function() {\n                fp.appConfig.waterShow = false;\n                fp.terrain.wrappingState = 1;\n            };\n            this.UnwrapTerrain = function() {\n                fp.terrain.wrappingState = -1;\n            };\n        };\n\n        /**\n         * Singleton Chart object.\n         * @type {Object}\n         */\n        this.Chart = {\n            setupChart: function () {\n                var agentDiv = fp.appConfig.agentOptions.initialPopulation * 2;\n                fp.chart = new SmoothieChart( { maxValue: agentDiv, minValue: 0.0  } );\n                var agentPopulationSeries = new TimeSeries();\n                var agentHealthSeries = new TimeSeries();\n                var patchValuesSeries = new TimeSeries();\n                setInterval( function() {\n                    if ( fp.AppState.runSimulation ) {\n                        agentPopulationSeries.append( new Date().getTime(), fp.agentNetwork.agents.length );\n                        agentHealthSeries.append( new Date().getTime(), agentDiv * jStat( _.map( fp.agentNetwork.agents, function( agent ) { return agent.health; } ) ).mean() / 100 );\n                        patchValuesSeries.append( new Date().getTime(), agentDiv * fp.patchNetwork.patchMeanValue );\n                    }\n                }, 500 );\n                var chartCanvas = document.createElement( \"canvas\" );\n                chartCanvas.setAttribute( \"id\", \"chartCanvas-\" + fp.container.id );\n                chartCanvas.setAttribute( \"width\", \"400\" );\n                chartCanvas.setAttribute( \"height\", \"100\" );\n                chartCanvas.setAttribute( \"style\", \"z-index: 1; position: absolute; left: 0px; bottom: 0px  \" );\n                fp.container.insertBefore( chartCanvas, fp.container.firstChild );\n                fp.chart.addTimeSeries( agentPopulationSeries, { fillStyle: \"rgba( 0, 0, 255, 0.2 )\", lineWidth: 4 } );\n                fp.chart.addTimeSeries( agentHealthSeries, { fillStyle: \"rgba( 255, 0, 0, 0.2 )\", lineWidth: 4 } );\n                fp.chart.addTimeSeries( patchValuesSeries, { fillStyle: \"rgba( 0, 255, 0, 0.2 )\", lineWidth: 4 } );\n                // fp.updateChartColors();\n                fp.chart.streamTo( chartCanvas, 500 );\n                this.updateGraph();\n            },\n\n            updateGraph: function() {\n                $( \"#chartCanvas-\" + fp.container.id ).toggle( fp.appConfig.displayOptions.chartShow );\n            }\n        };\n\n        /**\n         * Creates a dat.GUI interface for controlling and configuring the simulation.\n         * @param  {Object} config  An object representation of properties to override defaults for the fp.AppConfig object.\n         */\n        this.doGUI = function( config ) {\n            fp.appConfig = new fp.AppConfig();\n\n            fp.gui = new dat.GUI( { load: config } );\n\n            fp.gui.remember( fp.appConfig );\n            fp.gui.remember( fp.appConfig.agentOptions );\n            fp.gui.remember( fp.appConfig.buildingOptions );\n            fp.gui.remember( fp.appConfig.roadOptions );\n            fp.gui.remember( fp.appConfig.displayOptions );\n            fp.gui.remember( fp.appConfig.colorOptions );\n            fp.gui.remember( fp.appConfig.terrainOptions );\n\n            fp.gui.add( fp.appConfig, \"Setup\" );\n            fp.gui.add( fp.appConfig, \"Run\" );\n            fp.gui.add( fp.appConfig, \"Step\" );\n\n            if ( fp.appConfig.displayOptions.guiShowControls ) {\n                var controlPanel = fp.gui.addFolder( \"More controls\" );\n                controlPanel.add( fp.appConfig, \"SpeedUp\" );\n                controlPanel.add( fp.appConfig, \"SlowDown\" );\n                controlPanel.add( fp.appConfig, \"Snapshot\" );\n                controlPanel.add( fp.appConfig, \"FullScreen\" );\n                controlPanel.add( fp.appConfig, \"SwitchTerrain\" );\n                controlPanel.add( fp.appConfig, \"WrapTerrain\" );\n                controlPanel.add( fp.appConfig, \"UnwrapTerrain\" );\n            }\n\n            if ( fp.appConfig.displayOptions.guiShowAgentFolder ) {\n                var agentsFolder = fp.gui.addFolder( \"Agent Options\" );\n                agentsFolder.add( fp.appConfig.agentOptions, \"initialPopulation\", 0, 1000 ).step( 1 );\n                agentsFolder.add( fp.appConfig.agentOptions, \"initialExtent\", 1, 100 ).step( 1 );\n                agentsFolder.add( fp.appConfig.agentOptions, \"maxExtent\", 1, 100 ).step( 1 );\n                agentsFolder.add( fp.appConfig.agentOptions, \"initialX\",  0, 100 ).step( 1 );\n                agentsFolder.add( fp.appConfig.agentOptions, \"initialY\",  0, 100 ).step( 1 );\n                agentsFolder.add( fp.appConfig.agentOptions, \"randomAge\" );\n                agentsFolder.add( fp.appConfig.agentOptions, \"chanceToJoinNetwork\", 0.0, 1.0 ).step( 0.01 );\n                agentsFolder.add( fp.appConfig.agentOptions, \"chanceToJoinNetworkWithHome\", 0.0, 1.0 ).step( 0.01 );\n                agentsFolder.add( fp.appConfig.agentOptions, \"chanceToJoinNetworkWithBothHomes\", 0.0, 1.0 ).step( 0.01 );\n                agentsFolder.add( fp.appConfig.agentOptions, \"chanceToFindPathToHome\", 0.0, 1.0 ).step( 0.01 );\n                agentsFolder.add( fp.appConfig.agentOptions, \"chanceToFindPathToOtherAgentHome\", 0.0, 1.0 ).step( 0.01 );\n                agentsFolder.add( fp.appConfig.agentOptions, \"initialCircle\" );\n                agentsFolder.add( fp.appConfig.agentOptions, \"noWater\" );\n                agentsFolder.add( fp.appConfig.agentOptions, \"noUphill\" );\n                agentsFolder.add( fp.appConfig.agentOptions, \"useStickman\" );\n                agentsFolder.add( fp.appConfig.agentOptions, \"visitHomeBuilding\", 0.0, 1.0 ).step( 0.001 );\n                agentsFolder.add( fp.appConfig.agentOptions, \"visitOtherBuilding\", 0.0, 1.0 ).step( 0.001 );\n                agentsFolder.add( fp.appConfig.agentOptions, \"establishLinks\" );\n                agentsFolder.add( fp.appConfig.agentOptions, \"shuffle\" );\n                agentsFolder.add( fp.appConfig.agentOptions, \"size\", 10, 1000  ).step( 10 );\n                agentsFolder.add( fp.appConfig.agentOptions, \"terrainOffset\", 0, 100  ).step( 1 );\n                agentsFolder.add( fp.appConfig.agentOptions, \"initialSpeed\", 1, 10 ).step( 1 );\n                agentsFolder.add( fp.appConfig.agentOptions, \"initialPerturbBy\", 0, 1 ).step( 0.05 );\n                agentsFolder.add( fp.appConfig.agentOptions, \"movementRelativeToPatch\" );\n                agentsFolder.add( fp.appConfig.agentOptions, \"movementInPatch\", 1, 100 ).step( 1 );\n                agentsFolder.add( fp.appConfig.agentOptions, \"movementStrictlyIntercardinal\" );\n            }\n\n            if ( fp.appConfig.displayOptions.guiShowBuildingsFolder ) {\n                var buildingsFolder = fp.gui.addFolder( \"Building Options\" );\n                buildingsFolder.add( fp.appConfig.buildingOptions, \"create\" );\n                buildingsFolder.add( fp.appConfig.buildingOptions, \"maxNumber\", 1, 100 ).step( 1 );\n                buildingsFolder.add( fp.appConfig.buildingOptions, \"detectBuildingCollisions\" );\n                buildingsFolder.add( fp.appConfig.buildingOptions, \"detectRoadCollisions\" );\n                var forms = buildingsFolder.addFolder( \"Form\" );\n                forms.add( fp.appConfig.buildingOptions, \"buildingForm\", fp.BUILDING_FORMS.names );\n                forms.add( fp.appConfig.buildingOptions, \"spread\", 1, 100 ).step( 1 );\n                forms.add( fp.appConfig.buildingOptions, \"randomForm\" );\n                forms.add( fp.appConfig.buildingOptions, \"rotateRandomly\" );\n                forms.add( fp.appConfig.buildingOptions, \"rotateSetAngle\", 0, 360 ).step( 1 );\n                var dimensions = buildingsFolder.addFolder( \"Dimensions\" );\n                dimensions.add( fp.appConfig.buildingOptions, \"minHeight\", 1, 100 ).step( 1 );\n                dimensions.add( fp.appConfig.buildingOptions, \"maxHeight\", 2, 200 ).step( 1 );\n                dimensions.add( fp.appConfig.buildingOptions, \"heightA\", 0.1, 10.0 ).step( 0.1 );\n                dimensions.add( fp.appConfig.buildingOptions, \"heightB\", 1, 100 ).step( 1 );\n                dimensions.add( fp.appConfig.buildingOptions, \"riseRate\", 1, 100 ).step( 1 );\n                dimensions.add( fp.appConfig.buildingOptions, \"levelHeight\", 10, 100 ).step( 1 );\n                dimensions.add( fp.appConfig.buildingOptions, \"minWidth\", 1, 200 ).step( 1 );\n                dimensions.add( fp.appConfig.buildingOptions, \"maxWidth\", 41, 400 ).step( 1 );\n                dimensions.add( fp.appConfig.buildingOptions, \"minLength\", 1, 200 ).step( 1 );\n                dimensions.add( fp.appConfig.buildingOptions, \"maxLength\", 41, 400 ).step( 1 );\n                var influences = buildingsFolder.addFolder( \"Influences\" );\n                influences.add( fp.appConfig.buildingOptions, \"roads\", 0.0, 1.0 ).step( 0.1 );\n                influences.add( fp.appConfig.buildingOptions, \"water\", 0.0, 1.0 ).step( 0.1 );\n                influences.add( fp.appConfig.buildingOptions, \"otherBuildings\", 0.0, 1.0 ).step( 0.1 );\n                influences.add( fp.appConfig.buildingOptions, \"distanceFromOtherBuildingsMin\", 0, 10000 ).step( 100 );\n                influences.add( fp.appConfig.buildingOptions, \"distanceFromOtherBuildingsMax\", 0, 10000 ).step( 100 );\n                influences.add( fp.appConfig.buildingOptions, \"buildingHeight\", 0.0, 1.0 ).step( 0.1 );\n                var view = buildingsFolder.addFolder( \"Appearance\" );\n                view.add( fp.appConfig.buildingOptions, \"useShader\" );\n                view.add( fp.appConfig.buildingOptions, \"useLevelOfDetail\" );\n                view.add( fp.appConfig.buildingOptions, \"lowResDistance\", 2000, 20000 ).step( 1000 );\n                view.add( fp.appConfig.buildingOptions, \"highResDistance\", 100, 2000 ).step( 100 );\n                view.add( fp.appConfig.buildingOptions, \"opacity\", 0.0, 1.0 ).step( 0.01 );\n                var fill = view.addFolder( \"Fill\" );\n                fill.add( fp.appConfig.buildingOptions, \"showFill\" );\n                fill.add( fp.appConfig.buildingOptions, \"fillRooves\" );\n                var line = view.addFolder( \"Line\" );\n                line.add( fp.appConfig.buildingOptions, \"showLines\" );\n                line.add( fp.appConfig.buildingOptions, \"linewidth\", 0.1, 8 ).step( 0.1 );\n                var windows = view.addFolder( \"Window\" );\n                var showWindowsOptions = windows.add( fp.appConfig.buildingOptions, \"showWindows\" );\n                showWindowsOptions.onChange( function( value ) {\n                    fp.buildingNetwork.buildings.forEach( function( b ) {\n                        b.uniforms.showWindows.value = value ? 1 : 0;\n                    } );\n                } );\n                windows.add( fp.appConfig.buildingOptions, \"windowsRandomise\" );\n                windows.add( fp.appConfig.buildingOptions, \"windowsFlickerRate\", 0, 1 ).step( 0.01 );\n                windows.add( fp.appConfig.buildingOptions, \"windowWidth\", 1, 100 ).step( 1 );\n                windows.add( fp.appConfig.buildingOptions, \"windowPercent\", 1, 100 ).step( 1 );\n                windows.add( fp.appConfig.buildingOptions, \"windowsStartY\", 1, 100 ).step( 1 );\n                windows.add( fp.appConfig.buildingOptions, \"windowsEndY\", 1, 100 ).step( 1 );\n                var stagger = buildingsFolder.addFolder( \"Stagger\" );\n                stagger.add( fp.appConfig.buildingOptions, \"stagger\" );\n                stagger.add( fp.appConfig.buildingOptions, \"staggerAmount\", 1, 100 );\n                var taper = buildingsFolder.addFolder( \"Taper\" );\n                taper.add( fp.appConfig.buildingOptions, \"taper\" );\n                taper.add( fp.appConfig.buildingOptions, \"taperExponent\", 1, 10 ).step( 1 );\n                taper.add( fp.appConfig.buildingOptions, \"taperDistribution\", 0.1, 5 );\n                var animation = buildingsFolder.addFolder( \"Animation\" );\n                animation.add( fp.appConfig.buildingOptions, \"destroyOnComplete\" );\n                animation.add( fp.appConfig.buildingOptions, \"loopCreateDestroy\" );\n                animation.add( fp.appConfig.buildingOptions, \"turning\" );\n                animation.add( fp.appConfig.buildingOptions, \"falling\" );\n            }\n\n            if ( fp.appConfig.displayOptions.guiShowRoadsFolder ) {\n                var roadsFolder = fp.gui.addFolder( \"Road Options\" );\n                roadsFolder.add( fp.appConfig.roadOptions, \"create\" );\n                roadsFolder.add( fp.appConfig.roadOptions, \"maxNumber\", 1, 100 ).step( 1 );\n                roadsFolder.add( fp.appConfig.roadOptions, \"roadWidth\", 5, 50 ).step( 5 );\n                roadsFolder.add( fp.appConfig.roadOptions, \"roadDeviation\", 0, 50 ).step( 1 );\n                roadsFolder.add( fp.appConfig.roadOptions, \"roadRadiusSegments\", 2, 20 ).step( 1 );\n                roadsFolder.add( fp.appConfig.roadOptions, \"roadSegments\", 1, 20 ).step( 1 );\n                roadsFolder.add( fp.appConfig.roadOptions, \"initialRadius\", 0, 1000 ).step( 100 );\n                roadsFolder.add( fp.appConfig.roadOptions, \"probability\", 50, 1000 ).step( 50 );\n                roadsFolder.add( fp.appConfig.roadOptions, \"lenMinimum\", 0, 2000 ).step( 100 );\n                roadsFolder.add( fp.appConfig.roadOptions, \"lenMaximum\", 100, 2000 ).step( 100 );\n                roadsFolder.add( fp.appConfig.roadOptions, \"lenDistributionFactor\", 1, 10 ).step( 1 );\n                roadsFolder.add( fp.appConfig.roadOptions, \"overlapThreshold\", 1, 100 ).step( 1 );\n                roadsFolder.add( fp.appConfig.roadOptions, \"flattenAdjustment\", 0.025, 1.0 ).step( 0.025 );\n                roadsFolder.add( fp.appConfig.roadOptions, \"flattenLift\", 0, 40 ).step( 1 );\n            }\n\n            if ( fp.appConfig.displayOptions.guiShowTerrainFolder ) {\n                var terrainFolder = fp.gui.addFolder( \"Terrain Options\" );\n                terrainFolder.add( fp.appConfig.terrainOptions, \"loadHeights\" ).onFinishChange( fp.loadTerrain );\n                terrainFolder.add( fp.appConfig.terrainOptions, \"gridExtent\", 1000, 20000 ).step( 1000 ).onFinishChange( fp.loadTerrain );\n                terrainFolder.add( fp.appConfig.terrainOptions, \"gridPoints\", 2, 2000 ).step( 100 ).onFinishChange( fp.loadTerrain );\n                terrainFolder.add( fp.appConfig.terrainOptions, \"maxTerrainHeight\", 100, 2000 ).step( 100 ).onFinishChange( fp.loadTerrain );\n                terrainFolder.add( fp.appConfig.terrainOptions, \"shaderUse\" ).onFinishChange( fp.loadTerrain );\n                terrainFolder.add( fp.appConfig.terrainOptions, \"shaderShadowMix\", 0, 1 ).step( 0.05 ).onFinishChange( fp.updateTerrain );\n                terrainFolder.add( fp.appConfig.terrainOptions, \"multiplier\", 0.1, 10 ).step( 0.1 ).onFinishChange( fp.loadTerrain );\n                terrainFolder.add( fp.appConfig.terrainOptions, \"patchSize\", 1, 100 ).step( 1 ).onFinishChange( fp.loadTerrain );\n                terrainFolder.add( fp.appConfig.terrainOptions, \"mapIndex\", 0, 1 ).step( 1 ).onFinishChange( fp.loadTerrain );\n                terrainFolder.add( fp.appConfig.terrainOptions, \"mapFile\" ).onFinishChange( fp.loadTerrain );\n            }\n\n            if ( fp.appConfig.displayOptions.guiShowDisplayFolder ) {\n                var displayFolder = fp.gui.addFolder( \"Display Options\" );\n                displayFolder.add( fp.appConfig.displayOptions, \"agentsShow\" ).onFinishChange( fp.toggleAgentState );\n                displayFolder.add( fp.appConfig.displayOptions, \"buildingsShow\" ).onFinishChange( fp.toggleBuildingState );\n                displayFolder.add( fp.appConfig.displayOptions, \"roadsShow\" ).onFinishChange( fp.toggleRoadState );\n                displayFolder.add( fp.appConfig.displayOptions, \"waterShow\" ).onFinishChange( fp.toggleWaterState );\n                displayFolder.add( fp.appConfig.displayOptions, \"networkShow\" ).onFinishChange( fp.toggleAgentNetwork );\n                displayFolder.add( fp.appConfig.displayOptions, \"networkCurve\" );\n                displayFolder.add( fp.appConfig.displayOptions, \"networkCurvePoints\", 4, 20 ).step( 1 );\n                displayFolder.add( fp.appConfig.displayOptions, \"patchesUpdate\" );\n                displayFolder.add( fp.appConfig.displayOptions, \"patchesShow\" ).onFinishChange( fp.togglePatchesState );\n                displayFolder.add( fp.appConfig.displayOptions, \"trailsShow\" ).onFinishChange( fp.toggleTrailState );\n                displayFolder.add( fp.appConfig.displayOptions, \"trailsUpdate\" ).onFinishChange( fp.toggleTrailState );\n                displayFolder.add( fp.appConfig.displayOptions, \"trailsShowAsLines\" ).onFinishChange( fp.toggleTrailState );\n                displayFolder.add( fp.appConfig.displayOptions, \"trailLength\", 1, 10000 ).step( 1 );\n                displayFolder.add( fp.appConfig.displayOptions, \"cursorShow\" ).onFinishChange( fp.removeCursor );\n                displayFolder.add( fp.appConfig.displayOptions, \"statsShow\" ).onFinishChange( fp.toggleStatsState );\n                displayFolder.add( fp.appConfig.displayOptions, \"hudShow\" ).onFinishChange( fp.toggleHUDState );\n                displayFolder.add( fp.appConfig.displayOptions, \"wireframeShow\" ).onFinishChange( fp.toggleWireframeState );\n                displayFolder.add( fp.appConfig.displayOptions, \"dayShow\" ).onFinishChange( fp.toggleDayNight );\n                displayFolder.add( fp.appConfig.displayOptions, \"skyboxShow\" ).onFinishChange( fp.toggleDayNight );\n                displayFolder.add( fp.appConfig.displayOptions, \"chartShow\" ).onFinishChange( fp.updateGraph );\n                displayFolder.add( fp.appConfig.displayOptions, \"pathsShow\" ).onFinishChange( fp.togglePathsState );\n                displayFolder.add( fp.appConfig.displayOptions, \"terrainShow\" ).onFinishChange( fp.toggleTerrainPlane );\n                displayFolder.add( fp.appConfig.displayOptions, \"lightHemisphereShow\" ).onFinishChange( fp.toggleLights );\n                displayFolder.add( fp.appConfig.displayOptions, \"lightDirectionalShow\" ).onFinishChange( fp.toggleLights );\n                displayFolder.add( fp.appConfig.displayOptions, \"coloriseAgentsByHealth\" );\n                displayFolder.add( fp.appConfig.displayOptions, \"firstPersonView\" ).onFinishChange( fp.resetControls );\n                displayFolder.add( fp.appConfig.displayOptions, \"cameraOverride\" ).onFinishChange( fp.resetControls );\n                displayFolder.add( fp.appConfig.displayOptions, \"cameraX\", 0, 5000 ).onFinishChange( fp.resetControls );\n                displayFolder.add( fp.appConfig.displayOptions, \"cameraY\", 0, 5000 ).onFinishChange( fp.resetControls );\n                displayFolder.add( fp.appConfig.displayOptions, \"cameraZ\", 0, 5000 ).onFinishChange( fp.resetControls );\n                displayFolder.add( fp.appConfig.displayOptions, \"maximiseView\" );\n                displayFolder.add( fp.appConfig.displayOptions, \"guiShow\" );\n                var folders = displayFolder.addFolder( \"Folder Options\" );\n                folders.add( fp.appConfig.displayOptions, \"guiShowControls\" );\n                folders.add( fp.appConfig.displayOptions, \"guiShowAgentFolder\" );\n                folders.add( fp.appConfig.displayOptions, \"guiShowBuildingsFolder\" );\n                folders.add( fp.appConfig.displayOptions, \"guiShowRoadsFolder\" );\n                folders.add( fp.appConfig.displayOptions, \"guiShowTerrainFolder\" );\n                folders.add( fp.appConfig.displayOptions, \"guiShowDisplayFolder\" );\n                folders.add( fp.appConfig.displayOptions, \"guiShowColorFolder\" );\n            }\n\n            if ( fp.appConfig.displayOptions.guiShowColorFolder ) {\n                var colorFolder = fp.gui.addFolder( \"Color Options\" );\n                var colorTerrainFolder = colorFolder.addFolder( \"Terrain Colors\" );\n                colorTerrainFolder.addColor( fp.appConfig.colorOptions, \"colorDayTerrainGroundLevel\" ).onChange( fp.loadTerrain );\n                colorTerrainFolder.addColor( fp.appConfig.colorOptions, \"colorNightTerrainGroundLevel\" ).onChange( fp.loadTerrain );\n                colorTerrainFolder.addColor( fp.appConfig.colorOptions, \"colorDayTerrainLowland1\" ).onChange( fp.loadTerrain );\n                colorTerrainFolder.addColor( fp.appConfig.colorOptions, \"colorNightTerrainLowland1\" ).onChange( fp.loadTerrain );\n                colorTerrainFolder.addColor( fp.appConfig.colorOptions, \"colorDayTerrainLowland2\" ).onChange( fp.loadTerrain );\n                colorTerrainFolder.addColor( fp.appConfig.colorOptions, \"colorNightTerrainLowland2\" ).onChange( fp.loadTerrain );\n                colorTerrainFolder.addColor( fp.appConfig.colorOptions, \"colorDayTerrainMidland1\" ).onChange( fp.loadTerrain );\n                colorTerrainFolder.addColor( fp.appConfig.colorOptions, \"colorNightTerrainMidland1\" ).onChange( fp.loadTerrain );\n                colorTerrainFolder.addColor( fp.appConfig.colorOptions, \"colorDayTerrainMidland2\" ).onChange( fp.loadTerrain );\n                colorTerrainFolder.addColor( fp.appConfig.colorOptions, \"colorNightTerrainMidland2\" ).onChange( fp.loadTerrain );\n                colorTerrainFolder.addColor( fp.appConfig.colorOptions, \"colorDayTerrainHighland\" ).onChange( fp.loadTerrain );\n                colorTerrainFolder.addColor( fp.appConfig.colorOptions, \"colorNightTerrainHighland\" ).onChange( fp.loadTerrain );\n                colorTerrainFolder.add( fp.appConfig.colorOptions, \"colorTerrainStop1\", 0.0, 1.0 ).step(0.01).onChange( fp.loadTerrain );\n                colorTerrainFolder.add( fp.appConfig.colorOptions, \"colorTerrainStop2\", 0.0, 1.0 ).step(0.01).onChange( fp.loadTerrain );\n                colorTerrainFolder.add( fp.appConfig.colorOptions, \"colorTerrainStop3\", 0.0, 1.0 ).step(0.01).onChange( fp.loadTerrain );\n                colorTerrainFolder.add( fp.appConfig.colorOptions, \"colorTerrainStop4\", 0.0, 1.0 ).step(0.01).onChange( fp.loadTerrain );\n                colorTerrainFolder.add( fp.appConfig.colorOptions, \"colorTerrainStop5\", 0.0, 1.0 ).step(0.01).onChange( fp.loadTerrain );\n                colorTerrainFolder.add( fp.appConfig.colorOptions, \"colorTerrainOpacity\", 0.0, 1.0 ).step(0.01).onChange( fp.loadTerrain );\n                var colorBuildingFolder = colorFolder.addFolder( \"Building Colors\" );\n                colorBuildingFolder.addColor( fp.appConfig.colorOptions, \"colorDayBuildingFill\" );\n                colorBuildingFolder.addColor( fp.appConfig.colorOptions, \"colorNightBuildingFill\" );\n                colorBuildingFolder.addColor( fp.appConfig.colorOptions, \"colorDayBuildingLine\" );\n                colorBuildingFolder.addColor( fp.appConfig.colorOptions, \"colorNightBuildingLine\" );\n                colorBuildingFolder.addColor( fp.appConfig.colorOptions, \"colorDayBuildingWindow\" );\n                colorBuildingFolder.addColor( fp.appConfig.colorOptions, \"colorNightBuildingWindow\" );\n                var colorGraphFolder = colorFolder.addFolder( \"Graph Colors\" );\n                colorGraphFolder.addColor( fp.appConfig.colorOptions, \"colorGraphPopulation\" ).onChange( fp.updateChartColors );\n                colorGraphFolder.addColor( fp.appConfig.colorOptions, \"colorGraphHealth\" ).onChange( fp.updateChartColors );\n                colorGraphFolder.addColor( fp.appConfig.colorOptions, \"colorGraphPatchValues\" ).onChange( fp.updateChartColors );\n                var colorLightingFolder = colorFolder.addFolder( \"Lighting Colors\" );\n                colorLightingFolder.addColor( fp.appConfig.colorOptions, \"colorLightHemisphereSky\" ).onChange( fp.updateLighting );\n                colorLightingFolder.addColor( fp.appConfig.colorOptions, \"colorLightHemisphereGround\" ).onChange( fp.updateLighting );\n                colorLightingFolder.add( fp.appConfig.colorOptions, \"colorLightHemisphereIntensity\", 0, 1 ).step( 0.01 ).onChange( fp.updateLighting );\n                colorLightingFolder.addColor( fp.appConfig.colorOptions, \"colorLightDirectional\" ).onChange( fp.updateLighting );\n                colorLightingFolder.add( fp.appConfig.colorOptions, \"colorLightDirectionalIntensity\", 0, 1 ).step( 0.01 ).onChange( fp.updateLighting );\n                var colorOtherFolder = colorFolder.addFolder( \"Other Colors\" );\n                colorOtherFolder.addColor( fp.appConfig.colorOptions, \"colorDayBackground\" );\n                colorOtherFolder.addColor( fp.appConfig.colorOptions, \"colorNightBackground\" );\n                colorOtherFolder.addColor( fp.appConfig.colorOptions, \"colorDayRoad\" );\n                colorOtherFolder.addColor( fp.appConfig.colorOptions, \"colorNightRoad\" );\n                colorOtherFolder.addColor( fp.appConfig.colorOptions, \"colorDayAgent\" );\n                colorOtherFolder.addColor( fp.appConfig.colorOptions, \"colorNightAgent\" );\n                colorOtherFolder.addColor( fp.appConfig.colorOptions, \"colorDayNetwork\" );\n                colorOtherFolder.addColor( fp.appConfig.colorOptions, \"colorNightNetwork\" );\n                colorOtherFolder.addColor( fp.appConfig.colorOptions, \"colorDayNetwork\" );\n                colorOtherFolder.addColor( fp.appConfig.colorOptions, \"colorNightNetwork\" );\n                colorOtherFolder.addColor( fp.appConfig.colorOptions, \"colorDayTrail\" );\n                colorOtherFolder.addColor( fp.appConfig.colorOptions, \"colorNightTrail\" );\n                colorOtherFolder.addColor( fp.appConfig.colorOptions, \"colorDayPath\" );\n                colorOtherFolder.addColor( fp.appConfig.colorOptions, \"colorNightPath\" );\n            }\n\n            // Need to create the GUI to seed the parameters first.\n            if ( !fp.appConfig.displayOptions.guiShow ) {\n                fp.gui.destroy();\n                return;\n            }\n        };\n\n        /**\n         * Generates a THREE.Vector3 object containing RGB values from either\n         * a number or string color representation\n         * @param  {string/number} color the color to convert\n         * @return {THREE.Vector3}       [ description ]\n         */\n        this.buildColorVector = function( color ) {\n            var bc, r, g, b;\n            if ( !isNaN( parseInt( color )) ) {\n                b = color % 256;\n                g = ( ( color - b ) / 256 ) % 256;\n                r = ( ( color - ( g * 256 ) - b ) / ( 256 * 256 ) ) % 256;\n            }\n            else {\n                bc = parseCSSColor( color );\n                r = bc[ 0 ];\n                g = bc[ 1 ];\n                b = bc[ 2 ];\n            }\n            return new THREE.Vector3( r / 255.0, g / 255.0, b / 255.0 );\n        };\n\n        this.buildColorInteger = function( r, g, b ) {\n            return r * 256 * 256 + g * 256 + b;\n        };\n\n        this.getOffset = function( currentLevel, len ) {\n            var initOffset = ( currentLevel > 0 ) ? len * 2 : 0;\n            var offset = initOffset + ( currentLevel ) * len * 4;\n            return offset;\n        };\n\n        /**\n         * Resizes the renderer and camera aspect.\n         */\n        this.onWindowResize = function() {\n            if ( fp.appConfig.displayOptions.maximiseView ) {\n                fp.camera.aspect = window.innerWidth / window.innerHeight;\n                fp.camera.updateProjectionMatrix();\n                fp.renderer.setSize( window.innerWidth, window.innerHeight );\n            }\n            else {\n                var width = $( \"#container1\" ).width(), height = $( \"#container1\" ).height();\n                fp.camera.aspect = width / height;\n                fp.camera.updateProjectionMatrix();\n                fp.renderer.setSize( width, height );\n            }\n        };\n\n        /**\n         * Update the series colours, if they change\n         */\n        this.updateChartColors = function() {\n            if ( fp.chart.seriesSet.length == 3 ) {\n                var colorPop = \"#\" + new THREE.Color( fp.appConfig.colorOptions.colorGraphPopulation ).getHexString(),\n                    colorHealth = \"#\" + new THREE.Color( fp.appConfig.colorOptions.colorGraphHealth ).getHexString(),\n                    colorPatches = \"#\" + new THREE.Color( fp.appConfig.colorOptions.colorGraphPatchValues ).getHexString();\n                _.extend( fp.chart.seriesSet[ 0 ].options, { strokeStyle: colorPop } );\n                _.extend( fp.chart.seriesSet[ 1 ].options, { strokeStyle: colorHealth } );\n                _.extend( fp.chart.seriesSet[ 2 ].options, { strokeStyle: colorPatches } );\n            }\n        };\n\n        this.mostVisited = function() {\n            return _.chain( trailNetwork.trails ).pairs().sortBy( function( a ) {return a[ 1 ];} ).last( 100 ).value();\n        };\n\n        this.vertexCount = function( obj ) {\n            var count = 0;\n            if ( !_.isUndefined( obj.geometry ) ) {\n                if ( !_.isUndefined( obj.geometry.vertices ) )\n                    count += obj.geometry.vertices.length;\n                else if ( !_.isUndefined( obj.geometry.attributes.position ) )\n                    count += obj.geometry.attributes.position.array.length / 3;\n            }\n            if ( !_.isUndefined( obj.children ) ) {\n                obj.children.forEach( function( child ) {\n                    count += this.vertexCount( child );\n                } );\n            }\n            return count;\n        };\n\n        /**\n         * Sets up the basic sim objects\n         */\n        this.setupSimObjects = function() {\n            // Set up root objects\n            fp.terrain = new fp.Terrain();\n            fp.terrain.gridExtent = fp.appConfig.terrainOptions.gridExtent;\n\n            fp.agentNetwork = new fp.AgentNetwork();\n            fp.buildingNetwork = new fp.BuildingNetwork();\n            fp.roadNetwork = new fp.RoadNetwork();\n            fp.pathNetwork = new fp.PathNetwork();\n            fp.trailNetwork = new fp.TrailNetwork();\n            fp.patchNetwork = new fp.PatchNetwork();\n            fp.timescale = new fp.Timescale();\n            fp.cursor = new fp.Cursor();\n        };\n\n        /**\n         * Sets up the THREE.js camera.\n         */\n        this.setupCamera = function() {\n            fp.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 10000000 );\n            if ( fp.appConfig.displayOptions.cameraOverride ) {\n                fp.camera.position.x = fp.appConfig.displayOptions.cameraX;\n                fp.camera.position.y = fp.appConfig.displayOptions.cameraY;\n                fp.camera.position.z = fp.appConfig.displayOptions.cameraZ;\n            }\n            else if ( fp.appConfig.displayOptions.firstPersonView ) {\n                fp.camera.position.x = 0;\n                fp.camera.position.y = 50 * fp.appConfig.terrainOptions.multiplier;\n                fp.camera.position.z = 0;\n            }\n            else {\n                fp.camera.position.x = 0;\n                fp.camera.position.y = 200 * fp.appConfig.terrainOptions.multiplier;\n                fp.camera.position.z = 800 * fp.appConfig.terrainOptions.multiplier;\n            }\n        };\n\n        /**\n         * Sets up the controls.\n         * @memberof fp\n         */\n        this.setupControls = function() {\n            if ( fp.appConfig.displayOptions.firstPersonView ) {\n                fp.controls = new THREE.PointerLockControls( fp.camera );\n                fp.scene.add( fp.controls.getObject() );\n                fp.controls.enabled = true;\n                fp.container.requestPointerLock();\n            }\n            else {\n                // fp.controls = new THREE.TrackballControls( fp.camera, fp.container );\n                // Works better - but has no rotation?\n                fp.controls = new THREE.OrbitControls( fp.camera, fp.container );\n                fp.controls.rotateSpeed = 0.15;\n                fp.controls.zoomSpeed = 0.6;\n                fp.controls.panSpeed = 0.3;\n\n                fp.controls.noRotate = false;\n                fp.controls.noZoom = false;\n                fp.controls.noPan = false;\n                fp.controls.noRoll = true;\n                fp.controls.minDistance = 250.0;\n                fp.controls.maxDistance = 10000.0;\n            }\n        };\n\n        /**\n         * Resets the state of the camera, controls and water object.\n         * @memberof fp\n         */\n        this.resetControls = function() {\n            fp.setupCamera();\n            fp.setupControls();\n            fp.setupWater();\n        };\n\n\n        /**\n         * Sets up the THREE.js renderer.\n         * @memberof fp\n         */\n        this.setupRenderer = function() {\n            fp.renderer = new THREE.WebGLRenderer( {\n                alpha: true,\n                antialias: true,\n                preserveDrawingBuffer: true  // to allow screenshot\n            } );\n            fp.renderer.gammaInput = true;\n            fp.renderer.gammaOutput = true;\n\n            fp.renderer.shadowMapEnabled = true;\n            fp.renderer.shadowMapType = THREE.PCFSoftShadowMap;\n            fp.renderer.shadowMapCullFace = THREE.CullFaceBack;\n\n            fp.renderer.setClearColor( fp.appConfig.colorOptions.colorNightBackground, 1 );\n            fp.onWindowResize();\n            fp.container.appendChild( fp.renderer.domElement );\n            fp.renderer.domElement.style.zIndex = 2;\n\n            // We add the event listener to = function the domElement\n            fp.renderer.domElement.addEventListener( \"mousemove\", fp.onMouseMove );\n            fp.renderer.domElement.addEventListener( \"mouseup\", fp.onMouseUp );\n        };\n\n        /**\n         * @memberof fp\n         */\n        this.setupLighting = function() {\n            // Remove existing lights\n            fp.scene.remove( fp.lightHemisphere );\n            fp.scene.remove( fp.lightDirectional );\n\n            fp.lightHemisphere = new THREE.HemisphereLight(\n                new THREE.Color( fp.appConfig.colorOptions.colorLightHemisphereSky ),\n                new THREE.Color( fp.appConfig.colorOptions.colorLightHemisphereGround ),\n                new THREE.Color( fp.appConfig.colorOptions.colorLightHemisphereIntensity )\n            );\n            // var fp.lightHemisphere = new THREE.HemisphereLight( 0xbfbfbf, 0xbfbfbf, 0.8 );\n            // var fp.lightHemisphere = new THREE.HemisphereLight( 0xffffff, 0xffffff, 0.6 );\n            // var fp.lightHemisphere = new THREE.HemisphereLight( 0xefeeb0, 0xefeeb0, 1.0 );\n            fp.lightHemisphere.position.set( 0, 1000, 0 );\n            if ( fp.appConfig.displayOptions.lightHemisphereShow )\n                fp.scene.add( fp.lightHemisphere );\n\n            fp.lightDirectional = new THREE.DirectionalLight(\n                new THREE.Color( fp.appConfig.colorOptions.colorLightDirectional ),\n                fp.appConfig.colorOptions.colorLightDirectionalIntensity\n            );\n            // var fp.lightDirectional = new THREE.DirectionalLight( 0x8f8f4f, 0.5 );\n            fp.lightDirectional.position.set( -40000, 40000, -40000 );\n            fp.lightDirectional.shadowDarkness = Math.pow( fp.appConfig.colorOptions.colorLightDirectionalIntensity, 2 );\n            fp.lightDirectional.castShadow = true;\n            // these six values define the boundaries of the yellow box seen above\n            fp.lightDirectional.shadowCameraNear = 250;\n            fp.lightDirectional.shadowCameraFar = 80000;\n            // var d = fp.terrain.gridExtent // * fp.appConfig.terrainOptions.multiplier / 2;\n            var d = fp.terrain.gridExtent / 2; // * fp.appConfig.terrainOptions.multiplier / 2;\n            fp.lightDirectional.shadowMapWidth = d;\n            fp.lightDirectional.shadowMapHeight = d;\n            fp.lightDirectional.shadowCameraLeft = -d;\n            fp.lightDirectional.shadowCameraRight = d;\n            fp.lightDirectional.shadowCameraTop = d;\n            fp.lightDirectional.shadowCameraBottom = -d;\n            fp.lightDirectional.shadowBias = -0.0001;\n            //fp.lightDirectional.shadowBias = -0.05;\n            // fp.lightDirectional.shadowCameraVisible = true; // for debugging\n            if ( fp.appConfig.displayOptions.lightDirectionalShow )\n                fp.scene.add( fp.lightDirectional );\n        };\n\n        /**\n         * @memberof fp\n         */\n        this.updateLighting = function() {\n            if ( _.isNull( fp.lightHemisphere ) || _.isNull( fp.colorLightDirectional ) )\n                return null;\n\n            fp.lightHemisphere.color = new THREE.Color( fp.appConfig.colorOptions.colorLightHemisphereSky );\n            fp.lightHemisphere.groundColor = new THREE.Color( fp.appConfig.colorOptions.colorLightHemisphereGround );\n            fp.lightHemisphere.intensity = fp.appConfig.colorOptions.colorLightHemisphereIntensity;\n            fp.lightDirectional.color = new THREE.Color( fp.appConfig.colorOptions.colorLightDirectional );\n            fp.lightDirectional.intensity = fp.appConfig.colorOptions.colorLightDirectionalIntensity;\n            fp.lightDirectional.shadowDarkness = Math.pow( fp.appConfig.colorOptions.colorLightDirectionalIntensity, 2 );\n\n        };\n\n        /**\n         * @memberof fp\n         */\n        this.setupWater = function() {\n            // Taken from Three.js examples, webgl_shaders_ocean.html\n            var parameters = {\n                width: 2000,\n                height: 2000,\n                widthSegments: 250,\n                heightSegments: 250,\n                depth: 1500,\n                param: 4,\n                filterparam: 1\n            };\n            var waterNormals = new THREE.ImageUtils.loadTexture( \"../textures/waternormals.jpg\" );\n            waterNormals.wrapS = waterNormals.wrapT = THREE.RepeatWrapping;\n            fp.water = new THREE.Water( fp.renderer, fp.camera, fp.scene, {\n                textureWidth: 512,\n                textureHeight: 512,\n                waterNormals: waterNormals,\n                alpha:  1.0,\n                //sunDirection: dirLight.position.normalize(),\n                sunColor: 0xffffff,\n                waterColor: 0x001e0f,\n                distortionScale: 50.0,\n            } );\n            if ( !_.isUndefined( fp.waterMesh ) )\n                fp.scene.remove( fp.waterMesh );\n            fp.waterMesh = new THREE.Mesh(\n                new THREE.PlaneBufferGeometry( parameters.width * 500, parameters.height * 500, 50, 50 ),\n                fp.water.material\n            );\n            fp.waterMesh.add( fp.water );\n            fp.waterMesh.rotation.x = - Math.PI * 0.5;\n            fp.waterMesh.position.y = -10;\n            if ( fp.appConfig.displayOptions.waterShow )\n                fp.scene.add( fp.waterMesh );\n        };\n\n        /**\n         * @memberof fp\n         */\n        this.setupSky = function() {\n            // load skybox\n            var cubeMap = new THREE.CubeTexture( [ ] );\n            cubeMap.format = THREE.RGBFormat;\n            cubeMap.flipY = false;\n            var loader = new THREE.ImageLoader();\n            var skies = [   [ \"../textures/skyboxsun25degtest.png\", 1024, 0 ],\n                            [ \"../textures/skyboxsun5deg.png\", 1024, 0 ],\n                            [ \"../textures/skyboxsun5deg2.png\", 1024, 0 ],\n                            [ \"../textures/skyboxsun45deg.png\", 1024, 0 ]\n            ]; // Skies courtesy of http://reije081.home.xs4all.nl/skyboxes/\n            var skyI = Math.floor( Math.random() * skies.length );\n            loader.load( skies[ skyI ][ 0 ], function ( image ) {\n                var getSide = function ( x, y ) {\n                    var size = skies[ skyI ][ 1 ];\n                    var canvas = document.createElement( \"canvas\" );\n                    canvas.width = size;\n                    canvas.height = size;\n\n                    var context = canvas.getContext( \"2d\" );\n                    context.drawImage( image, - x * size, - y * size );\n                    return canvas;\n                };\n                cubeMap.images[ 0 ] = getSide( 2, 1 ); // px\n                cubeMap.images[ 1 ] = getSide( 0, 1 ); // nx\n                cubeMap.images[ 2 ] = getSide( 1, 0 ); // py\n                cubeMap.images[ 3 ] = getSide( 1, 2 ); // ny\n                cubeMap.images[ 4 ] = getSide( 1, 1 ); // pz\n                cubeMap.images[ 5 ] = getSide( 3, 1 ); // nz\n                cubeMap.needsUpdate = true;\n            } );\n\n            var cubeShader = THREE.ShaderLib[ \"cube\" ];\n            cubeShader.uniforms[ \"tCube\" ].value = cubeMap;\n\n            var skyBoxMaterial = new THREE.ShaderMaterial( {\n                fragmentShader: cubeShader.fragmentShader,\n                vertexShader: cubeShader.vertexShader,\n                uniforms: cubeShader.uniforms,\n                depthWrite: false,\n                side: THREE.BackSide\n            } );\n            fp.skyBox = new THREE.Mesh(\n                new THREE.BoxGeometry( 1000000, 1000000, 1000000 ),\n                skyBoxMaterial\n            );\n            fp.skyBox.position.set( 0, skies[ skyI ][ 2 ], 0 );\n            if ( fp.appConfig.displayOptions.skyboxShow )\n                fp.scene.add( fp.skyBox );\n        };\n\n        /**\n         * @memberof fp\n         */\n        this.setOutputHUD = function() {\n            $( \"#yearValue\" ).html( fp.timescale.currentYear );\n            $( \"#populationValue\" ).html( fp.agentNetwork.agents.length );\n        };\n\n        /**\n         * @memberof fp\n         */\n        this.setupGUI = function( config ) {\n            if ( !_.isUndefined( config ) ) {\n                fp.doGUI( config );\n            }\n            else if ( !_.isUndefined( $ ) && !_.isUndefined( $.urlParam ) ) {\n                var recipe = $.urlParam( \"recipe\" ), recipeData = $.urlParam( \"recipeData\" );\n                if ( !_.isUndefined( recipeData ) ) {\n                    fp.doGUI( $.parseJSON( decodeURIComponent( recipeData ) ) );\n                }\n                else if ( !_.isUndefined( recipe ) ) {\n                    $.getJSON( \"/recipes/\" + recipe + \".json\", function( data ) {\n                        fp.doGUI( data );\n                    } );\n                }\n                else\n                    fp.doGUI();\n            }\n            else\n                fp.doGUI();\n        };\n\n        /**\n         * Initialises the simulation.\n         * @memberof fp\n         * @param  {Object}   config   An object containing overriden config parameters.\n         * @param  {Object}   sim      An Object containing a setup() and a tick() function.\n         * @param  {Function} callback Callback function to call at the end of initialisation.\n         */\n        this.init = function( config, sim, callback ) {\n            fp.container = $( \"#container\" )[ 0 ] || config.container;\n            fp.scene = new THREE.Scene();\n\n            // Add helpers and plugins here\n            // fp.scene.add( new THREE.AxisHelper( 100 ));\n            // fp.scene.add( new THREE.GridHelper( 100,10 ));\n            // fp.scene.fog = new THREE.FogExp2( 0xefd1b5, 0.0025 );\n\n            // Do the rest of the setup\n            fp.sim = sim || fp.simDefault();\n            fp.setupGUI( config );\n            fp.setupSimObjects();\n            fp.setupCamera();\n            fp.setupControls();\n            fp.setupRenderer();\n            fp.setupLighting();\n            fp.setupWater();\n            fp.setupSky();\n            fp.setOutputHUD();\n            fp.Chart.setupChart();\n            fp.toggleStatsState(); // Add stats\n            window.addEventListener( \"resize\", fp.onWindowResize, false );\n            fp.loadTerrain( callback ); // Load the terrain asynchronously\n            /*\n            */\n        };\n\n        /**\n         * The core simulation animation method.\n         * @memberof fp\n         */\n        this.animate = function() {\n            if ( fp.AppState.halt )\n                return;\n            // Must call this first!\n            fp.patchNetwork.updatePatchAgents();\n            if ( fp.AppState.runSimulation )\n                fp.sim.tick.call( fp.sim ); // Get around binding problem - see: http://alistapart.com/article/getoutbindingsituations\n\n            fp.agentNetwork.updateAgentNetwork();\n            fp.buildingNetwork.updateBuildings();\n            fp.patchNetwork.updatePatchValues();\n            fp.trailNetwork.updateTrails();\n            fp.terrain.updateTerrain();\n            fp.pathNetwork.updatePath();\n            fp.updateYear();\n            fp.updateSimState();\n            fp.updateGraph();\n            fp.updateWater();\n\n            fp.updateStats();\n            fp.updateControls();\n            fp.updateCamera();\n            fp.updateKeyboard();\n            requestAnimationFrame( fp.animate );\n            fp.renderer.render( fp.scene, fp.camera );\n        };\n\n        /**\n         * Factory method to generate a default sim object.\n         * @memberof fp\n         */\n        this.simDefault = function() {\n            return {\n                counter: 0,\n                setup: function() { /* console.log( \"Default sim set up\" ); */ },\n                tick: function()  { /* console.log( \"Default sim tick: \" + (++ this.counter )); */ }\n            };\n        };\n\n        /**\n         * Updates the simulation state.\n         * @memberof fp\n         */\n        this.updateSimState = function() {\n            if ( fp.AppState.stepSimulation )\n                fp.AppState.runSimulation = false;\n        };\n\n        /**\n         * Updates the water object, if it exists.\n         * @memberof fp\n         */\n        this.updateWater = function() {\n            if ( !_.isUndefined( fp.water ) && !_.isUndefined( fp.water.material.uniforms.time ) ) {\n                fp.water.material.uniforms.time.value += 1.0 / 60.0;\n                fp.water.render();\n            }\n        };\n\n        /**\n         * Updates the controls.\n         * @memberof fp\n         */\n        this.updateControls = function() {\n            if ( !fp.appConfig.displayOptions.cursorShow ) {\n                fp.controls.update( fp.clock.getDelta() );\n\n                if ( !_.isUndefined( fp.controls.getObject ) ) {\n                    var obj = fp.controls.getObject();\n                    var height = fp.getHeight( obj.position.x, obj.position.z );\n                    /*\n                    if ( height < obj.position.y )\n                        obj.position.y = obj.position.y - 1;\n                    else if ( height > obj.position.y )\n                        obj.position.y = obj.position.y + 1;\n                    */\n                    if ( height != obj.position.y ) {\n                        obj.position.y = height;\n                    }\n                    //obj.translateY( fp.getHeight( obj.position.x, obj.position.z ) );\n                }\n            }\n        };\n\n        /**\n         * Adjusts the graph size if needed.\n         * @memberof fp\n         */\n        this.updateGraph = function() {\n            if ( fp.chart.seriesSet.length == 3 &&\n                fp.chart.options.maxValue <= fp.agentNetwork.agents.length ) {\n                fp.chart.options.maxValue *= 2;\n            }\n        };\n\n        /**\n         * Updates the stats widget.\n         * @memberof fp\n         */\n        this.updateStats = function() {\n            if ( fp.appConfig.displayOptions.statsShow )\n                fp.stats.update();\n        };\n\n        /**\n         * Updates the camera for the scene and its objects.\n         * @memberof fp\n         */\n        this.updateCamera = function() {\n            fp.scene.traverse( function( object ) {\n                if ( object instanceof THREE.LOD )\n                    object.update( fp.camera );\n            } );\n            fp.scene.updateMatrixWorld();\n        };\n\n        /**\n         * Ends the simulation.\n         * @memberof fp\n         */\n        this.endSim = function() {\n            fp.AppState.runSimulation = false;\n            fp.appConfig.displayOptions.buildingsShow = false;\n            fp.appConfig.displayOptions.patchesUpdate = false;\n        };\n\n        /**\n         * Updates the year of the simulation.\n         * @memberof fp\n         */\n        this.updateYear = function() {\n            if ( !fp.AppState.runSimulation )\n                return;\n            fp.timescale.frameCounter++;\n            if ( fp.timescale.frameCounter % fp.timescale.framesToYear === 0 ) {\n                if ( !fp.timescale.terminate || fp.timescale.currentYear <  fp.timescale.endYear ) {\n                    fp.timescale.currentYear++;\n                    fp.setOutputHUD();\n                }\n                else\n                    fp.endSim();\n            }\n        };\n\n        /**\n         * Obtains the patch index for a given plane coordinate.\n         * @memberof fp\n         */\n        this.getPatchIndex = function( x, y ) {\n            var multiplier = fp.appConfig.terrainOptions.multiplier;\n            x = Math.floor( x / multiplier );\n            y = Math.floor( y / multiplier );\n            var dim = ( fp.terrain.gridPoints - 1 ) / fp.patchNetwork.patchSize;\n            var halfGrid = fp.terrain.gridExtent / 2;\n            var pX = Math.floor( dim * ( x + halfGrid ) / fp.terrain.gridExtent );\n            var pY = Math.floor( dim * ( y + halfGrid ) / fp.terrain.gridExtent );\n            var index = Math.floor( pY * dim + pX );\n            index = ( index < 0 ) ? 0 : index;\n            index = ( index >= fp.patchNetwork.patchValues.length ) ? fp.patchNetwork.patchValues.length - 1 : index;\n            return index;\n        };\n\n        /**\n         * Gets the terrain index point for a given ( x, y ) co-ordinate.\n         * @memberof fp\n         */\n        this.getIndex = function( x, y ) {\n            var multiplier = fp.appConfig.terrainOptions.multiplier;\n            x = Math.floor( x / multiplier );\n            y = Math.floor( y / multiplier );\n            var maxExtent = ( fp.appConfig.agentOptions.maxExtent / 100 ) * fp.terrain.halfExtent;\n            var xRel = Math.floor( x ) + fp.terrain.halfExtent;\n            var yRel = Math.floor( y ) + fp.terrain.halfExtent;\n            if ( xRel < fp.terrain.halfExtent - maxExtent || yRel < fp.terrain.halfExtent - maxExtent ||\n                 xRel > fp.terrain.halfExtent + maxExtent || yRel > fp.terrain.halfExtent + maxExtent )\n                return -1;\n            var halfGrid = fp.terrain.gridExtent / 2;\n            var gridRatio = fp.terrain.gridExtent / fp.terrain.gridPoints;\n            // NOT SURE WHY THIS IS HERE?\n            y += gridRatio / 2;\n            //y = ( fp.terrain.gridPoints * fp.terrain.gridPoints ) - y - 1;\n            var xLoc = Math.floor( ( Math.round( x ) + halfGrid ) / gridRatio );\n            var yLoc = Math.floor( ( Math.round( y ) + halfGrid ) / gridRatio );\n            return Math.floor( fp.terrain.gridPoints * yLoc + xLoc );\n        };\n\n        /**\n         * Gets the terrain height for a given ( x, y ) co-ordinate.\n         * @memberof fp\n         */\n        this.getHeight = function( x, y ) {\n            return fp.terrain.getHeightForIndex( fp.getIndex( x, y ) );\n        };\n\n        /**\n         * @memberof fp\n         */\n        this.speedOfSim = function() {\n            return true;\n        };\n\n        /**\n         * @memberof fp\n         */\n        this.likelihoodOfGrowth = function() {\n            return ( 1 - ( fp.buildingNetwork.speedOfConstruction * fp.speedOfSim() ) );\n        };\n\n        /**\n         * @memberof fp\n         */\n        this.checkProximityOfRoads = function( index ) {\n            var cells = fp.surroundingCells( index );\n            for ( var i = 0; i < cells.length; i++ ) {\n                var cell = cells[ i ];\n                if ( fp.roadNetwork.indexValues.indexOf( fp.getIndex( cell.x, cell.y )) > -1 )\n                    return 1.0;\n            }\n            return 0.0;\n        };\n\n        /**\n         * Count how many surrounding cells are also sea level\n         * @memberof fp\n         * @param  {Number} index\n         * @return {Number}\n         */\n        this.checkProximityOfWater = function( index ) {\n            // Now count how many surrounding are also sea level\n            // We count in 8 directions, to maxDepth\n            var seaLevelNeighbours = 0, totalNeighbours = 0;\n            fp.surroundingCells( index ).forEach( function( cell ) {\n                if ( cell.z <= 0 )\n                    seaLevelNeighbours++;\n                totalNeighbours++;\n            } );\n            return seaLevelNeighbours / totalNeighbours;\n        };\n\n        /**\n         * Count how many surrounding cells are also buildings\n         * @memberof fp\n         * @param  {Number} index\n         * @return {Number}\n         */\n        this.checkProximityOfBuildings = function( index, threshold ) {\n            // Count number of positions\n            var buildingNeighbours = 0, totalNeighbours = 0;\n            var surroundingCells = fp.surroundingCells( index );\n            surroundingCells.forEach( function( cell ) {\n                if ( !_.isUndefined( fp.buildingNetwork.buildingHash[ fp.getIndex( cell.x, cell.y ) ] ) )\n                    buildingNeighbours++;\n                totalNeighbours++;\n            } );\n            var testValue = buildingNeighbours / totalNeighbours;\n            var chance = Math.pow( testValue, Math.random() );\n            // Return true if the probability is greater than 1 minus the target value\n            return ( chance > ( 1 - threshold ) );\n        };\n\n        /**\n         * Count how many surrounding cells are also buildings\n         * @memberof fp\n         * @param  {Number} index\n         * @return {Number}\n         */\n        this.checkNearestNeighbour = function( index, min, max ) {\n            // Get coordinates for index\n            var coords = fp.terrain.getCoordinatesForIndex( index );\n            if ( _.isNull( coords ) )\n                return false;\n            var x = coords[ 0 ], z = coords[ 1 ];\n            // Get nearest neighbouring building\n            var nnDistance = this.nearestNeighbouringBuildings( x, z );\n            return ( min <= nnDistance && nnDistance <= max );\n        };\n\n\n        /**\n         * Determines nearest neighbouring building.\n         */\n        this.nearestNeighbouringBuildings = function( x, z ) {\n            var minSquaredDistance = -1;\n            for ( var i = 0; i < fp.buildingNetwork.buildings.length; i++ ) {\n                var building = fp.buildingNetwork.buildings[ i ];\n                var bx = building.lod.position.x, bz = building.lod.position.z;\n                var squaredDistance = Math.pow( bx - x, 2 ) + Math.pow( bz - z, 2 );\n                if ( minSquaredDistance == -1 || squaredDistance < minSquaredDistance )\n                    minSquaredDistance = squaredDistance;\n            }\n            return Math.sqrt( minSquaredDistance );\n        };\n\n\n        /**\n         * Now count how many surrounding are also sea level.\n         * We count in 8 directions, to maxDepth.\n         * @memberof fp\n         * @param  {Number} index\n         */\n        this.checkProximiteBuildingHeight = function( index ) {\n            if ( fp.buildingNetwork.buildings.length === 0 )\n                return 0;\n\n            var surrounding = fp.surroundingCells( index );\n            // Count number of positions\n            var buildingNeighbours = 0, totalNeighbours = 0;\n\n            var allHeights = jStat( _.map( fp.buildingNetwork.buildings, function( building ) {return building.maxHeight; } ) );\n            var meanHeights = allHeights.mean();\n            var stdevHeights = allHeights.stdev();\n\n            if ( isNaN( meanHeights ) || isNaN( stdevHeights ))\n                return 0;\n\n            var localBuildings = [ ];\n            for ( var j = 0; j < surrounding.length; j++ ) {\n                var cell = surrounding[ j ];\n                if ( cell !== null ) {\n                    // Also zero?\n                    var key = fp.getIndex( cell.x, cell.y );\n                    var building = fp.buildingNetwork.buildingHash[ key ];\n                    if ( !_.isUndefined( building ) ) {\n                        localBuildings.push( building );\n                    }\n                }\n            }\n            if ( localBuildings.length > 0 ) {\n                var localHeights = jStat( _.map( localBuildings, function( building ) {return building.maxHeight; } ) );\n                var meanLocalHeights = localHeights.mean();\n\n                // Take the difference between the local and total heights - return that difference as a multiple of total standard deviations\n                return ( meanLocalHeights - meanHeights ) / stdevHeights;\n            }\n            else\n                return 0;\n        };\n\n        /**\n         * Retrieves a collection of THREE.Vector3 objects around a given\n         * index point.\n         * @memberof fp\n         * @param  {Number} index\n         * @return {Array} a collection of THREE.Vector3 objects\n         */\n        this.surroundingCells = function( index ) {\n            // Now count how many surrounding are also sea level\n            // We count in 8 directions, to maxDepth\n            // We also try to ignore cases which go over grid boundaries\n            var surroundingCells = [ ];\n            var maxCells = fp.terrain.gridPoints * fp.terrain.gridPoints,\n                positions = fp.terrain.planeArray.array;\n            var indexY = Math.floor( index / fp.terrain.gridPoints ),\n                indexX = index % fp.terrain.gridPoints,\n                //indexMirroredOnY = ( indexY ) * fp.terrain.gridPoints + indexX,\n                indexMirroredOnY = ( fp.terrain.gridPoints - indexY ) * fp.terrain.gridPoints + indexX,\n                inc = fp.appConfig.terrainOptions.multiplier,\n                threshold = fp.appConfig.worldOptions.maxLandSearchDepth * inc;\n\n            for ( var j = inc; j <= threshold; j += inc ) {\n                if ( Math.floor( (indexMirroredOnY - j ) / fp.terrain.gridPoints ) == Math.floor( indexMirroredOnY / fp.terrain.gridPoints )) {\n                    surroundingCells.push( new THREE.Vector3(\n                            positions[ 3 * ( indexMirroredOnY - j - ( fp.terrain.gridPoints * j ) ) + 0 ],\n                            positions[ 3 * ( indexMirroredOnY - j - ( fp.terrain.gridPoints * j ) ) + 1 ],\n                            positions[ 3 * ( indexMirroredOnY - j - ( fp.terrain.gridPoints * j ) ) + 2 ]\n                    ) );\n                    surroundingCells.push( new THREE.Vector3(\n                            positions[ 3 * ( indexMirroredOnY - j ) + 0 ],\n                            positions[ 3 * ( indexMirroredOnY - j ) + 1 ],\n                            positions[ 3 * ( indexMirroredOnY - j ) + 2 ]\n                    ) );\n                    surroundingCells.push( new THREE.Vector3(\n                            positions[ 3 * ( indexMirroredOnY - j + ( fp.terrain.gridPoints * j ) ) + 0 ],\n                            positions[ 3 * ( indexMirroredOnY - j + ( fp.terrain.gridPoints * j ) ) + 1 ],\n                            positions[ 3 * ( indexMirroredOnY - j + ( fp.terrain.gridPoints * j ) ) + 2 ]\n                    ) );\n                }\n                if ( Math.floor( (indexMirroredOnY + j ) / fp.terrain.gridPoints ) == Math.floor( indexMirroredOnY / fp.terrain.gridPoints )) {\n                    surroundingCells.push( new THREE.Vector3(\n                            positions[ 3 * ( indexMirroredOnY + j - ( fp.terrain.gridPoints * j ) ) + 0 ],\n                            positions[ 3 * ( indexMirroredOnY + j - ( fp.terrain.gridPoints * j ) ) + 1 ],\n                            positions[ 3 * ( indexMirroredOnY + j - ( fp.terrain.gridPoints * j ) ) + 2 ]\n                    ) );\n                    surroundingCells.push( new THREE.Vector3(\n                            positions[ 3 * ( indexMirroredOnY + j ) + 0 ],\n                            positions[ 3 * ( indexMirroredOnY + j ) + 1 ],\n                            positions[ 3 * ( indexMirroredOnY + j ) + 2 ]\n                    ) );\n                    surroundingCells.push( new THREE.Vector3(\n                            positions[ 3 * ( indexMirroredOnY + j + ( fp.terrain.gridPoints * j ) ) + 0 ],\n                            positions[ 3 * ( indexMirroredOnY + j + ( fp.terrain.gridPoints * j ) ) + 1 ],\n                            positions[ 3 * ( indexMirroredOnY + j + ( fp.terrain.gridPoints * j ) ) + 2 ]\n                    ) );\n                }\n                surroundingCells.push( new THREE.Vector3(\n                        positions[ 3 * ( indexMirroredOnY - ( fp.terrain.gridPoints * j ) ) + 0 ],\n                        positions[ 3 * ( indexMirroredOnY - ( fp.terrain.gridPoints * j ) ) + 1 ],\n                        positions[ 3 * ( indexMirroredOnY - ( fp.terrain.gridPoints * j ) ) + 2 ]\n                ) );\n                surroundingCells.push( new THREE.Vector3(\n                        positions[ 3 * ( indexMirroredOnY + ( fp.terrain.gridPoints * j ) ) + 0 ],\n                        positions[ 3 * ( indexMirroredOnY + ( fp.terrain.gridPoints * j ) ) + 1 ],\n                        positions[ 3 * ( indexMirroredOnY + ( fp.terrain.gridPoints * j ) ) + 2 ]\n                ) );\n            }\n            return _.compact( surroundingCells );\n        };\n\n        /**\n         * @memberof fp\n         */\n        this.updateKeyboard = function() {\n            if ( fp.keyboard.pressed( \"V\" ) ) {\n                fp.appConfig.displayOptions.firstPersonView = !fp.appConfig.displayOptions.firstPersonView;\n                fp.resetControls();\n            }\n            if ( fp.appConfig.displayOptions.firstPersonView )\n                return;\n            if ( fp.keyboard.pressed( \"S\" ) ) {\n                fp.appConfig.Setup();\n            }\n            else if ( fp.keyboard.pressed( \"R\" ) ) {\n                fp.appConfig.Run();\n            }\n            else if ( fp.keyboard.pressed( \"U\" ) ) {\n                fp.appConfig.SpeedUp();\n            }\n            else if ( fp.keyboard.pressed( \"D\" ) ) {\n                fp.appConfig.SlowDown();\n            }\n            else if ( fp.keyboard.pressed( \"B\" ) ) {\n                fp.appConfig.displayOptions.buildingsShow = !fp.appConfig.displayOptions.buildingsShow;\n                fp.toggleBuildingState();\n            }\n            else if ( fp.keyboard.pressed( \"O\" ) ) {\n                fp.appConfig.displayOptions.roadsShow = !fp.appConfig.displayOptions.roadsShow;\n                fp.toggleRoadState();\n            }\n            else if ( fp.keyboard.pressed( \"M\" ) ) {\n                fp.appConfig.displayOptions.waterShow = !fp.appConfig.displayOptions.waterShow;\n                fp.toggleWaterState();\n            }\n            else if ( fp.keyboard.pressed( \"N\" ) ) {\n                fp.appConfig.displayOptions.networkShow = !fp.appConfig.displayOptions.networkShow;\n                fp.toggleAgentNetwork();\n            }\n            else if ( fp.keyboard.pressed( \"P\" ) ) {\n                fp.appConfig.displayOptions.patchesShow = !fp.appConfig.displayOptions.patchesShow;\n                fp.togglePatchesState();\n            }\n            else if ( fp.keyboard.pressed( \"T\" ) ) {\n                fp.appConfig.displayOptions.trailsShow = !fp.appConfig.displayOptions.trailsShow;\n                fp.toggleTrailState();\n            }\n            else if ( fp.keyboard.pressed( \"C\" ) ) {\n                fp.appConfig.displayOptions.cursorShow = !fp.appConfig.displayOptions.cursorShow;\n                fp.removeCursor();\n            }\n            else if ( fp.keyboard.pressed( \"A\" ) ) {\n                fp.appConfig.displayOptions.statsShow = !fp.appConfig.displayOptions.statsShow;\n                fp.toggleStatsState();\n            }\n            else if ( fp.keyboard.pressed( \"W\" ) ) {\n                fp.appConfig.displayOptions.wireframeShow = !fp.appConfig.displayOptions.wireframeShow;\n                fp.toggleWireframeState();\n            }\n            else if ( fp.keyboard.pressed( \"Y\" ) ) {\n                fp.appConfig.displayOptions.dayShow = !fp.appConfig.displayOptions.dayShow;\n                fp.toggleDayNight();\n            }\n            else if ( fp.keyboard.pressed( \"G\" ) ) {\n                fp.appConfig.displayOptions.chartShow = !fp.appConfig.displayOptions.chartShow;\n                fp.updateGraph();\n            }\n            else if ( fp.keyboard.pressed( \"X\" ) ) {\n                fp.appConfig.displayOptions.pathsShow = !fp.appConfig.displayOptions.pathsShow;\n                fp.togglePathsState();\n            }\n            else if ( fp.keyboard.pressed( \"E\" ) ) {\n                fp.appConfig.displayOptions.terrainShow = !fp.appConfig.displayOptions.terrainShow;\n                fp.toggleTerrainPlane();\n            }\n        };\n\n        /**\n         * @memberof fp\n         */\n        this.mouseIntersects = function( eventInfo ) {\n            //this where begin to transform the mouse cordinates to three,js cordinates\n            fp.mouse.x = ( eventInfo.clientX / window.innerWidth ) * 2 - 1;\n            fp.mouse.y = -( eventInfo.clientY / window.innerHeight ) * 2 + 1;\n\n            //this vector caries the mouse click cordinates\n            fp.mouseVector.set( fp.mouse.x, fp.mouse.y, fp.mouse.z );\n\n            //the final step of the transformation process, basically this method call\n            //creates a point in 3d space where the mouse click occurd\n            fp.mouseVector.unproject( fp.camera );\n\n            var direction = fp.mouseVector.sub( fp.camera.position ).normalize();\n\n            fp.ray.set( fp.camera.position, direction );\n\n            //asking the raycaster if the mouse click touched the sphere object\n            var intersects = fp.ray.intersectObject( fp.terrain.plane );\n\n            //the ray will return an array with length of 1 or greater if the mouse click\n            //does touch the plane object\n            var point;\n            if ( intersects.length > 0 )\n                point = intersects[ 0 ].point;\n\n            return point;\n        };\n\n        /**\n         * @memberof fp\n         */\n        this.onMouseMove = function( eventInfo ) {\n            //stop any other event listener from recieving this event\n            eventInfo.preventDefault();\n\n            if ( !fp.appConfig.displayOptions.cursorShow )\n                return;\n\n            var planePoint = fp.mouseIntersects( eventInfo );\n            if ( fp.appConfig.displayOptions.cursorShowCell )\n                fp.cursor.createCellFill( planePoint.x, planePoint.z );\n            else\n                fp.cursor.createCell( planePoint.x, planePoint.z );\n\n            if ( eventInfo.which == 1 )\n                fp.terrain.flattenTerrain();\n        };\n\n        /**\n         * @memberof fp\n         */\n        this.onMouseUp = function( eventInfo ) {\n            //stop any other event listener from recieving this event\n            eventInfo.preventDefault();\n\n            if ( ! eventInfo.metaKey )\n                return;\n\n            var planePoint = this.mouseIntersects( eventInfo ), p1, p2;\n            if ( !_.isUndefined( planePoint ) ) {\n                if ( _.isUndefined( p1 ) )\n                    p1 = planePoint;\n                else if ( _.isUndefined( p2 )) {\n                    p2 = planePoint;\n                    fp.roadNetwork.addRoad( p1, p2, appConfig.roadOptions.roadWidth );\n                    p1 = p2 = undefined;\n                }\n            }\n        };\n\n\n        /**\n         * Toggles the visibility of the agent network.\n         * @memberof fp\n         */\n        this.toggleAgentState = function() {\n            if ( !fp.appConfig.displayOptions.agentsShow )\n                fp.scene.remove(  fp.agentNetwork.particles  );\n            else\n                fp.scene.add(  fp.agentNetwork.particles  );\n        };\n\n        /**\n         * Toggles the visibility of the building network.\n         * @memberof fp\n         */\n        this.toggleBuildingState = function() {\n            if ( !fp.appConfig.displayOptions.buildingsShow )\n                fp.scene.remove( fp.buildingNetwork.networkMesh );\n            else\n                fp.scene.add( fp.buildingNetwork.networkMesh );\n        };\n\n        /**\n         * Toggles the visibility of the raod network.\n         * @memberof fp\n         */\n        this.toggleRoadState = function() {\n            if ( !fp.appConfig.displayOptions.roadsShow )\n                fp.scene.remove( fp.roadNetwork.networkMesh );\n            else if ( !_.isUndefined( fp.roadNetwork.networkMesh ) )\n                fp.scene.add( fp.roadNetwork.networkMesh );\n        };\n\n        /**\n         * Toggles the visibility of water.\n         * @memberof fp\n         */\n        this.toggleWaterState = function() {\n            if ( !fp.appConfig.displayOptions.waterShow )\n                fp.scene.remove( fp.waterMesh );\n            else\n                fp.scene.add( fp.waterMesh );\n        };\n\n        /**\n         * Toggles the visibility of the agent network.\n         * @memberof fp\n         */\n        this.toggleAgentNetwork = function() {\n            if ( !fp.appConfig.displayOptions.networkShow ) {\n                fp.agentNetwork.networks.forEach( function( network ) {\n                    fp.scene.remove( network.networkMesh );\n                } );\n            }\n            else {\n                fp.agentNetwork.networks.forEach( function( network ) {\n                    if ( !_.isNull( network.networkMesh ) )\n                        fp.scene.add( network.networkMesh );\n                } );\n            }\n        };\n\n        /**\n         * Toggles the visibility of fp.terrain patches.\n         * @memberof fp\n         */\n        this.togglePatchesState = function() {\n            fp.patchNetwork.togglePatchesState();\n        };\n\n        /**\n         * Toggles the visibility of the trail.\n         * @memberof fp\n         */\n        this.toggleTrailState = function() {\n            if ( !fp.appConfig.displayOptions.trailsShow ||\n                !fp.appConfig.displayOptions.trailsShowAsLines ) {\n                fp.scene.remove( fp.trailNetwork.globalTrailLine );\n            }\n            else if ( appConfig.displayOptions.trailsShowAsLines ) {\n                fp.scene.add( fp.trailNetwork.globalTrailLine );\n            }\n        };\n\n        /**\n         * Toggles the visibility of the path network.\n         * @memberof fp\n         */\n        this.togglePathsState = function() {\n            if ( !fp.appConfig.displayOptions.pathsShow )\n                fp.scene.remove( fp.pathNetwork.networkMesh );\n            else\n                fp.scene.add( fp.pathNetwork.networkMesh );\n        };\n\n\n        /**\n         * Toggles the visibility of the terrain.\n         * @memberof fp\n         */\n        this.toggleTerrainPlane = function() {\n            if ( !fp.appConfig.displayOptions.terrainShow )\n                fp.scene.remove( fp.terrain.plane );\n            else\n                fp.scene.add( fp.terrain.plane );\n        };\n\n\n        /**\n         * Toggles the visibility of the lights.\n         * @memberof fp\n         */\n        this.toggleLights = function() {\n            if ( !fp.appConfig.displayOptions.lightHemisphereShow )\n                fp.scene.remove( fp.lightHemisphere );\n            else\n                fp.scene.add( fp.lightHemisphere );\n            if ( !fp.appConfig.displayOptions.lightDirectionalShow )\n                fp.scene.remove( fp.lightDirectional );\n            else\n                fp.scene.add( fp.lightDirectional );\n        };\n\n\n\n        /**\n         * Removes cursor.\n         * @memberof fp\n         */\n        this.removeCursor = function()  {\n            fp.scene.remove( fp.cursor.cell );\n            fp.cursor.cell = undefined;\n        };\n\n        /**\n         * Toggles the visibility of the stats widget.\n         * @memberof fp\n         */\n        this.toggleStatsState = function() {\n            if ( fp.appConfig.displayOptions.statsShow && fp.stats === null ) {\n                fp.stats = new Stats();\n                fp.stats.domElement.style.position = \"absolute\";\n                fp.stats.domElement.style.top = \"0px\";\n                fp.container.appendChild( fp.stats.domElement );\n            }\n            $( \"#stats\" ).toggle( fp.appConfig.displayOptions.statsShow );\n        };\n\n        /**\n         * Toggles the visibility of the heads-up display.\n         * @memberof fp\n         */\n        this.toggleHUDState = function() {\n            $( \"#hudDiv\" ).toggle( fp.appConfig.displayOptions.hudShow );\n        };\n\n        /**\n         * Toggles the visibility of the wireframe.\n         * @memberof fp\n         */\n        this.toggleWireframeState = function() {\n            fp.terrain.simpleTerrainMaterial.wireframe = fp.appConfig.displayOptions.wireframeShow;\n            fp.terrain.richTerrainMaterial.wireframe = fp.appConfig.displayOptions.wireframeShow;\n            fp.buildingNetwork.buildings.forEach( function( building ) {\n                building.highResMeshContainer.children.forEach( function( mesh ) {\n                    mesh.material.wireframe = fp.appConfig.displayOptions.wireframeShow;\n                } );\n            } );\n        };\n\n        /**\n         * Toggles day or night visibility.\n         * @memberof fp\n         */\n        this.toggleDayNight = function() {\n\n            var colorBackground, colorBuilding, colorRoad,\n                colorAgent, colorNetwork, colorTrail,\n                colorBuildingFill, colorBuildingLine, colorBuildingWindow;\n            \n            if ( fp.appConfig.displayOptions.dayShow ) {\n                colorBackground = fp.appConfig.colorOptions.colorDayBackground;\n                colorRoad = fp.appConfig.colorOptions.colorDayRoad;\n                colorAgent = fp.appConfig.colorOptions.colorDayAgent;\n                colorNetwork = fp.appConfig.colorOptions.colorDayNetwork;\n                colorTrail = fp.appConfig.colorOptions.colorDayTrail;\n                colorBuildingFill = fp.appConfig.colorOptions.colorDayBuildingFill;\n                colorBuildingLine = fp.appConfig.colorOptions.colorDayBuildingLine;\n                colorBuildingWindow = fp.appConfig.colorOptions.colorDayBuildingWindow;\n                fp.terrain.richTerrainMaterial.uniforms = fp.ShaderUtils.phongUniforms( fp.terrain.createUniforms() );\n                fp.terrain.simpleTerrainMaterial.color = new THREE.Color( fp.appConfig.colorOptions.colorDayTerrainLowland1 );\n                if ( fp.appConfig.displayOptions.skyboxShow )\n                    fp.scene.add( fp.skyBox );\n            }\n            else {\n                colorBackground = fp.appConfig.colorOptions.colorNightBackground;\n                colorRoad = fp.appConfig.colorOptions.colorNightRoad;\n                colorAgent = fp.appConfig.colorOptions.colorNightAgent;\n                colorNetwork = fp.appConfig.colorOptions.colorNightNetwork;\n                colorTrail = fp.appConfig.colorOptions.colorNightTrail;\n                colorBuildingFill = fp.appConfig.colorOptions.colorNightBuildingFill;\n                colorBuildingLine = fp.appConfig.colorOptions.colorNightBuildingLine;\n                colorBuildingWindow = fp.appConfig.colorOptions.colorNightBuildingWindow;\n                fp.terrain.richTerrainMaterial.uniforms = fp.ShaderUtils.phongUniforms( fp.terrain.createUniforms() );\n                fp.terrain.simpleTerrainMaterial.color = new THREE.Color( fp.appConfig.colorOptions.colorNightTerrainLowland1 );\n                if ( fp.appConfig.displayOptions.skyboxShow )\n                    fp.scene.remove( fp.skyBox );\n            }\n            \n            fp.terrain.richTerrainMaterial.needsUpdate = true; // important!\n            fp.terrain.simpleTerrainMaterial.needsUpdate = true; // important!\n            fp.terrain.plane.material.needsUpdate = true; // important!\n            fp.renderer.setClearColor( colorBackground, 1 );\n            \n            if ( fp.appConfig.buildingOptions.useShader ) {\n                fp.buildingNetwork.buildings.forEach( function( building ) {\n                    building.highResMeshContainer.children.forEach( function( floor ) {\n                        floor.material.uniforms.fillColor.value = fp.buildColorVector( colorBuildingFill );\n                        floor.material.uniforms.lineColor.value = fp.buildColorVector( colorBuildingLine );\n                        floor.material.uniforms.windowColor.value = fp.buildColorVector( colorBuildingWindow );\n                        floor.material.needsUpdate = true; // important!\n                    } );\n                } );\n            }\n            if ( !_.isNull( fp.roadNetwork.networkMesh ) ) {\n                fp.roadNetwork.networkMesh.children.forEach( function( road ) {\n                    road.material.color = new THREE.Color( colorRoad );\n                    road.material.colorsNeedUpdate = true;\n                } );\n            }\n            fp.agentNetwork.networks.forEach( function( network ) {\n                if ( !_.isNull( network.networkMesh ) ) {\n                    network.networkMesh.material.color = new THREE.Color( colorNetwork );\n                    network.networkMesh.material.colorsNeedUpdate = true;\n                }\n            } );\n            if ( !_.isNull( fp.trailNetwork.globalTrailLine ) ) {\n                fp.trailNetwork.globalTrailLine.material.color = new THREE.Color( colorTrail );\n                fp.trailNetwork.globalTrailLine.material.colorsNeedUpdate = true;\n            }\n            if ( !_.isNull( fp.agentNetwork.particles ) )\n                fp.agentNetwork.agents.forEach( function( agent ) { agent.color = colorAgent; } );\n        \n        };\n\n        /**\n         * Loads the actual terrain, using the THREE.TerrainLoader class.\n         * @param  {Function} callback A function that is called after the terrain is loaded successfully.\n         */\n        this.loadTerrain = function( callback ) {\n            var terrainLoader = new THREE.TerrainLoader();\n            var terrainFile = fp.TERRAIN_MAPS[ fp.terrain.terrainMapIndex ]\n            if ( !_.isUndefined( fp.terrain.terrainMapFile ) && fp.terrain.terrainMapFile !== \"\" )\n                terrainFile = fp.terrain.terrainMapFile;\n            terrainLoader.load( terrainFile, function( data ) {\n                fp.terrain.initTerrain( data );\n                fp.animate(); // Kick off the animation loop\n                if ( _.isFunction( callback ) )\n                    callback(); // Run the callback\n           } );\n        };\n\n\n        /**\n         * Updates the terrain with current values\n         */\n        this.updateTerrain = function() {\n            fp.terrain.plane.material.uniforms = fp.ShaderUtils.phongUniforms( fp.terrain.createUniforms() );\n            fp.terrain.plane.material.needsUpdate = true;\n        };\n\n        /**\n         * Shader utilites - wrappers around Three.js Lambert and Phong shaders.\n         */\n        this.ShaderUtils = {\n            buildingVertexShaderParams: function() {\n                var shader =\n                    `\n                        varying vec3 pos;\n                        varying float vMixin;\n                        attribute float mixin;\n                        uniform float time;\n                    `;\n                return shader;\n            },\n            buildingVertexShaderMain: function() {\n                var shader = `\n                        pos = position;\n                        vMixin = mixin;\n                        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n                    `;\n                return shader;\n            },\n\n            buildingFragmentShaderParams: function() {\n                var shader = `\n                        uniform float time;\n                        uniform vec2 location;\n                        uniform vec2 resolution;\n                        uniform vec3 dimensions;\n                        uniform float bottomWindow;\n                        uniform float topWindow;\n                        uniform float windowWidth;\n                        uniform float windowPercent;\n                        uniform float floorLevel;\n                        uniform float lineWidth;\n                        uniform int showLines;\n                        uniform int showFill;\n                        uniform int showWindows;\n                        uniform int fillRooves;\n                        uniform vec3 lineColor;\n                        uniform vec3 fillColor;\n                        uniform vec3 windowColor;\n                        varying vec3 pos;\n                        varying float vMixin;\n\n                        // Basic random generator, taken from http://stackoverflow.com/questions/4200224/random-noise-functions-for-glsl\n                        // and http://stackoverflow.com/questions/12964279/whats-the-origin-of-this-glsl-rand-one-liner\n                        // For something more sophisticated try github.com/ashima/webgl-noise\n                        float rand( vec2 co ) {\n                            return fract( sin( dot( co.xy ,vec2( 12.9898,78.233 )) ) * 43758.5453 );\n                        }\n                    `;\n                return shader;\n            },\n            buildingFragmentShaderMain: function() {\n                var shader = `\n                        vec3 darkGrey = vec3( 0.1,0.1,0.1 );\n                        vec4 col = vec4( darkGrey, 1. );\n                        float opacity = 1.;\n                        if ( showFill == 1 ) {\n                            col = vec4( mix( fillColor, darkGrey, rand( location ) ), opacity );\n                        }\n                        bool colorise = false;\n                        float dimX = dimensions.x;\n                        float dimY = dimensions.y;\n                        float dimZ = dimensions.z;\n                        float posX = pos.x;\n                        float posY = mod( pos.z, dimY );\n                        float levels = floor( pos.z / dimY );\n                        float posZ = pos.y;\n\n                        // Paint windows\n                        if ( showWindows == 1 ) {\n                            // Normalise height\n                            float height = 1.0 - posY / dimY;\n                            if ( height > bottomWindow && height < topWindow ) {\n                                float p = 0.;\n                                if ( posX < ( floor( dimX / 2.0 ) - 1.0 ) && posX > -( floor( dimX / 2.0 ) - 1.0 )) {\n                                    float width = ( posX + dimX / 2.0 );\n                                    float m = mod( width, windowWidth );\n                                    p = abs( floor( width / windowWidth ) );\n                                    float offsetL = windowWidth * ( (1.0 - windowPercent ) / 2.0 );\n                                    float offsetR = windowWidth - offsetL;\n                                    if ( m > offsetL && m < offsetR )\n                                        colorise = true;\n                                }\n                                if ( posZ < ( floor( dimZ / 2.0 ) - 1.0 ) && posZ > -( floor( dimZ / 2.0 ) - 1.0 )) {\n                                    float width = ( posZ + dimZ / 2.0 );\n                                    float m = mod( width, windowWidth );\n                                    p = abs( floor( width / windowWidth ) );\n                                    float offsetL = windowWidth * ( (1.0 - windowPercent ) / 2.0 );\n                                    float offsetR = windowWidth - offsetL;\n                                    if ( m > offsetL && m < offsetR )\n                                        colorise = true;\n                                }\n                                if ( colorise ) {\n                                    col = vec4( mix( darkGrey, windowColor, pow( rand( vec2( p, levels ) ), vMixin ) ), opacity );\n                                }\n                            }\n                        }\n                        if ( showLines == 1 ) {\n                            // Rules for horizontal lines\n                            // IGNORE BOTTOM LINE FOR NOW:  || posY > dimY - lineWidth\n                            if ( posY == 0.0 && fillRooves == 1 )  {\n                                col = vec4( mix( windowColor, darkGrey, 0.5 ), opacity );\n                            }\n                            else if ( posY < lineWidth ) {\n                                // This gives just lines\n                                if ( posZ < - ( dimZ / 2.0 ) + lineWidth || posZ > ( dimZ / 2.0 ) - lineWidth )\n                                    col = vec4( lineColor, opacity );\n                                if ( posX < - ( dimX / 2.0 ) + lineWidth || posX > ( dimX / 2.0 ) - lineWidth )\n                                    col = vec4( lineColor, opacity );\n                            }\n                            else {\n                                // Rules for vertical lines\n                                if ( posZ < - ( dimZ / 2.0 ) + lineWidth )\n                                    if ( posX < - ( dimX / 2.0 ) + lineWidth || posX > ( dimX / 2.0 ) - lineWidth )\n                                        col = vec4( lineColor, opacity );\n                                if ( posZ > ( dimZ / 2.0 ) - lineWidth )\n                                    if ( posX < - ( dimX / 2.0 ) + lineWidth || posX > ( dimX / 2.0 ) - lineWidth )\n                                        col = vec4( lineColor, opacity );\n                            }\n                        }\n                        outgoingLight = vec3( col.r, col.g, col.b );\n                        diffuseColor = vec4( col.r, col.g, col.b, col.a );\n                    `;\n                return shader;\n            },\n\n            terrainVertexShaderParams: function() {\n                var shader = `\n                    uniform float size;\n                    uniform float maxHeight;\n                    attribute float height;\n                    attribute float trail;\n                    attribute float patch;\n                    varying float vHeight;\n                    varying float vTrail;\n                    varying float vPatch;\n                    `;\n                return shader;\n            },\n            terrainVertexShaderMain: function() {\n                var shader = `\n                        vHeight = height;\n                        vTrail = trail;\n                        vPatch = patch;\n                        gl_Position = projectionMatrix * modelViewMatrix * vec4( position,1.0 );\n                    `;\n                return shader;\n            },\n\n            terrainFragmentShaderParams: function() {\n                var shader = `\n                        uniform float size;\n                        uniform float maxHeight;\n                        varying float vHeight;\n                        varying float vTrail;\n                        varying float vPatch;\n                        // Terrain colors\n                        uniform vec3 groundLevelColor;\n                        uniform vec3 lowland1Color;\n                        uniform vec3 lowland2Color;\n                        uniform vec3 midland1Color;\n                        uniform vec3 midland2Color;\n                        uniform vec3 highlandColor;\n                        uniform float stop1;\n                        uniform float stop2;\n                        uniform float stop3;\n                        uniform float stop4;\n                        uniform float stop5;\n                        // Mix shadows\n                        uniform float shadowMix;\n                    `;\n                return shader;\n            },\n            terrainFragmentShaderMain: function() {\n                var shader = `\n                    vec4 groundLevel = vec4( groundLevelColor, opacity );\n                    vec4 lowland1 = vec4( lowland1Color, opacity );\n                    vec4 lowland2 = vec4( lowland2Color, opacity );\n                    vec4 midland1 = vec4( midland1Color, opacity );\n                    vec4 midland2 = vec4( midland2Color, opacity );\n                    vec4 highland = vec4( highlandColor, opacity );\n                    float range;\n                    vec4 col;\n\n                    float alphaChannel = opacity;\n                    vec3 diffusion = diffuse;\n                    float elevation = vHeight / maxHeight;\n                    if ( vPatch > 0.0 ) {\n                        if ( elevation <=  0.0 ) {\n                            col = vec4( 0.0, 0.0, 0.0, 0.0 );\n                        }\n                        else {\n                            col = vec4( vPatch, vPatch, vPatch, 1.0 );\n                        }\n                    }\n                    else if ( vTrail > 0.0 ) {\n                        col = vec4( vTrail, vTrail, vTrail, 1.0 );\n                    }\n                    else {\n                        if ( elevation == 0.0 ) {\n                            col = vec4( 0.0, 0.0, 0.0, 0.0 );\n                            alphaChannel = 0.0;\n                            diffusion = vec3( 0.0, 0.0, 0.0 );\n                        }\n                        else if ( elevation < stop1 ) {\n                            range = ( elevation - 0.0 ) * ( 1.0 / stop1 );\n                            col = mix( groundLevel, lowland1, range );\n                        }\n                        else if ( elevation < stop2 ) {\n                            range = ( elevation - stop1 ) * ( 1.0 / ( stop2 - stop1 ) );\n                            col = mix( lowland1, lowland2, range );\n                        }\n                        else if ( elevation < stop3 ) {\n                            range = ( elevation - stop2 ) * ( 1.0 / ( stop3 - stop2 ) );\n                            col = mix( lowland2, midland1, range );\n                        }\n                        else if ( elevation < stop4 ) {\n                            range = ( elevation - stop3 ) * ( 1.0 / ( stop4 - stop3 ) );\n                            col = mix( midland1, midland2, range );\n                        }\n                        else if ( elevation < stop5 ) {\n                            range = ( elevation - stop4 ) * ( 1.0 / ( stop5 - stop4 ) );\n                            col = mix( midland2, highland, range );\n                        }\n                        else  {\n                            col = highland;\n                        }\n                    }\n                    //outgoingLight = vec3( col.r, col.g, col.b );\n                    //diffuseColor = vec4( diffuse, alphaChannel );\n\n                    // Allow for a blending of shadows and gradient colors\n                    vec4 tmp = mix( vec4( outgoingLight, 0.0 ), col, shadowMix );\n                    outgoingLight = vec3( tmp.r, tmp.g, tmp.b );\n                    diffuseColor = vec4( diffusion, alphaChannel );\n                    `;\n\n                return shader;\n            },\n\n            agentVertexShader: function() {\n                var shader = `\n                    uniform float size;\n                    attribute float alpha;\n                    attribute vec3 color;\n                    varying float vAlpha;\n                    varying vec3 vColor;\n\n                    void main() {\n                        vAlpha = alpha;\n                        vColor = color; // set RGB color associated to vertex; use later in fragment shader.\n                        vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n                        // option ( 1 ): draw particles at constant size on screen\n                        // gl_PointSize = size;\n                        // option ( 2 ): scale particles as objects in 3D space\n                        gl_PointSize = 1.0 * size * ( 300.0 / length( mvPosition.xyz ) );\n                        gl_Position = projectionMatrix * mvPosition;\n                    }\n                    `;\n                return shader;\n            },\n            agentFragmentShader: function() {\n                var shader = `\n                    varying vec3 vColor;\n                    uniform sampler2D texture;\n                    varying float vAlpha;\n\n                    void main() {\n                        gl_FragColor = vec4( vColor, vAlpha );\n                        // sets a white particle texture to desired color\n                        gl_FragColor = gl_FragColor * texture2D( texture, gl_PointCoord );\n                    }\n                    `;\n                return shader;\n            },\n\n            // LAMBERT SHADER OVERRIDE FOR SHADOWS\n\n            /**\n             * Returns an array of Lambert uniforms.\n             * @param  {Array} otherUniforms\n             * @return {Array} Merged array of uniforms\n             */\n            lambertUniforms: function( otherUniforms ) {\n\n                var uniforms = THREE.UniformsUtils.merge( [\n                        THREE.UniformsLib[ \"common\" ],\n                        THREE.UniformsLib[ \"fog\" ],\n                        THREE.UniformsLib[ \"lights\" ],\n                        THREE.UniformsLib[ \"shadowmap\" ],\n                        {\n                            \"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\n                            \"wrapRGB\"  : { type: \"v3\", value: new THREE.Vector3( 1, 1, 1 ) }\n                        }\n                    ] );\n                return _.extend( uniforms, otherUniforms );\n\n            },\n\n            /**\n             * Generates a vertex shader for a Lambert shader.\n             */\n            lambertShaderVertex: function ( customParams, customCode ) {\n                var vertexShader = [\n                    customParams,\n\n                    `\n                        #define LAMBERT\n\n                        varying vec3 vLightFront;\n\n                        #ifdef DOUBLE_SIDED\n\n                           varying vec3 vLightBack;\n\n                        #endif\n                    `,\n\n                    // Needed for three.js r71\n                    THREE.ShaderChunk[ \"common\" ],\n\n                    THREE.ShaderChunk[ \"map_pars_vertex\" ],\n                    THREE.ShaderChunk[ \"lightmap_pars_vertex\" ],\n                    THREE.ShaderChunk[ \"envmap_pars_vertex\" ],\n                    THREE.ShaderChunk[ \"lights_lambert_pars_vertex\" ],\n                    THREE.ShaderChunk[ \"color_pars_vertex\" ],\n                    THREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\n                    THREE.ShaderChunk[ \"skinning_pars_vertex\" ],\n                    THREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\n                    THREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\n\n                    `void main() {`,\n\n                    customCode,\n\n\n                    THREE.ShaderChunk[ \"map_vertex\" ],\n                    THREE.ShaderChunk[ \"lightmap_vertex\" ],\n                    THREE.ShaderChunk[ \"color_vertex\" ],\n\n                    THREE.ShaderChunk[ \"morphnormal_vertex\" ],\n                    THREE.ShaderChunk[ \"skinbase_vertex\" ],\n                    THREE.ShaderChunk[ \"skinnormal_vertex\" ],\n                    THREE.ShaderChunk[ \"defaultnormal_vertex\" ],\n\n                    THREE.ShaderChunk[ \"morphtarget_vertex\" ],\n                    THREE.ShaderChunk[ \"skinning_vertex\" ],\n                    THREE.ShaderChunk[ \"default_vertex\" ],\n                    THREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\n\n                    THREE.ShaderChunk[ \"worldpos_vertex\" ],\n                    THREE.ShaderChunk[ \"envmap_vertex\" ],\n                    THREE.ShaderChunk[ \"lights_lambert_vertex\" ],\n                    THREE.ShaderChunk[ \"shadowmap_vertex\" ],\n\n                    `}`\n\n                ].join( \"\\n\" );\n\n                return vertexShader;\n            },\n            lambertShaderFragment: function ( customParams, customCode ) {\n\n                var fragmentShader = [\n\n                    customParams,\n\n                    `\n                    uniform vec3 diffuse;\n                    uniform vec3 emissive;\n                    uniform float opacity;\n\n                    varying vec3 vLightFront;\n\n                    #ifdef DOUBLE_SIDED\n\n                       varying vec3 vLightBack;\n\n                    #endif\n                    `,\n\n                    THREE.ShaderChunk[ \"common\" ],\n                    THREE.ShaderChunk[ \"color_pars_fragment\" ],\n                    THREE.ShaderChunk[ \"map_pars_fragment\" ],\n                    THREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\n                    THREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\n                    THREE.ShaderChunk[ \"envmap_pars_fragment\" ],\n                    THREE.ShaderChunk[ \"fog_pars_fragment\" ],\n                    THREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\n                    THREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\n                    THREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\n\n                    `\n                    void main() {\n\n                       vec3 outgoingLight = vec3( 0.0 ); // outgoing light does not have an alpha, the surface does\n                       vec4 diffuseColor = vec4( diffuse, opacity );\n                    `,\n                    customCode, // must set gl_FragColor!\n\n                    THREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\n                    THREE.ShaderChunk[ \"map_fragment\" ],\n                    THREE.ShaderChunk[ \"color_fragment\" ],\n                    THREE.ShaderChunk[ \"alphamap_fragment\" ],\n                    THREE.ShaderChunk[ \"alphatest_fragment\" ],\n                    THREE.ShaderChunk[ \"specularmap_fragment\" ],\n\n                    `\n                    #ifdef DOUBLE_SIDED\n\n                       if ( gl_FrontFacing )\n                           outgoingLight += diffuseColor.rgb * vLightFront + emissive;\n                       else\n                           outgoingLight += diffuseColor.rgb * vLightBack + emissive;\n\n                    #else\n\n                       outgoingLight += diffuseColor.rgb * vLightFront + emissive;\n\n                    #endif\n                    `,\n\n                    THREE.ShaderChunk[ \"lightmap_fragment\" ],\n                    THREE.ShaderChunk[ \"envmap_fragment\" ],\n                    THREE.ShaderChunk[ \"shadowmap_fragment\" ],\n\n                    THREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\n\n                    THREE.ShaderChunk[ \"fog_fragment\" ],\n\n                    `\n                        gl_FragColor = vec4( outgoingLight, diffuseColor.a ); // TODO, this should be pre-multiplied to allow for bright highlights on very transparent objects\n                    }\n                    `\n\n                ].join( \"\\n\" );\n\n                return fragmentShader;\n\n            },\n\n\n            // PHONG SHADER OVERRIDE FOR SHADOWS\n\n            /**\n             * Returns an array of Lambert uniforms.\n             * @param  {Array} otherUniforms\n             * @return {Array} Merged array of uniforms\n             */\n            phongUniforms: function( otherUniforms ) {\n\n                var uniforms = THREE.UniformsUtils.merge( [\n                    THREE.UniformsLib[ \"common\" ],\n                    THREE.UniformsLib[ \"aomap\" ],\n                    THREE.UniformsLib[ \"lightmap\" ],\n                    THREE.UniformsLib[ \"emissivemap\" ],\n                    THREE.UniformsLib[ \"bump\" ],\n                    THREE.UniformsLib[ \"normalmap\" ],\n                    THREE.UniformsLib[ \"fog\" ],\n                    THREE.UniformsLib[ \"lights\" ],\n                    THREE.UniformsLib[ \"shadowmap\" ],\n\n                    {\n                        \"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\n                        \"specular\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\n                        \"shininess\": { type: \"f\", value: 0 }\n                    }\n                ] );\n                return _.extend( uniforms, otherUniforms );\n\n            },\n\n            /**\n             * Generates a vertex shader for a Lambert shader.\n             */\n            phongShaderVertex: function ( customParams, customCode ) {\n                var vertexShader = [\n                    customParams,\n\n                    \"#define PHONG\",\n\n                    \"varying vec3 vViewPosition;\",\n\n                    \"#ifndef FLAT_SHADED\",\n\n                    \"   varying vec3 vNormal;\",\n\n                    \"#endif\",\n\n                    THREE.ShaderChunk[ \"common\" ],\n                    THREE.ShaderChunk[ \"uv_pars_vertex\" ],\n                    THREE.ShaderChunk[ \"uv2_pars_vertex\" ],\n                    THREE.ShaderChunk[ \"envmap_pars_vertex\" ],\n                    THREE.ShaderChunk[ \"lights_phong_pars_vertex\" ],\n                    THREE.ShaderChunk[ \"color_pars_vertex\" ],\n                    THREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\n                    THREE.ShaderChunk[ \"skinning_pars_vertex\" ],\n                    THREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\n                    THREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\n\n\n                    `void main() {`,\n\n                    customCode,\n                    THREE.ShaderChunk[ \"uv_vertex\" ],\n                    THREE.ShaderChunk[ \"uv2_vertex\" ],\n                    THREE.ShaderChunk[ \"color_vertex\" ],\n\n                    THREE.ShaderChunk[ \"morphnormal_vertex\" ],\n                    THREE.ShaderChunk[ \"skinbase_vertex\" ],\n                    THREE.ShaderChunk[ \"skinnormal_vertex\" ],\n                    THREE.ShaderChunk[ \"defaultnormal_vertex\" ],\n\n                \"#ifndef FLAT_SHADED\", // Normal computed with derivatives when FLAT_SHADED\n\n                \"   vNormal = normalize( transformedNormal );\",\n\n                \"#endif\",\n\n                    THREE.ShaderChunk[ \"morphtarget_vertex\" ],\n                    THREE.ShaderChunk[ \"skinning_vertex\" ],\n                    THREE.ShaderChunk[ \"default_vertex\" ],\n                    THREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\n\n                \"   vViewPosition = - mvPosition.xyz;\",\n\n                    THREE.ShaderChunk[ \"worldpos_vertex\" ],\n                    THREE.ShaderChunk[ \"envmap_vertex\" ],\n                    THREE.ShaderChunk[ \"lights_phong_vertex\" ],\n                    THREE.ShaderChunk[ \"shadowmap_vertex\" ],\n\n                \"}\"\n\n                ].join( \"\\n\" );\n\n                return vertexShader;\n            },\n            phongShaderFragment: function ( customParams, customCode ) {\n\n                var fragmentShader = [\n\n                    customParams,\n\n                    \"#define PHONG\",\n\n                    \"uniform vec3 diffuse;\",\n                    \"uniform vec3 emissive;\",\n                    \"uniform vec3 specular;\",\n                    \"uniform float shininess;\",\n                    \"uniform float opacity;\",\n\n                    THREE.ShaderChunk[ \"common\" ],\n                    THREE.ShaderChunk[ \"color_pars_fragment\" ],\n                    THREE.ShaderChunk[ \"uv_pars_fragment\" ],\n                    THREE.ShaderChunk[ \"uv2_pars_fragment\" ],\n                    THREE.ShaderChunk[ \"map_pars_fragment\" ],\n                    THREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\n                    THREE.ShaderChunk[ \"aomap_pars_fragment\" ],\n                    THREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\n                    THREE.ShaderChunk[ \"emissivemap_pars_fragment\" ],\n                    THREE.ShaderChunk[ \"envmap_pars_fragment\" ],\n                    THREE.ShaderChunk[ \"fog_pars_fragment\" ],\n                    THREE.ShaderChunk[ \"lights_phong_pars_fragment\" ],\n                    THREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\n                    THREE.ShaderChunk[ \"bumpmap_pars_fragment\" ],\n                    THREE.ShaderChunk[ \"normalmap_pars_fragment\" ],\n                    THREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\n                    THREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\n\n                    `\n                    void main() {\n\n                    `,\n                    \"   vec3 outgoingLight = vec3( 0.0 );\",\n                    \"   vec4 diffuseColor = vec4( diffuse, opacity );\",\n                    \"   vec3 totalAmbientLight = ambientLightColor;\",\n                    \"   vec3 totalEmissiveLight = emissive;\",\n\n                    THREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\n                    THREE.ShaderChunk[ \"map_fragment\" ],\n                    THREE.ShaderChunk[ \"color_fragment\" ],\n                    THREE.ShaderChunk[ \"specularmap_fragment\" ],\n                    THREE.ShaderChunk[ \"lightmap_fragment\" ],\n                    THREE.ShaderChunk[ \"aomap_fragment\" ],\n                    THREE.ShaderChunk[ \"emissivemap_fragment\" ],\n\n                   \n                    THREE.ShaderChunk[ \"lights_phong_fragment\" ],\n\n                    THREE.ShaderChunk[ \"envmap_fragment\" ],\n                    THREE.ShaderChunk[ \"shadowmap_fragment\" ],\n\n                    THREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\n\n                    THREE.ShaderChunk[ \"fog_fragment\" ],\n\n                    customCode, // must set gl_FragColor!\n\n                    // Really want this as the last step\n                    THREE.ShaderChunk[ \"alphamap_fragment\" ],\n                    THREE.ShaderChunk[ \"alphatest_fragment\" ],\n\n                \"   gl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\n\n                \"}\"\n\n                ].join( \"\\n\" );\n\n                return fragmentShader;\n\n            },\n\n            /**\n             * Generates a list of shaders for debugging.\n             * @return {string} all the shaders\n             */\n            allShaders: function() {\n\n                return [\n                    fp.ShaderUtils.lambertShaderVertex(\n                        fp.ShaderUtils.buildingVertexShaderParams(),\n                        fp.ShaderUtils.buildingVertexShaderMain()\n                    ),\n                    fp.ShaderUtils.lambertShaderFragment(\n                        fp.ShaderUtils.buildingFragmentShaderParams(),\n                        fp.ShaderUtils.buildingFragmentShaderMain()\n                    ),\n                    fp.ShaderUtils.lambertShaderVertex(\n                        fp.ShaderUtils.terrainVertexShaderParams(),\n                        fp.ShaderUtils.terrainVertexShaderMain()\n                    ),\n                    fp.ShaderUtils.lambertShaderFragment(\n                        fp.ShaderUtils.terrainFragmentShaderParams(),\n                        fp.ShaderUtils.terrainFragmentShaderMain()\n                    ),\n                    fp.ShaderUtils.agentVertexShader(),\n                    fp.ShaderUtils.agentFragmentShader(),\n                ].join( \"\\n\" )\n\n            }\n        }\n    }\n\n    var fp = new FiercePlanet();\n\n    if ( typeof ( window ) !== \"undefined\" ) {\n\n        window.FiercePlanet = FiercePlanet;\n        window.fp = new FiercePlanet();\n\n    }\n\n    return fp;\n\n} );\n\n"],"sourceRoot":"/source/"}